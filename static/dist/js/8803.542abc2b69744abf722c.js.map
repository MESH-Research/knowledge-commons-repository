{"version":3,"file":"js/8803.542abc2b69744abf722c.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_communities/api/invitations/InvitationsContextProvider.js","webpack://invenio-assets/./js/invenio_communities/api/invitations/api.js","webpack://invenio-assets/./js/invenio_communities/members/components/bulk_actions/RadioSelection.js","webpack://invenio-assets/./js/invenio_communities/members/components/bulk_actions/SelectedMembers.js","webpack://invenio-assets/./js/invenio_communities/routes/appUrls.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/invitationsModal/MemberSearchBar.js","webpack://invenio-assets/./js/invenio_communities/api/GroupsApi.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/invitationsModal/GroupTabPane.js","webpack://invenio-assets/./js/invenio_communities/api/UsersApi.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/invitationsModal/MembersWithRoleSelection.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/invitationsModal/InvitationsMembersModal.js"],"sourcesContent":["import { CommunityInvitationsApi } from \"./api\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const InvitationsContext = React.createContext({ api: undefined });\n\nexport class InvitationsContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    const { community } = props;\n    this.apiClient = new CommunityInvitationsApi(community);\n  }\n  render() {\n    const { children } = this.props;\n    return (\n      <InvitationsContext.Provider value={{ api: this.apiClient }}>\n        {children}\n      </InvitationsContext.Provider>\n    );\n  }\n}\n\nInvitationsContextProvider.propTypes = {\n  community: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// This file is part of Invenio-communities\n// Copyright (C) 2022 CERN.\n//\n// Invenio-communities is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { CommunityLinksExtractor } from \"../CommunityLinksExtractor\";\nimport { bulkMembersSerializer } from \"../serializers\";\nimport { http } from \"react-invenio-forms\";\n\nexport class CommunityInvitationsApi {\n  #urls;\n\n  constructor(community, LinksExtractor = CommunityLinksExtractor) {\n    this.#urls = new LinksExtractor(community);\n    this.community = community;\n  }\n\n  createInvite = async (members, role, message = undefined) => {\n    const payload = {\n      members: bulkMembersSerializer(members),\n      role: role,\n    };\n    if (message) {\n      payload.message = message;\n    }\n\n    return await http.post(this.#urls.invitations, payload);\n  };\n\n  addGroupToMembers = async (members, role, message = undefined) => {\n    const payload = {\n      members: bulkMembersSerializer(members),\n      role: role,\n    };\n    if (message) {\n      payload.message = message;\n    }\n\n    return await http.post(this.#urls.membersUrl, payload);\n  };\n\n  updateInvites = async (payload) => {\n    return await http.put(this.#urls.invitations, payload);\n  };\n\n  updateRole = async (invitation, role) => {\n    const memberSerialized = bulkMembersSerializer([invitation]);\n    const payload = { members: memberSerialized, role: role };\n    return await this.updateInvites(payload);\n  };\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Radio, Item } from \"semantic-ui-react\";\n\nexport class RadioSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected: undefined };\n  }\n\n  handleOnChange = (e, { value }) => {\n    const { onOptionChangeCallback } = this.props;\n    this.setState({ selected: value });\n    onOptionChangeCallback(value);\n  };\n\n  render() {\n    const { options, label } = this.props;\n    const { selected } = this.state;\n\n    return (\n      <Form.Field required>\n        <label>{label}</label>\n        <Item.Group className=\"mt-10\">\n          {options.map((option) => (\n            <Item key={option.name}>\n              <Item.Content>\n                <Item.Header>\n                  <Form.Field>\n                    <Radio\n                      onClick={this.handleOnChange}\n                      label={option.title}\n                      aria-label={option.title}\n                      value={option.name}\n                      checked={selected === option.name}\n                      name=\"membersRoles\"\n                      key={option.name}\n                    />\n                  </Form.Field>\n                </Item.Header>\n                <Item.Meta className=\"ml-25 mt-0\">{option.description}</Item.Meta>\n              </Item.Content>\n            </Item>\n          ))}\n        </Item.Group>\n      </Form.Field>\n    );\n  }\n}\n\nRadioSelection.propTypes = {\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  onOptionChangeCallback: PropTypes.func.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport { Button, Header, Icon, Label, Segment } from \"semantic-ui-react\";\n\nexport class SelectedMembers extends Component {\n  removeMember = (id) => {\n    const { selectedMembers, updateSelectedMembers } = this.props;\n    delete selectedMembers[id];\n    updateSelectedMembers(selectedMembers);\n  };\n\n  render() {\n    const { selectedMembers, displayingGroups } = this.props;\n\n    return !_isEmpty(selectedMembers) ? (\n      <Segment className=\"selected-members-header mb-20 mr-20\">\n        {Object.entries(selectedMembers).map(([memberId, member]) => (\n          <Button\n            key={memberId}\n            className=\"p-0 mr-10 mb-5 mt-5\"\n            onClick={() => this.removeMember(memberId)}\n            type=\"button\"\n            aria-label={i18next.t(\"remove {{name}}\", {\n              name: member.name,\n            })}\n          >\n            <Label image>\n              <Image src={member.avatar} alt=\"\" aria-hidden />\n              {member.name}\n              <Icon name=\"delete\" />\n            </Label>\n          </Button>\n        ))}\n      </Segment>\n    ) : (\n      <Segment textAlign=\"center\" className=\"selected-members-header mb-20\" placeholder>\n        <Header disabled>\n          {displayingGroups\n            ? i18next.t(\"Selected groups\")\n            : i18next.t(\"Selected members\")}\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nSelectedMembers.propTypes = {\n  selectedMembers: PropTypes.object.isRequired,\n  updateSelectedMembers: PropTypes.func.isRequired,\n  displayingGroups: PropTypes.bool,\n};\n\nSelectedMembers.defaultProps = {\n  displayingGroups: false,\n};\n","import { generatePath } from \"react-router-dom\";\n\nconst CommunitiesRoutesBase = \"/communities\";\n\nexport const InvenioCommunitiesRoutesList = {\n  home: CommunitiesRoutesBase,\n  newCommunity: `${CommunitiesRoutesBase}/new`,\n  membersList: `${CommunitiesRoutesBase}/:communityId/members`,\n};\n\nexport const InvenioCommunitiesRoutesGenerator = {\n  membersList: (communityId) =>\n    generatePath(InvenioCommunitiesRoutesList.membersList, {\n      communityId: communityId,\n    }),\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image, withCancel } from \"react-invenio-forms\";\nimport { Dropdown, List } from \"semantic-ui-react\";\nimport _truncate from \"lodash/truncate\";\n\nexport class MembersSearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFetching: false,\n      error: false,\n      suggestions: [],\n    };\n  }\n\n  serializeMemberName = (person) => {\n    const name = person.profile?.full_name;\n\n    const displayName = name\n      ? `${name} <${person.email || person.username}>`\n      : person.email\n      ? `${person.email} <${person.username}>`\n      : `<${person.username}>`;\n\n    return displayName;\n  };\n\n  serializeUsersForDropdown = (users) => {\n    return users.map((person) => {\n      return {\n        text: person.id,\n        value: person.id,\n        key: person.id,\n        content: (\n          <List divided relaxed key={person.id}>\n            <List.Item key={person.id}>\n              <Image size=\"mini\" src={person.links.avatar} avatar />\n              <List.Content>\n                <List.Header as=\"a\">{this.serializeMemberName(person)}</List.Header>\n                <List.Description>{person.profile.affiliations}</List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        ),\n      };\n    });\n  };\n\n  serializeGroupsForDropdown = (groups) => {\n    return groups.map((group) => {\n      return {\n        text: group.id,\n        value: group.id,\n        key: group.id,\n        content: (\n          <List divided relaxed>\n            <List.Item>\n              <Image size=\"mini\" src={group.links.avatar} avatar />\n              <List.Content>\n                <List.Header as=\"a\">{group.name}</List.Header>\n                <List.Description>\n                  {_truncate(group.description, { length: 30 })}\n                </List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        ),\n      };\n    });\n  };\n\n  optionsGenerator = (suggestions) => {\n    const { searchType } = this.props;\n    const serializer = {\n      user: this.serializeUsersForDropdown,\n      group: this.serializeGroupsForDropdown,\n    };\n    return serializer[searchType](suggestions);\n  };\n\n  onChange = (event, data) => {\n    const { handleChange, selectedMembers, searchType } = this.props;\n    const { suggestions } = this.state;\n\n    if (data.value.length === 0) return;\n\n    const selectedValue = data.value[0];\n    const memberAlreadySelected = selectedValue in selectedMembers;\n\n    if (memberAlreadySelected) return;\n\n    const newSelectedMember = suggestions.find((item) => item.id === selectedValue);\n\n    const serializedSelectedMember = {\n      id: newSelectedMember.id,\n      type: searchType,\n      avatar: newSelectedMember?.links?.avatar,\n    };\n\n    if (searchType === \"group\") {\n      serializedSelectedMember[\"name\"] = newSelectedMember.name; // The schema will pass the id if the name is missing\n    } else {\n      serializedSelectedMember[\"name\"] = this.serializeMemberName(newSelectedMember);\n    }\n    selectedMembers[serializedSelectedMember.id] = serializedSelectedMember;\n    handleChange(selectedMembers);\n  };\n\n  onSearchChange = async (event, { searchQuery }) => {\n    const { fetchMembers } = this.props;\n    try {\n      this.setState({ isFetching: true });\n\n      const cancellableSuggestions = withCancel(fetchMembers(searchQuery));\n      const suggestions = await cancellableSuggestions.promise;\n      this.setState({\n        isFetching: false,\n        suggestions: suggestions.data.hits.hits,\n        error: false,\n      });\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        isFetching: false,\n        error: true,\n      });\n    }\n  };\n\n  // the \"search\" was already done in the backend,\n  // so we just return all options\n  handleSearch = (options, query) => {\n    return options;\n  };\n\n  render() {\n    const { isFetching, error, suggestions } = this.state;\n    const { placeholder } = this.props;\n    return (\n      <Dropdown\n        selectOnBlur={false}\n        error={error}\n        fluid\n        loading={isFetching}\n        onSearchChange={this.onSearchChange}\n        onChange={this.onChange}\n        search={this.handleSearch}\n        options={this.optionsGenerator(suggestions)}\n        selection\n        multiple\n        value={[]}\n        icon=\"search\"\n        placeholder={placeholder}\n      />\n    );\n  }\n}\n\nMembersSearchBar.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  selectedMembers: PropTypes.object.isRequired,\n  fetchMembers: PropTypes.func.isRequired,\n  searchType: PropTypes.oneOf([\"group\", \"user\"]).isRequired,\n  placeholder: PropTypes.string,\n};\n\nMembersSearchBar.defaultProps = {\n  placeholder: i18next.t(\"Search...\"),\n};\n","// This file is part of Invenio-communities\n// Copyright (C) 2022 CERN.\n//\n// Invenio-communities is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { http } from \"react-invenio-forms\";\n\nexport class GroupsApi {\n  get endpoint() {\n    return `/api/groups`;\n  }\n\n  getGroups = async (query) => {\n    return await http.get(`${this.endpoint}?q=${query}`);\n  };\n}\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { SelectedMembers } from \"@js/invenio_communities/members/components/bulk_actions/SelectedMembers\";\nimport { RadioSelection } from \"@js/invenio_communities/members/components/bulk_actions/RadioSelection\";\nimport { ErrorMessage } from \"@js/invenio_communities/members/components/ErrorMessage\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Form, Button } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { MembersSearchBar } from \"./MemberSearchBar\";\nimport { GroupsApi } from \"../../../api/GroupsApi\";\nimport { Trans } from \"react-i18next\";\nimport { RichEditor } from \"react-invenio-forms\";\n\nexport class GroupTabPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      role: undefined,\n      selectedMembers: {},\n      message: undefined,\n      loading: false,\n      error: undefined,\n    };\n  }\n\n  updateSelectedMembers = (members) => {\n    this.setState({ selectedMembers: members });\n  };\n\n  addMemberToSelected = (member) => {\n    const { selectedMembers } = this.state;\n    this.setState({ selectedMembers: { ...selectedMembers, ...member } });\n  };\n\n  handleRoleUpdate = (role) => {\n    this.setState({ role: role });\n  };\n\n  handleActionClick = async () => {\n    const { action, onSuccessCallback } = this.props;\n    const { selectedMembers, role, message } = this.state;\n    this.setState({ loading: true, error: undefined });\n    try {\n      await action(selectedMembers, role, message);\n      this.setState({ loading: false });\n      onSuccessCallback();\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  render() {\n    const { roleOptions, modalClose } = this.props;\n    const { selectedMembers, loading, error } = this.state;\n    const selectedCount = Object.keys(selectedMembers).length;\n\n    const client = new GroupsApi();\n\n    return (\n      <>\n        <div className=\"rel-pl-2 rel-pr-2 rel-pb-2 rel-pt-2\">\n          {error && <ErrorMessage error={error} />}\n          <SelectedMembers\n            updateSelectedMembers={this.updateSelectedMembers}\n            selectedMembers={selectedMembers}\n            displayingGroups\n          />\n          <Form>\n            <Form.Field>\n              <label>{i18next.t(\"Group\")}</label>\n              <MembersSearchBar\n                fetchMembers={client.getGroups}\n                selectedMembers={selectedMembers}\n                handleChange={this.addMemberToSelected}\n                searchType=\"group\"\n                placeholder={i18next.t(\"Search for groups\")}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <RadioSelection\n                options={roleOptions}\n                label={i18next.t(\"Role\")}\n                onOptionChangeCallback={this.handleRoleUpdate}\n              />\n            </Form.Field>\n            <Form.Field disabled>\n              <>\n                <label>{i18next.t(\"Message\")}</label>\n                <RichEditor />\n              </>\n            </Form.Field>\n          </Form>\n        </div>\n        <Modal.Actions>\n          <Button\n            content={i18next.t(\"Cancel\")}\n            labelPosition=\"left\"\n            icon=\"cancel\"\n            loading={loading}\n            disabled={loading}\n            floated=\"left\"\n            onClick={modalClose}\n          />\n          {selectedCount > 0 && (\n            <Trans key=\"communityInviteMembersSelected\" count={selectedCount}>\n              You are about to add {{ selectedCount }} groups.\n            </Trans>\n          )}\n\n          <Button\n            content={i18next.t(\"Add\")}\n            labelPosition=\"left\"\n            loading={loading}\n            disabled={loading || selectedCount === 0}\n            icon=\"checkmark\"\n            primary\n            onClick={this.handleActionClick}\n          />\n        </Modal.Actions>\n      </>\n    );\n  }\n}\n\nGroupTabPane.propTypes = {\n  roleOptions: PropTypes.array.isRequired,\n  modalClose: PropTypes.func.isRequired,\n  action: PropTypes.func.isRequired,\n  onSuccessCallback: PropTypes.func.isRequired,\n};\n","// This file is part of Invenio-communities\n// Copyright (C) 2022 CERN.\n//\n// Invenio-communities is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { http } from \"react-invenio-forms\";\n\nexport class UsersApi {\n  get endpoint() {\n    return `/api/users`;\n  }\n\n  getUsers = async (query) => {\n    return await http.get(`${this.endpoint}?q=${query}`);\n  };\n}\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { RadioSelection } from \"@js/invenio_communities/members/components/bulk_actions/RadioSelection\";\nimport { ErrorMessage } from \"@js/invenio_communities/members/components/ErrorMessage\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Button, Form, Modal } from \"semantic-ui-react\";\nimport { UsersApi } from \"../../../api/UsersApi\";\nimport { SelectedMembers } from \"../../components/bulk_actions/SelectedMembers\";\nimport { MembersSearchBar } from \"./MemberSearchBar\";\nimport { RichEditor } from \"react-invenio-forms\";\n\nexport class MembersWithRoleSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.usersApi = new UsersApi();\n    this.state = {\n      role: undefined,\n      selectedMembers: {},\n      message: undefined,\n      loading: false,\n      error: undefined,\n    };\n  }\n\n  updateSelectedMembers = (members) => {\n    this.setState({ selectedMembers: members });\n  };\n\n  addMemberToSelected = (member) => {\n    const { selectedMembers } = this.state;\n    this.setState({ selectedMembers: { ...selectedMembers, ...member } });\n  };\n\n  handleRoleUpdate = (role) => {\n    this.setState({ role: role });\n  };\n\n  updateMessage = (message) => {\n    this.setState({ message: message });\n  };\n\n  handleActionClick = async () => {\n    const { action, onSuccessCallback } = this.props;\n    const { selectedMembers, role, message } = this.state;\n    this.setState({ loading: true, error: undefined });\n    try {\n      await action(selectedMembers, role, message);\n      this.setState({ loading: false });\n      onSuccessCallback();\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  render() {\n    const { roleOptions, modalClose } = this.props;\n    const { selectedMembers, loading, error } = this.state;\n    const selectedCount = Object.keys(selectedMembers).length;\n\n    return (\n      <>\n        <div className=\"rel-pl-2 rel-pr-2 rel-pb-2 rel-pt-2\">\n          {error && <ErrorMessage error={error} />}\n          <SelectedMembers\n            updateSelectedMembers={this.updateSelectedMembers}\n            selectedMembers={selectedMembers}\n            displayingGroups={false}\n          />\n          <Form>\n            <Form.Field>\n              <label>{i18next.t(\"Member\")}</label>\n              <MembersSearchBar\n                fetchMembers={this.usersApi.getUsers}\n                selectedMembers={selectedMembers}\n                handleChange={this.addMemberToSelected}\n                searchType=\"user\"\n                placeholder={i18next.t(\"Search by email, full name or username\")}\n              />\n              <label className=\"helptext rel-mt-1\">\n                {i18next.t(\n                  'Users must set profile visibility to \"Public\" in order to be invited to a community.'\n                )}\n              </label>\n            </Form.Field>\n            <RadioSelection\n              options={roleOptions}\n              label={i18next.t(\"Role\")}\n              onOptionChangeCallback={this.handleRoleUpdate}\n            />\n            <Form.Field>\n              <>\n                <label>{i18next.t(\"Message\")}</label>\n                <RichEditor\n                  onBlur={(event, editor) => {\n                    this.updateMessage(editor.getContent());\n                  }}\n                />\n              </>\n            </Form.Field>\n          </Form>\n        </div>\n        <Modal.Actions>\n          <Button\n            content={i18next.t(\"Cancel\")}\n            labelPosition=\"left\"\n            icon=\"cancel\"\n            loading={loading}\n            disabled={loading}\n            floated=\"left\"\n            onClick={modalClose}\n          />\n          {selectedCount > 0 && (\n            <Trans key=\"communityInviteMembersSelected\" count={selectedCount}>\n              You are about to invite {{ selectedCount }} users\n            </Trans>\n          )}\n          <Button\n            content={i18next.t(\"Invite\")}\n            labelPosition=\"left\"\n            loading={loading}\n            disabled={loading || selectedCount === 0}\n            icon=\"checkmark\"\n            primary\n            onClick={this.handleActionClick}\n          />\n        </Modal.Actions>\n      </>\n    );\n  }\n}\n\nMembersWithRoleSelection.propTypes = {\n  roleOptions: PropTypes.array.isRequired,\n  modalClose: PropTypes.func.isRequired,\n  action: PropTypes.func.isRequired,\n  onSuccessCallback: PropTypes.func.isRequired,\n};\n\nMembersWithRoleSelection.defaultProps = {};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { InvenioCommunitiesRoutesGenerator } from \"../../../routes/appUrls\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Button, Container, Modal, Tab } from \"semantic-ui-react\";\nimport { InvitationsContext } from \"../../../api/invitations/InvitationsContextProvider\";\nimport { GroupTabPane } from \"./GroupTabPane\";\nimport { MembersWithRoleSelection } from \"./MembersWithRoleSelection\";\n\nexport class InvitationsMembersModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      activeIndex: 0, // by default members is the active pane\n    };\n  }\n\n  static contextType = InvitationsContext;\n\n  onMemberSuccess = () => {\n    const { updateQueryState, currentQueryState } = this.props;\n    updateQueryState(currentQueryState);\n    this.handleCloseModal();\n  };\n\n  onGroupSuccess = () => {\n    const { community } = this.props;\n    window.location = InvenioCommunitiesRoutesGenerator.membersList(community.slug);\n  };\n\n  getPanes = () => {\n    const { groupsEnabled, rolesCanInvite } = this.props;\n    const { activeIndex } = this.state;\n    const { api } = this.context;\n    const userRoles = rolesCanInvite[\"user\"];\n    const peopleTab = {\n      menuItem: (\n        <Button\n          role=\"tab\"\n          className=\"item\"\n          id=\"members-users-tab\"\n          aria-controls=\"members-users-tab-panel\"\n          aria-selected={activeIndex === 0}\n        >\n          {i18next.t(\"People\")}\n        </Button>\n      ),\n      pane: (\n        <Tab.Pane\n          role=\"tabpanel\"\n          id=\"members-users-tab-panel\"\n          aria-labelledby=\"members-users-tab\"\n          key=\"members-users\"\n          as={Container}\n        >\n          <MembersWithRoleSelection\n            key=\"members-users\"\n            roleOptions={userRoles}\n            modalClose={this.handleCloseModal}\n            action={api.createInvite}\n            onSuccessCallback={this.onMemberSuccess}\n          />\n        </Tab.Pane>\n      ),\n    };\n\n    const groupRoles = rolesCanInvite[\"group\"];\n    const groupsTab = {\n      menuItem: (\n        <Button\n          role=\"tab\"\n          className=\"item\"\n          id=\"members-group-tab\"\n          aria-controls=\"members-groups-tab-panel\"\n          aria-selected={activeIndex === 1}\n        >\n          {i18next.t(\"Groups\")}\n        </Button>\n      ),\n      pane: (\n        <Tab.Pane\n          role=\"tabpanel\"\n          id=\"members-groups-tab-panel\"\n          aria-labelledby=\"members-groups-tab\"\n          key=\"members-groups\"\n          as={Container}\n        >\n          <GroupTabPane\n            modalClose={this.handleCloseModal}\n            roleOptions={groupRoles}\n            action={api.addGroupToMembers}\n            onSuccessCallback={this.onGroupSuccess}\n          />\n        </Tab.Pane>\n      ),\n      action: { label: i18next.t(\"Invite groups\") },\n    };\n    return groupsEnabled ? [peopleTab, groupsTab] : [peopleTab];\n  };\n\n  handleCloseModal = () => this.setState({ open: false });\n\n  handleOpenModal = () => {\n    this.setState({ open: true }, () => {\n      const membersTab = document.getElementById(\"members-users-tab\");\n      membersTab.focus();\n    });\n  };\n\n  handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n  render() {\n    const { open, activeIndex } = this.state;\n    const { triggerButtonSize } = this.props;\n    return (\n      <Modal\n        role=\"dialog\"\n        onClose={this.handleCloseModal}\n        onOpen={this.handleOpenModal}\n        closeOnDimmerClick={false}\n        open={open}\n        aria-label={i18next.t(\"Invite members\")}\n        trigger={\n          <Button\n            className=\"fluid-responsive\"\n            content={i18next.t(\"Invite...\")}\n            positive\n            fluid\n            compact\n            size={triggerButtonSize}\n            icon=\"user plus\"\n            labelPosition=\"left\"\n            aria-expanded={open}\n            aria-haspopup=\"dialog\"\n          />\n        }\n      >\n        <Modal.Header as=\"h2\">\n          {activeIndex === 0 ? i18next.t(\"Invite members\") : i18next.t(\"Add groups\")}\n        </Modal.Header>\n        <Tab\n          menu={{\n            className: \"rel-pl-2 rel-pt-2\",\n            tabular: true,\n            role: \"tablist\",\n          }}\n          activeIndex={activeIndex}\n          panes={this.getPanes()}\n          renderActiveOnly={false}\n          onTabChange={this.handleTabChange}\n        />\n      </Modal>\n    );\n  }\n}\n\nInvitationsMembersModal.propTypes = {\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  groupsEnabled: PropTypes.bool.isRequired,\n  community: PropTypes.object.isRequired,\n  triggerButtonSize: PropTypes.string,\n};\n\nInvitationsMembersModal.defaultProps = {\n  triggerButtonSize: \"medium\",\n};\n\nexport const InvitationsMembersModalWithSearchKit = withState(InvitationsMembersModal);\n"],"names":["InvitationsContext","React","api","undefined","InvitationsContextProvider","_Component","props","_this","_classCallCheck","_callSuper","community","apiClient","CommunityInvitationsApi","_inherits","_createClass","key","value","children","this","Provider","Component","propTypes","PropTypes","isRequired","_urls","WeakMap","LinksExtractor","arguments","length","CommunityLinksExtractor","_classPrivateFieldInitSpec","_defineProperty","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","members","role","message","payload","_args","_context","prev","next","bulkMembersSerializer","http","post","_classPrivateFieldGet","invitations","abrupt","sent","stop","_x","_x2","apply","_ref2","_callee2","_args2","_context2","membersUrl","_x3","_x4","_ref3","_callee3","_context3","put","_x5","_ref4","_callee4","invitation","memberSerialized","_context4","updateInvites","_x6","_x7","RadioSelection","e","onOptionChangeCallback","setState","selected","state","_this2","_this$props","options","label","Form","Field","required","Item","Group","className","map","option","name","Content","Header","Radio","onClick","handleOnChange","title","checked","Meta","description","SelectedMembers","_len","args","Array","_key","concat","id","selectedMembers","updateSelectedMembers","_this$props2","displayingGroups","_isEmpty","Segment","textAlign","placeholder","disabled","i18next","t","Object","entries","_slicedToArray","memberId","member","Button","removeMember","type","Label","image","Image","src","avatar","alt","Icon","defaultProps","CommunitiesRoutesBase","InvenioCommunitiesRoutesList","home","newCommunity","membersList","InvenioCommunitiesRoutesGenerator","communityId","generatePath","MembersSearchBar","person","_person$profile","profile","full_name","email","username","users","text","content","List","divided","relaxed","size","links","as","serializeMemberName","Description","affiliations","groups","group","_truncate","suggestions","searchType","user","serializeUsersForDropdown","serializeGroupsForDropdown","event","data","_newSelectedMember$li","handleChange","selectedValue","newSelectedMember","find","item","serializedSelectedMember","searchQuery","fetchMembers","cancellableSuggestions","isFetching","withCancel","promise","hits","error","t0","console","query","_this$state","Dropdown","selectOnBlur","fluid","loading","onSearchChange","onChange","search","handleSearch","optionsGenerator","selection","multiple","icon","GroupsApi","get","endpoint","GroupTabPane","_objectSpread","action","onSuccessCallback","roleOptions","modalClose","_this$state2","selectedCount","keys","client","ErrorMessage","getGroups","addMemberToSelected","handleRoleUpdate","RichEditor","Modal","Actions","labelPosition","floated","Trans","count","primary","handleActionClick","UsersApi","MembersWithRoleSelection","usersApi","getUsers","onBlur","editor","updateMessage","getContent","InvitationsMembersModal","updateQueryState","currentQueryState","handleCloseModal","window","location","slug","groupsEnabled","rolesCanInvite","activeIndex","context","userRoles","peopleTab","menuItem","pane","Tab","Pane","Container","createInvite","onMemberSuccess","groupRoles","groupsTab","addGroupToMembers","onGroupSuccess","open","document","getElementById","focus","triggerButtonSize","onClose","onOpen","handleOpenModal","closeOnDimmerClick","trigger","positive","compact","menu","tabular","panes","getPanes","renderActiveOnly","onTabChange","handleTabChange","InvitationsMembersModalWithSearchKit","withState"],"sourceRoot":""}