{"version":3,"file":"js/invenio-app-rdm-user-communities.efb2b917f7e7ea9642a2.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/user_dashboard/base.js","webpack://invenio-assets/./js/invenio_app_rdm/user_dashboard/communities.js"],"sourcesContent":["// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  SearchAppFacets,\n  SearchAppResultsPane,\n  InvenioSearchPagination,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport { ResultsList, SearchBar, Sort, buildUID } from \"react-searchkit\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\n\nexport function DashboardResultView(props) {\n  const { sortOptions, paginationOptions, currentResultsState, appName } = props;\n  const { total } = currentResultsState.data;\n  return (\n    total && (\n      <Grid>\n        <Overridable\n          id={buildUID(\"ResultView.resultList\", \"\", appName)}\n          sortOptions={sortOptions}\n          paginationOptions={paginationOptions}\n          currentResultsState={currentResultsState}\n          appName={appName}\n        >\n          <Grid.Row>\n            <Grid.Column>\n              <ResultsList />\n            </Grid.Column>\n          </Grid.Row>\n        </Overridable>\n\n        <Overridable\n          id={buildUID(\"ResultView.resultFooter\", \"\", appName)}\n          sortOptions={sortOptions}\n          paginationOptions={paginationOptions}\n          currentResultsState={currentResultsState}\n          appName={appName}\n        >\n          <InvenioSearchPagination\n            total={total}\n            paginationOptions={paginationOptions}\n          />\n        </Overridable>\n      </Grid>\n    )\n  );\n}\n\nDashboardResultView.propTypes = {\n  sortOptions: PropTypes.array.isRequired,\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nDashboardResultView.defaultProps = {\n  appName: \"\",\n};\n\nexport const DashboardSearchLayoutHOC = ({\n  searchBarPlaceholder = \"\",\n  appName = undefined,\n}) => {\n  const DashboardUploadsSearchLayout = (props) => {\n    const [sidebarVisible, setSidebarVisible] = React.useState(false);\n    const { config } = props;\n\n    return (\n      <Grid>\n        <Overridable\n          id={buildUID(\"SearchLayout.searchHeader\", \"\", appName)}\n          sortOptions={config.sortOptions}\n          appName={appName}\n        >\n          <>\n            {/* Mobile/tablet search header */}\n            <Grid.Row className=\"mobile tablet only\">\n              <Grid.Column mobile={2} tablet={1} verticalAlign=\"middle\">\n                <Button\n                  basic\n                  icon=\"sliders\"\n                  onClick={() => setSidebarVisible(true)}\n                  aria-label={i18next.t(\"Filter results\")}\n                />\n              </Grid.Column>\n              <Grid.Column\n                mobile={14}\n                tablet={10}\n                verticalAlign=\"middle\"\n                floated=\"right\"\n              >\n                <SearchBar placeholder={searchBarPlaceholder} />\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row className=\"mobile tablet only\">\n              <Grid.Column width={16} textAlign=\"right\">\n                {config.sortOptions && (\n                  <Sort\n                    values={config.sortOptions}\n                    label={(cmp) => (\n                      <>\n                        <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                        {cmp}\n                      </>\n                    )}\n                  />\n                )}\n              </Grid.Column>\n            </Grid.Row>\n            {/* End mobile/tablet search header */}\n\n            {/* Desktop search header */}\n            <Grid.Row className=\"computer only\">\n              <Grid.Column width={8} floated=\"right\">\n                <SearchBar placeholder={searchBarPlaceholder} />\n              </Grid.Column>\n\n              <Grid.Column width={4} textAlign=\"right\">\n                {config.sortOptions && (\n                  <Sort\n                    values={config.sortOptions}\n                    label={(cmp) => (\n                      <>\n                        <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                        {cmp}\n                      </>\n                    )}\n                  />\n                )}\n              </Grid.Column>\n            </Grid.Row>\n            {/* End desktop search header */}\n          </>\n        </Overridable>\n\n        <Grid.Row>\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n          >\n            <SearchAppFacets aggs={config.aggs} appName={appName} />\n          </GridResponsiveSidebarColumn>\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  };\n\n  DashboardUploadsSearchLayout.propTypes = {\n    config: PropTypes.object.isRequired,\n  };\n\n  return DashboardUploadsSearchLayout;\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport {\n  CommunityItem,\n  ResultsGridItemTemplate,\n  CommunitiesEmptySearchResults,\n} from \"@js/invenio_communities/community\";\nimport { RDMRecordSearchBarElement } from \"../search/components\";\nimport { DashboardResultView, DashboardSearchLayoutHOC } from \"./base\";\nimport {\n  ContribSearchAppFacets,\n  ContribBucketAggregationElement,\n  ContribBucketAggregationValuesElement,\n} from \"@js/invenio_search_ui/components\";\nimport { overrideStore, parametrize } from \"react-overridable\";\n\nexport const appName = \"InvenioAppRdm.DashboardCommunities\";\n\nexport const DashboardCommunitiesSearchLayout = DashboardSearchLayoutHOC({\n  searchBarPlaceholder: i18next.t(\"Search in my communities...\"),\n  appName: appName,\n});\n\nconst DashboardResultViewWAppName = parametrize(DashboardResultView, {\n  appName: appName,\n});\n\nexport const defaultComponents = {\n  [`${appName}.BucketAggregation.element`]: ContribBucketAggregationElement,\n  [`${appName}.BucketAggregationValues.element`]: ContribBucketAggregationValuesElement,\n  [`${appName}.EmptyResults.element`]: CommunitiesEmptySearchResults,\n  [`${appName}.SearchApp.facets`]: ContribSearchAppFacets,\n  [`${appName}.ResultsList.item`]: CommunityItem,\n  [`${appName}.ResultsGrid.item`]: ResultsGridItemTemplate,\n  [`${appName}.SearchApp.layout`]: DashboardCommunitiesSearchLayout,\n  [`${appName}.SearchApp.results`]: DashboardResultViewWAppName,\n  [`${appName}.SearchBar.element`]: RDMRecordSearchBarElement,\n};\nconst overriddenComponents = overrideStore.getAll();\n\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true\n);\n"],"names":["DashboardResultView","props","sortOptions","paginationOptions","currentResultsState","appName","total","data","React","Grid","Overridable","id","buildUID","Row","Column","ResultsList","InvenioSearchPagination","propTypes","PropTypes","isRequired","defaultProps","DashboardSearchLayoutHOC","_ref","_ref$searchBarPlaceho","searchBarPlaceholder","_ref$appName","undefined","DashboardUploadsSearchLayout","_React$useState","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","config","className","mobile","tablet","verticalAlign","Button","basic","icon","onClick","i18next","t","floated","SearchBar","placeholder","width","textAlign","Sort","values","label","cmp","GridResponsiveSidebarColumn","open","onHideClick","SearchAppFacets","aggs","computer","SearchAppResultsPane","layoutOptions","DashboardCommunitiesSearchLayout","DashboardResultViewWAppName","parametrize","defaultComponents","_defineProperty","concat","ContribBucketAggregationElement","ContribBucketAggregationValuesElement","CommunitiesEmptySearchResults","ContribSearchAppFacets","CommunityItem","ResultsGridItemTemplate","RDMRecordSearchBarElement","overriddenComponents","overrideStore","getAll","createSearchAppInit","_objectSpread"],"sourceRoot":""}