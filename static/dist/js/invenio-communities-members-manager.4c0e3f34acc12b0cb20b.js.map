{"version":3,"file":"js/invenio-communities-members-manager.4c0e3f34acc12b0cb20b.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_communities/members/members/manager_view/ManagerSearchLayout.js","webpack://invenio-assets/./js/invenio_communities/members/members/manager_view/ManagerEmptyResults.js","webpack://invenio-assets/./js/invenio_communities/members/components/bulk_actions/SearchResultsBulkActions.js","webpack://invenio-assets/./js/invenio_communities/members/members/manager_view/ManagerMemberBulkActions.js","webpack://invenio-assets/./js/invenio_communities/members/members/manager_view/ManagerMembersResultContainer.js","webpack://invenio-assets/./js/invenio_communities/members/members/manager_view/index.js"],"sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SearchAppResultsPane } from \"@js/invenio_search_ui/components\";\nimport { Filters } from \"../../Filters\";\nimport { FilterLabels } from \"../../components/FilterLabels\";\nimport { SearchFilters } from \"@js/invenio_search_ui/components\";\nimport { SearchBar, Sort } from \"react-searchkit\";\nimport { InvitationsContextProvider } from \"../../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"../../invitations/invitationsModal/InvitationsMembersModal\";\n\nexport class ManagerSearchLayout extends Component {\n  render() {\n    const {\n      config,\n      roles,\n      rolesCanInvite,\n      community,\n      communityGroupsEnabled,\n      appName,\n    } = this.props;\n    const filtersClass = new Filters(roles);\n    const customFilters = filtersClass.getMembersFilters();\n    return (\n      <>\n        {/* auto column grid used instead of SUI grid for better searchbar width adjustment */}\n        <div className=\"auto-column-grid\">\n          <div>\n            <div className=\"mobile only rel-mb-1\">\n              <InvitationsContextProvider community={community}>\n                <InvitationsMembersModalWithSearchKit\n                  rolesCanInvite={rolesCanInvite}\n                  groupsEnabled={communityGroupsEnabled}\n                  community={community}\n                />\n              </InvitationsContextProvider>\n            </div>\n            <SearchBar fluid />\n          </div>\n\n          <div className=\"flex align-items-center column-mobile\">\n            <div className=\"tablet only\">\n              <InvitationsContextProvider community={community}>\n                <InvitationsMembersModalWithSearchKit\n                  rolesCanInvite={rolesCanInvite}\n                  groupsEnabled={communityGroupsEnabled}\n                  community={community}\n                />\n              </InvitationsContextProvider>\n            </div>\n\n            <div className=\"full-width flex align-items-center justify-end column-mobile\">\n              <SearchFilters customFilters={customFilters} />\n              <Sort values={config.sortOptions} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"rel-mb-1\">\n          <FilterLabels />\n        </div>\n\n        <SearchAppResultsPane layoutOptions={config.layoutOptions} appName={appName} />\n      </>\n    );\n  }\n}\n\nManagerSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n  appName: PropTypes.string,\n};\n\nManagerSearchLayout.defaultProps = {\n  appName: \"\",\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Header, Icon, Segment, Grid } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { InvitationsContextProvider } from \"../../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"../../invitations/invitationsModal/InvitationsMembersModal\";\n\nclass ManagerEmptyResultsCmp extends Component {\n  render() {\n    const {\n      resetQuery,\n      extraContent,\n      queryString,\n      community,\n      communityGroupsEnabled,\n      rolesCanInvite,\n    } = this.props;\n\n    return (\n      <Segment.Group>\n        <Segment as={Grid} className=\"computer only\">\n          <Grid.Column width=\"13\" />\n          <Grid.Column width=\"3\">\n            <InvitationsContextProvider community={community}>\n              <InvitationsMembersModalWithSearchKit\n                rolesCanInvite={rolesCanInvite}\n                groupsEnabled={communityGroupsEnabled}\n                community={community}\n              />\n            </InvitationsContextProvider>\n          </Grid.Column>\n        </Segment>\n        <Segment placeholder textAlign=\"center\">\n          <Header icon>\n            <Icon name=\"search\" />\n            {i18next.t(\"No matching members found.\")}\n          </Header>\n          {queryString && (\n            <p>\n              <em>\n                {i18next.t(\"Current search\")} \"{queryString}\"\n              </em>\n            </p>\n          )}\n          <Button primary onClick={() => resetQuery()}>\n            {i18next.t(\"Clear query\")}\n          </Button>\n          {extraContent}\n        </Segment>\n      </Segment.Group>\n    );\n  }\n}\n\nManagerEmptyResultsCmp.propTypes = {\n  resetQuery: PropTypes.func.isRequired,\n  queryString: PropTypes.string.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n  extraContent: PropTypes.node,\n};\n\nManagerEmptyResultsCmp.defaultProps = {\n  extraContent: null,\n};\n\nexport const ManagerEmptyResults = withState(ManagerEmptyResultsCmp);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { Checkbox, Dropdown } from \"semantic-ui-react\";\nimport { BulkActionsContext } from \"./context\";\nimport Overridable from \"react-overridable\";\nimport _pickBy from \"lodash/pickBy\";\n\nexport class SearchResultsBulkActions extends Component {\n  constructor(props) {\n    super(props);\n    const { allSelected } = this.props;\n    this.state = { allSelectedChecked: allSelected };\n  }\n\n  componentDidMount() {\n    const { allSelected } = this.context;\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ allSelectedChecked: allSelected });\n  }\n\n  static contextType = BulkActionsContext;\n\n  handleOnChange = () => {\n    const { setAllSelected, allSelected } = this.context;\n    this.setState({ allSelectedChecked: !allSelected });\n    setAllSelected(!allSelected, true);\n  };\n\n  handleActionOnChange = (e, { value, ...props }) => {\n    if (!value) return;\n\n    const { optionSelectionCallback } = this.props;\n\n    const { selectedCount, bulkActionContext } = this.context;\n    const selected = _pickBy(bulkActionContext, ({ selected }) => selected === true);\n    optionSelectionCallback(value, selected, selectedCount);\n  };\n\n  render() {\n    const { bulkDropdownOptions } = this.props;\n    const { allSelectedChecked } = this.state;\n    const { allSelected, selectedCount } = this.context;\n\n    const noneSelected = selectedCount === 0;\n\n    const dropdownOptions = bulkDropdownOptions.map(({ key, value, text }) => ({\n      key: key,\n      value: value,\n      text: text,\n      disabled: noneSelected,\n    }));\n\n    return (\n      <Overridable id=\"InvenioCommunities.SearchResultsBulkActionsManager.layout\">\n        <div className=\"flex\">\n          <Checkbox\n            className=\"align-self-center mr-10\"\n            onChange={this.handleOnChange}\n            checked={allSelectedChecked && allSelected}\n            aria-label={i18next.t(\"Select all members\")}\n          />\n          <Dropdown\n            className=\"align-self-center fluid-responsive\"\n            text={i18next.t(\"{{count}} members selected\", {\n              count: selectedCount,\n            })}\n            options={dropdownOptions}\n            aria-label={i18next.t(\"bulk actions\")}\n            item\n            selection\n            value={null}\n            selectOnBlur={false}\n            onChange={this.handleActionOnChange}\n            selectOnNavigation={false}\n          />\n        </div>\n      </Overridable>\n    );\n  }\n}\n\nSearchResultsBulkActions.propTypes = {\n  bulkDropdownOptions: PropTypes.array.isRequired,\n  allSelected: PropTypes.bool,\n  optionSelectionCallback: PropTypes.func.isRequired,\n};\n\nSearchResultsBulkActions.defaultProps = {\n  allSelected: false,\n};\n\nexport default Overridable.component(\n  \"SearchResultsBulkActions\",\n  SearchResultsBulkActions\n);\n","import { SearchResultsBulkActions } from \"@js/invenio_communities/members/components/bulk_actions/SearchResultsBulkActions\";\nimport { ErrorMessage } from \"@js/invenio_communities/members/components/ErrorMessage\";\nimport { CommunityMembersApi } from \"../../../api/members/api\";\nimport { BulkActionsContext } from \"@js/invenio_communities/members/components/bulk_actions/context\";\nimport { RadioSelection } from \"@js/invenio_communities/members/components/bulk_actions/RadioSelection\";\nimport { SelectedMembers } from \"@js/invenio_communities/members/components/bulk_actions/SelectedMembers\";\nimport _mapValues from \"lodash/mapValues\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { Button, Form, Modal } from \"semantic-ui-react\";\nimport { Trans } from \"react-i18next\";\nimport { withState } from \"react-searchkit\";\nimport { withCancel } from \"react-invenio-forms\";\n\nclass ManagerMemberBulkActionsCmp extends Component {\n  constructor(props) {\n    super(props);\n    const { community } = this.props;\n\n    this.membersApi = new CommunityMembersApi(community);\n\n    this.state = {\n      modalOpen: false,\n      currentAction: undefined,\n      role: undefined,\n      visible: undefined,\n      selectedMembers: {},\n    };\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = BulkActionsContext;\n\n  bulkAction = (action) => {\n    action();\n  };\n\n  get bulkActions() {\n    const { roles, visibilities, permissions } = this.props;\n    return [\n      {\n        key: 1,\n        value: \"change_role\",\n        text: i18next.t(\"Change roles\"),\n        renderOnActive: () => (\n          <Form>\n            <RadioSelection\n              options={roles}\n              label={i18next.t(\"Role\")}\n              onOptionChangeCallback={this.handleChangeRole}\n              permissions={permissions}\n            />\n          </Form>\n        ),\n        action: this.membersApi.bulkUpdateRoles,\n        actionParam: \"role\",\n      },\n      {\n        key: 2,\n        value: \"change_visibility\",\n        text: i18next.t(\"Change visibilities\"),\n        action: this.membersApi.bulkUpdateVisibilities,\n        actionParam: \"visible\",\n        renderOnActive: () => (\n          <Form>\n            <RadioSelection\n              options={visibilities}\n              label={i18next.t(\"Visibility\")}\n              onOptionChangeCallback={this.handleChangeVisibility}\n              permissions={permissions}\n            />\n          </Form>\n        ),\n      },\n      {\n        key: 3,\n        value: \"remove_from_community\",\n        text: i18next.t(\"Remove from community\"),\n        action: this.membersApi.bulkRemoveMembers,\n      },\n    ];\n  }\n\n  handleChangeRole = (role) => {\n    this.setState({ role: role });\n  };\n\n  handleChangeVisibility = (visible) => {\n    this.setState({ visible: visible === \"public\" });\n  };\n\n  updateSelectedMembers = (members) => {\n    this.setState({ selectedMembers: members });\n  };\n\n  handleChooseCurrentAction = (value, selectedMembers, selectedCount) => {\n    const serializeSelected = _mapValues(selectedMembers, ({ data }) => ({\n      ...data.member,\n    }));\n\n    this.updateSelectedMembers(serializeSelected);\n    this.setState({ currentAction: value });\n    this.handleModalOpen();\n  };\n\n  handleModalClose = () => this.setState({ modalOpen: false });\n\n  handleModalOpen = () => this.setState({ modalOpen: true });\n\n  handleActionClick = async () => {\n    const { selectedMembers } = this.state;\n    const { updateQueryState, currentQueryState } = this.props;\n    const { setAllSelected } = this.context;\n\n    const actionToPerform = this.currentAction.action;\n    // eslint-disable-next-line react/destructuring-assignment\n    const actionParameter = this.state[this.currentAction.actionParam];\n\n    const members = Object.entries(selectedMembers).map(([memberId, member]) => member);\n\n    this.setState({ loading: true });\n\n    this.cancellableAction = withCancel(actionToPerform(members, actionParameter));\n    try {\n      await this.cancellableAction.promise;\n\n      this.setState({ loading: false });\n      this.handleModalClose();\n      this.setState({ role: undefined, visible: undefined });\n\n      updateQueryState(currentQueryState);\n      setAllSelected(false, true);\n    } catch (error) {\n      if (error === \"UNMOUNTED\") return;\n\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  get currentAction() {\n    const { currentAction } = this.state;\n\n    return this.bulkActions.find((option) => {\n      return option.value === currentAction;\n    });\n  }\n\n  render() {\n    const { modalOpen, selectedMembers, loading, error } = this.state;\n    const selectedCount = Object.keys(selectedMembers).length;\n\n    const currentActionRender =\n      this.currentAction?.renderOnActive && this.currentAction.renderOnActive();\n\n    const currentActionText = this.currentAction?.text;\n\n    const actionDisabled =\n      loading ||\n      selectedCount === 0 ||\n      // eslint-disable-next-line react/destructuring-assignment\n      !this.state[this.currentAction.actionParam] === undefined;\n\n    return (\n      <>\n        <SearchResultsBulkActions\n          bulkDropdownOptions={this.bulkActions}\n          optionSelectionCallback={this.handleChooseCurrentAction}\n        />\n        <Modal\n          onClose={this.handleModalClose}\n          onOpen={this.handleModalOpen}\n          closeOnDimmerClick={false}\n          open={modalOpen}\n          role=\"dialog\"\n          aria-labelledby=\"bulk-actions-modal-header\"\n        >\n          <Modal.Header as=\"h2\" id=\"bulk-actions-modal-header\">\n            {currentActionText}\n          </Modal.Header>\n          <Modal.Content>\n            {error && <ErrorMessage error={error} />}\n            <SelectedMembers\n              updateSelectedMembers={this.updateSelectedMembers}\n              selectedMembers={selectedMembers}\n            />\n            {currentActionRender}\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              content={i18next.t(\"Cancel\")}\n              labelPosition=\"left\"\n              icon=\"cancel\"\n              loading={loading}\n              disabled={loading}\n              floated=\"left\"\n              onClick={this.handleModalClose}\n            />\n            <Trans key=\"communityInviteMembersSelected\" count={selectedCount}>\n              You have selected {{ selectedCount }} users\n            </Trans>\n            <Button\n              content={currentActionText}\n              labelPosition=\"left\"\n              loading={loading}\n              disabled={actionDisabled}\n              icon=\"checkmark\"\n              primary\n              onClick={this.handleActionClick}\n            />\n          </Modal.Actions>\n        </Modal>\n      </>\n    );\n  }\n}\n\nManagerMemberBulkActionsCmp.propTypes = {\n  community: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n  visibilities: PropTypes.array.isRequired,\n  permissions: PropTypes.object.isRequired,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n};\n\nexport const ManagerMemberBulkActions = withState(ManagerMemberBulkActionsCmp);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InvitationsContextProvider } from \"../../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"../../invitations/invitationsModal/InvitationsMembersModal\";\nimport { Table } from \"semantic-ui-react\";\nimport { ManagerMemberBulkActions } from \"./ManagerMemberBulkActions\";\n\nexport const ManagerMembersResultsContainer = ({\n  results,\n  community,\n  communityGroupsEnabled,\n  rolesCanInvite,\n  config,\n}) => {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell width={6}>\n            <ManagerMemberBulkActions\n              community={community}\n              roles={config.roles}\n              visibilities={config.visibility}\n              permissions={config.permissions}\n            />\n          </Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Member since\")}</Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Visibility\")}</Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Role\")}</Table.HeaderCell>\n          <Table.HeaderCell width={1} textAlign=\"right\">\n            <InvitationsContextProvider community={community}>\n              <InvitationsMembersModalWithSearchKit\n                rolesCanInvite={rolesCanInvite}\n                groupsEnabled={communityGroupsEnabled}\n                community={community}\n                triggerButtonSize=\"tiny\"\n              />\n            </InvitationsContextProvider>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{results}</Table.Body>\n    </Table>\n  );\n};\n\nManagerMembersResultsContainer.propTypes = {\n  results: PropTypes.array.isRequired,\n  community: PropTypes.object.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n  config: PropTypes.object.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { parametrize, overrideStore } from \"react-overridable\";\nimport { DropdownSort } from \"@js/invenio_search_ui/components\";\nimport { memberVisibilityTypes } from \"../\";\nimport { MembersSearchBarElement } from \"../../components/MembersSearchBarElement\";\nimport { MembersResults } from \"../components/MembersResult\";\nimport { MembersResultsGridItem } from \"../components/MembersResultsGridItem\";\nimport { ManagerSearchLayout } from \"./ManagerSearchLayout\";\nimport { ManagerEmptyResults } from \"./ManagerEmptyResults\";\nimport { ManagerMembersResultsContainer } from \"./ManagerMembersResultContainer\";\nimport { ManagerMembersResultItem } from \"./ManagerMembersResultItem\";\nimport { MembersSearchAppContext as MembersSearchAppContextCmp } from \"./MembersSearchAppContext\";\n\nconst dataAttr = document.getElementById(\"community-members-search-root\").dataset;\nconst communitiesRolesCanUpdate = JSON.parse(dataAttr.communitiesRolesCanUpdate);\nconst communitiesAllRoles = JSON.parse(dataAttr.communitiesAllRoles);\nconst community = JSON.parse(dataAttr.community);\nconst permissions = JSON.parse(dataAttr.permissions);\nconst communityGroupsEnabled = JSON.parse(dataAttr.communityGroupsEnabled);\nconst rolesCanInvite = JSON.parse(dataAttr.communitiesRolesCanInvite);\nconst appName = \"InvenioCommunities.ManagerSearch\";\n\nconst ManagerMembersResultItemWithConfig = parametrize(ManagerMembersResultItem, {\n  config: {\n    rolesCanUpdate: communitiesRolesCanUpdate,\n    visibility: memberVisibilityTypes,\n    permissions: permissions,\n  },\n});\n\nconst ManagerMembersResultContainerWithCommunity = parametrize(\n  ManagerMembersResultsContainer,\n  {\n    community: community,\n    communityGroupsEnabled: communityGroupsEnabled,\n    rolesCanInvite: rolesCanInvite,\n    config: {\n      roles: communitiesAllRoles,\n      visibility: memberVisibilityTypes,\n      permissions: permissions,\n    },\n  }\n);\n\nconst MembersSearchAppContext = parametrize(MembersSearchAppContextCmp, {\n  community: community,\n});\n\nconst ManagerSearchLayoutWithConfig = parametrize(ManagerSearchLayout, {\n  community: community,\n  communityGroupsEnabled: communityGroupsEnabled,\n  rolesCanInvite: rolesCanInvite,\n  permissions: permissions,\n  roles: communitiesAllRoles,\n  appName: appName,\n});\n\nconst ManagerEmptyResultsWithCommunity = parametrize(ManagerEmptyResults, {\n  community: community,\n  communityGroupsEnabled: communityGroupsEnabled,\n  rolesCanInvite: rolesCanInvite,\n});\n\nconst defaultComponents = {\n  [`${appName}.EmptyResults.element`]: ManagerEmptyResultsWithCommunity,\n  [`${appName}.ResultsList.item`]: ManagerMembersResultItemWithConfig,\n  [`${appName}.ResultsGrid.item`]: MembersResultsGridItem,\n  [`${appName}.SearchApp.layout`]: ManagerSearchLayoutWithConfig,\n  [`${appName}.SearchBar.element`]: MembersSearchBarElement,\n  [`${appName}.SearchApp.results`]: MembersResults,\n  [`${appName}.ResultsList.container`]: ManagerMembersResultContainerWithCommunity,\n  [`${appName}.Sort.element`]: DropdownSort,\n};\n\nconst overriddenComponents = overrideStore.getAll();\n\n// Auto-initialize search app\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true,\n  MembersSearchAppContext\n);\n"],"names":["ManagerSearchLayout","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","config","roles","rolesCanInvite","community","communityGroupsEnabled","appName","customFilters","Filters","getMembersFilters","React","className","InvitationsContextProvider","InvitationsMembersModalWithSearchKit","groupsEnabled","SearchBar","fluid","SearchFilters","Sort","values","sortOptions","FilterLabels","SearchAppResultsPane","layoutOptions","Component","propTypes","PropTypes","isRequired","defaultProps","ManagerEmptyResultsCmp","resetQuery","extraContent","queryString","Segment","Group","as","Grid","Column","width","placeholder","textAlign","Header","icon","Icon","name","i18next","t","Button","primary","onClick","ManagerEmptyResults","withState","SearchResultsBulkActions","_this","_defineProperty","_this$context","context","setAllSelected","allSelected","setState","allSelectedChecked","e","_ref","_objectWithoutProperties","_excluded","optionSelectionCallback","_this$context2","selectedCount","bulkActionContext","_pickBy","_ref2","selected","state","bulkDropdownOptions","_this$context3","noneSelected","dropdownOptions","map","_ref3","text","disabled","Overridable","id","Checkbox","onChange","handleOnChange","checked","Dropdown","count","options","item","selection","selectOnBlur","handleActionOnChange","selectOnNavigation","BulkActionsContext","component","ManagerMemberBulkActionsCmp","action","role","visible","members","selectedMembers","serializeSelected","_mapValues","_objectSpread","data","member","updateSelectedMembers","currentAction","handleModalOpen","modalOpen","_asyncToGenerator","_regeneratorRuntime","_callee","updateQueryState","currentQueryState","actionToPerform","actionParameter","_context","prev","next","actionParam","Object","entries","_ref4","_slicedToArray","loading","cancellableAction","withCancel","promise","handleModalClose","undefined","t0","abrupt","error","stop","membersApi","CommunityMembersApi","cancel","get","_this2","_this$props2","visibilities","permissions","renderOnActive","Form","RadioSelection","label","onOptionChangeCallback","handleChangeRole","bulkUpdateRoles","bulkUpdateVisibilities","handleChangeVisibility","bulkRemoveMembers","bulkActions","find","option","_this$currentAction","_this$currentAction2","_this$state","keys","length","currentActionRender","currentActionText","actionDisabled","handleChooseCurrentAction","Modal","onClose","onOpen","closeOnDimmerClick","open","Content","ErrorMessage","SelectedMembers","Actions","content","labelPosition","floated","Trans","handleActionClick","ManagerMemberBulkActions","ManagerMembersResultsContainer","results","Table","Row","HeaderCell","visibility","triggerButtonSize","Body","dataAttr","document","getElementById","dataset","communitiesRolesCanUpdate","JSON","parse","communitiesAllRoles","communitiesRolesCanInvite","ManagerMembersResultItemWithConfig","parametrize","ManagerMembersResultItem","rolesCanUpdate","memberVisibilityTypes","ManagerMembersResultContainerWithCommunity","MembersSearchAppContext","MembersSearchAppContextCmp","ManagerSearchLayoutWithConfig","ManagerEmptyResultsWithCommunity","defaultComponents","concat","MembersResultsGridItem","MembersSearchBarElement","MembersResults","DropdownSort","overriddenComponents","overrideStore","getAll","createSearchAppInit"],"sourceRoot":""}