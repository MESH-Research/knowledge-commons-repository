{"version":3,"file":"js/4903.c5ffbb1600fb518e0e04.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_administration/src/api/routes.js","webpack://invenio-assets/./js/invenio_administration/src/api/actions.js","webpack://invenio-assets/./js/invenio_administration/src/components/utils.js","webpack://invenio-assets/./js/invenio_administration/src/formik/AdminForm.js","webpack://invenio-assets/./js/invenio_administration/src/formik/array.js","webpack://invenio-assets/./js/invenio_administration/src/formik/GenerateForm.js","webpack://invenio-assets/./js/invenio_administration/src/ui_messages/context.js","webpack://invenio-assets/./js/invenio_administration/src/ui_messages/messages.js","webpack://invenio-assets/./translations/invenio_administration/messages/index.js","webpack://invenio-assets/./translations/invenio_administration/i18next.js"],"sourcesContent":["import _get from \"lodash/get\";\n\nconst APIRoutesGenerators = {\n  detailsView: (routePrefix, resource, idKeyPath = \"pid\") => {\n    return `${routePrefix}/${_get(resource, idKeyPath)}`;\n  },\n  get: (routePrefix, pid) => {\n    return `${routePrefix}/${pid}`;\n  },\n};\n\nexport const APIRoutes = {\n  ...APIRoutesGenerators,\n};\n","import { APIRoutes } from \"./routes\";\nimport { http } from \"react-invenio-forms\";\n\nconst getResource = async (apiEndpoint, pid, requestHeaders) => {\n  return await http.get(APIRoutes.get(apiEndpoint, pid), { headers: requestHeaders });\n};\n\nconst deleteResource = async (apiEndpoint) => {\n  return await http.delete(apiEndpoint);\n};\n\nconst editResource = async (apiEndpoint, pid, payload) => {\n  return await http.put(APIRoutes.get(apiEndpoint, pid), payload);\n};\n\nconst createResource = async (apiEndpoint, payload) => {\n  return await http.post(apiEndpoint, payload);\n};\n\nconst resourceAction = async (endpoint, payload) => {\n  return await http.post(endpoint, payload);\n};\n\nexport const InvenioAdministrationActionsApi = {\n  deleteResource: deleteResource,\n  editResource: editResource,\n  getResource: getResource,\n  resourceAction: resourceAction,\n  createResource: createResource,\n};\n","import _set from \"lodash/set\";\n\nexport const sortFields = (schema) => {\n  /**\n   * Sort fields based on the order param supplied by view configuration\n   * Doesn't take care of nested field - sorts only one level\n   */\n  return (\n    Object.entries(schema)\n      // sort by order\n      .sort((a, b) => {\n        if (a[1] && b[1]) {\n          return a[1].order - b[1].order;\n        }\n        return true;\n      })\n      // build object with sorted attributes\n      .reduce((sorted, entry) => {\n        const key = entry[0];\n        sorted[key] = schema[key];\n        return sorted;\n      }, {})\n  );\n};\n\nexport const deserializeFieldErrors = (errors) => {\n  /**\n   * Deserialises field errors from the API to be consumed by the front-end.\n   * The output's format works with Formik.\n   */\n  let deserializedErrors = {};\n  if (Array.isArray(errors)) {\n    for (const e of errors) {\n      if (\n        Object.prototype.hasOwnProperty.call(e, \"field\") &&\n        Object.prototype.hasOwnProperty.call(e, \"messages\")\n      ) {\n        _set(deserializedErrors, e.field, e.messages.join(\" \"));\n      }\n    }\n  }\n  return deserializedErrors;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Formik } from \"formik\";\nimport { Form as SemanticForm, Modal } from \"semantic-ui-react\";\nimport { InvenioAdministrationActionsApi } from \"../api/actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { NotificationContext } from \"../ui_messages\";\nimport { ErrorMessage } from \"../ui_messages\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { GenerateForm } from \"./GenerateForm\";\nimport { deserializeFieldErrors } from \"../components/utils\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\nimport mapValues from \"lodash/mapValues\";\n\nexport class AdminForm extends Component {\n  constructor(props) {\n    super(props);\n    const { resource, resourceSchema } = props;\n\n    this.state = {\n      error: undefined,\n      formData: resource\n        ? resource\n        : mapValues(resourceSchema, function (value) {\n            const defaultValue = value.metadata?.default;\n            if (defaultValue) {\n              return defaultValue;\n            }\n            return \"\";\n          }),\n    };\n  }\n\n  static contextType = NotificationContext;\n\n  onSubmit = async (values, actions) => {\n    const { apiEndpoint, pid, successCallback, create } = this.props;\n    const { addNotification } = this.context;\n    let response;\n    try {\n      if (create) {\n        response = await InvenioAdministrationActionsApi.createResource(\n          apiEndpoint,\n          values\n        );\n      } else {\n        response = await InvenioAdministrationActionsApi.editResource(\n          apiEndpoint,\n          pid,\n          values\n        );\n      }\n      actions.setSubmitting(false);\n      actions.resetForm({ values: { ...values } });\n      addNotification({\n        title: \"Success\",\n        content: \"Your changes were successfully submitted\",\n        type: \"success\",\n      });\n      successCallback(response.data);\n    } catch (e) {\n      console.error(e);\n      let errorMessage = e.message;\n\n      // API errors need to be deserialised to highlight fields.\n      const apiResponse = e?.response?.data;\n      if (apiResponse) {\n        const apiErrors = apiResponse.errors || [];\n        const deserializedErrors = deserializeFieldErrors(apiErrors);\n        actions.setErrors(deserializedErrors);\n        errorMessage = apiResponse.message || errorMessage;\n      }\n\n      this.setState({\n        error: { header: \"Form error\", content: errorMessage, id: e.code },\n      });\n    }\n  };\n\n  resetErrorState = () => {\n    this.setState({ error: undefined });\n  };\n\n  render() {\n    const { resourceSchema, create, formFields } = this.props;\n    const { formData, error } = this.state;\n\n    return (\n      <Formik initialValues={formData} onSubmit={this.onSubmit}>\n        {(props) => {\n          return (\n            <>\n              <Modal.Content>\n                <SemanticForm\n                  id=\"admin-form\"\n                  as={Form}\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    props.handleSubmit();\n                  }}\n                >\n                  <GenerateForm\n                    formFields={formFields}\n                    jsonSchema={resourceSchema}\n                    create={create}\n                  />\n                  {!isEmpty(error) && (\n                    <ErrorMessage\n                      {...error}\n                      removeNotification={this.resetErrorState}\n                    />\n                  )}\n                </SemanticForm>\n              </Modal.Content>\n\n              <Modal.Actions>\n                <Button\n                  form=\"admin-form\"\n                  type=\"submit\"\n                  primary\n                  loading={props.isSubmitting}\n                  disabled={props.isSubmitting}\n                >\n                  {i18next.t(\"Save\")}\n                </Button>\n              </Modal.Actions>\n            </>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nAdminForm.propTypes = {\n  resource: PropTypes.object,\n  resourceSchema: PropTypes.object.isRequired,\n  apiEndpoint: PropTypes.string.isRequired,\n  pid: PropTypes.string,\n  create: PropTypes.bool,\n  formFields: PropTypes.object,\n  successCallback: PropTypes.func,\n};\n\nAdminForm.defaultProps = {\n  resource: undefined,\n  create: false,\n  pid: undefined,\n  formFields: undefined,\n  successCallback: () => {},\n};\n","import React from \"react\";\nimport { Array } from \"react-invenio-forms\";\nimport { Form, Button, Icon } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\nimport PropTypes from \"prop-types\";\n\nconst createEmptyArrayRowObject = (properties) => {\n  const emptyRow = {};\n  for (let [key, schema] of Object.entries(properties)) {\n    if (schema.type === \"object\" || schema.type === \"vocabulary\") {\n      emptyRow[key] = createEmptyArrayRowObject(schema.properties);\n    } else if (schema.type === \"array\") {\n      emptyRow[key] = [createEmptyArrayRowObject(schema.items.properties)];\n    } else {\n      emptyRow[key] = \"\";\n    }\n  }\n  return emptyRow;\n};\n\nexport const AdminArrayField = ({\n  fieldSchema,\n  mapFormFields,\n  isCreate,\n  formFields,\n  ...fieldProps\n}) => {\n  const newRow = createEmptyArrayRowObject(fieldSchema.items.properties);\n  return (\n    <Array\n      defaultNewValue={newRow}\n      className=\"array-widget\"\n      addButtonLabel={i18next.t(\"Add\")}\n      {...fieldProps}\n    >\n      {({ arrayHelpers, indexPath }) => {\n        const fieldPathPrefix = `${fieldProps.fieldPath}.${indexPath}`;\n        return (\n          <Form.Group grouped widths=\"equal\" className=\"group\">\n            {mapFormFields(\n              fieldSchema.items.properties,\n              fieldPathPrefix,\n              isCreate,\n              formFields\n            )}\n            <Form.Field>\n              <Button\n                aria-label={i18next.t(\"Remove field\")}\n                className=\"close-btn\"\n                icon\n                onClick={() => arrayHelpers.remove(indexPath)}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </Form.Field>\n          </Form.Group>\n        );\n      }}\n    </Array>\n  );\n};\n\nAdminArrayField.propTypes = {\n  fieldSchema: PropTypes.object.isRequired,\n  mapFormFields: PropTypes.func.isRequired,\n  isCreate: PropTypes.bool,\n  formFields: PropTypes.object,\n};\n\nAdminArrayField.defaultProps = {\n  isCreate: false,\n  formFields: undefined,\n};\n","import React from \"react\";\nimport {\n  Input,\n  AutocompleteDropdown,\n  BooleanField,\n  Dropdown,\n  TextArea,\n  RichInput,\n} from \"react-invenio-forms\";\nimport _capitalize from \"lodash/capitalize\";\nimport _get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport { Form, Segment, Header } from \"semantic-ui-react\";\nimport { AdminArrayField } from \"./array\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { sortFields } from \"../components/utils\";\n\nconst fieldsMap = {\n  string: Input,\n  integer: Input,\n  uuid: Input,\n  datetime: Input,\n  bool: BooleanField,\n};\n\nconst generateFieldProps = (\n  fieldName,\n  fieldSchema,\n  parentField,\n  isCreate,\n  formFieldConfig\n) => {\n  let currentFieldName;\n\n  const fieldLabel = formFieldConfig?.text || fieldSchema?.title || fieldName;\n  const placeholder =\n    formFieldConfig?.placeholder || fieldSchema?.metadata?.placeholder;\n\n  if (parentField) {\n    currentFieldName = `${parentField}.${fieldName}`;\n  } else {\n    currentFieldName = fieldName;\n  }\n\n  const htmlDescription = (\n    <>\n      <p />\n      <div\n        dangerouslySetInnerHTML={{\n          __html: formFieldConfig?.description || fieldSchema?.metadata?.description,\n        }}\n      />\n    </>\n  );\n\n  return {\n    fieldPath: currentFieldName,\n    key: currentFieldName,\n    label: _capitalize(fieldLabel),\n    description: htmlDescription,\n    required: fieldSchema.required,\n    disabled: fieldSchema.readOnly || (fieldSchema.createOnly && !isCreate),\n    placeholder,\n    options: formFieldConfig?.options || fieldSchema?.metadata?.options,\n    rows: formFieldConfig?.rows || fieldSchema?.metadata?.rows,\n  };\n};\n\nconst mapFormFields = (obj, parentField, isCreate, formFieldsConfig, dropDumpOnly) => {\n  if (!obj) {\n    return null;\n  }\n\n  const sortedFields = sortFields(formFieldsConfig);\n  const elements = Object.entries(sortedFields).map(([fieldName]) => {\n    const fieldSchema = _get(obj, fieldName);\n\n    if (fieldSchema.readOnly && dropDumpOnly) {\n      return null;\n    }\n\n    const fieldProps = generateFieldProps(\n      fieldName,\n      fieldSchema,\n      parentField,\n      isCreate,\n      formFieldsConfig[fieldName]\n    );\n\n    const showField =\n      _isEmpty(formFieldsConfig) ||\n      Object.prototype.hasOwnProperty.call(formFieldsConfig, fieldProps.fieldPath);\n\n    if (!showField) {\n      return null;\n    }\n\n    if (fieldSchema.type === \"array\") {\n      return (\n        <AdminArrayField\n          key={fieldProps.fieldPath}\n          fieldSchema={fieldSchema}\n          isCreate={isCreate}\n          mapFormFields={mapFormFields}\n          formFields={formFieldsConfig}\n          {...fieldProps}\n        />\n      );\n    }\n\n    if (fieldSchema.type === \"bool\") {\n      const description = fieldProps.description;\n      return (\n        <>\n          <BooleanField\n            key={fieldProps.fieldPath}\n            required={fieldSchema.required}\n            value={fieldSchema.metadata.checked === \"true\"}\n            {...fieldProps}\n          />\n          {description && <label className=\"helptext\">{description}</label>}\n        </>\n      );\n    }\n\n    if (fieldSchema.type === \"vocabulary\") {\n      return (\n        <AutocompleteDropdown\n          key={fieldProps.fieldPath}\n          required={fieldSchema.required}\n          autocompleteFrom={`/api/vocabularies/${fieldSchema.metadata.type}`}\n          {...fieldProps}\n        />\n      );\n    }\n\n    if (fieldSchema.type === \"object\") {\n      // nested fields\n      return (\n        <React.Fragment key={fieldProps.fieldPath}>\n          <Header attached=\"top\" as=\"h5\">\n            {fieldProps.label}\n          </Header>\n          <Segment attached=\"bottom\">\n            <Form.Group grouped>\n              {mapFormFields(\n                fieldSchema.properties,\n                fieldProps.fieldPath,\n                isCreate,\n                formFieldsConfig\n              )}\n            </Form.Group>\n          </Segment>\n        </React.Fragment>\n      );\n    }\n\n    const dropdownOptions =\n      formFieldsConfig[fieldName]?.options || fieldSchema?.metadata?.options;\n    if (fieldSchema.type === \"string\" && dropdownOptions) {\n      return (\n        <Dropdown\n          key={fieldProps.fieldPath}\n          required={fieldSchema.required}\n          options={dropdownOptions}\n          {...fieldProps}\n        />\n      );\n    }\n\n    const rows = formFieldsConfig[fieldName]?.rows || fieldSchema?.metadata?.rows;\n    if (fieldSchema.type === \"string\" && rows) {\n      return (\n        <TextArea\n          key={fieldProps.fieldPath}\n          fieldPath={fieldProps.fieldPath}\n          rows={rows}\n          {...fieldProps}\n        />\n      );\n    }\n\n    if (fieldSchema.type === \"html\") {\n      return (\n        <RichInput\n          key={fieldProps.fieldPath}\n          fieldPath={fieldProps.fieldPath}\n          {...fieldProps}\n        />\n      );\n    }\n\n    const Element = fieldsMap[fieldSchema.type];\n    return <Element {...fieldProps} key={fieldProps.fieldPath} />;\n  });\n\n  return elements;\n};\n\nexport const GenerateForm = ({ jsonSchema, create, formFields, dropDumpOnly }) => {\n  const properties = jsonSchema;\n  return <>{mapFormFields(properties, undefined, create, formFields, dropDumpOnly)}</>;\n};\n\nGenerateForm.propTypes = {\n  jsonSchema: PropTypes.object.isRequired,\n  create: PropTypes.bool,\n  formFields: PropTypes.object,\n  dropDumpOnly: PropTypes.bool,\n};\n\nGenerateForm.defaultProps = {\n  create: false,\n  formFields: undefined,\n  dropDumpOnly: false,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorMessage, SuccessMessage } from \"./messages\";\n\nexport const NotificationContext = React.createContext({\n  notifications: {},\n  addNotification: () => {},\n  removeNotification: () => {},\n});\n\nexport class NotificationController extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { nextNotificationID: 1, notifications: {} };\n  }\n\n  addNotification = (notification) => {\n    const { notifications: prevNotifications, nextNotificationID } = this.state;\n\n    this.setState({\n      notifications: {\n        ...prevNotifications,\n        [nextNotificationID]: notification,\n      },\n    });\n    this.setState({ nextNotificationID: nextNotificationID + 1 });\n  };\n\n  removeNotification = (notificationID) => {\n    const { notifications: prevNotifications } = this.state;\n    delete prevNotifications[notificationID];\n    this.setState({ notifications: { ...prevNotifications } });\n  };\n\n  renderNotification(id, notification) {\n    let MessageComponent = ErrorMessage;\n    if (notification.type === \"success\") {\n      MessageComponent = SuccessMessage;\n    }\n\n    return (\n      <MessageComponent\n        id={id}\n        key={id}\n        header={notification.title}\n        content={notification.content}\n        removeNotification={this.removeNotification}\n      />\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n    const { notifications } = this.state;\n    return (\n      <NotificationContext.Provider\n        value={{\n          notifications: notifications,\n          addNotification: this.addNotification,\n          removeNotification: this.removeNotification,\n        }}\n      >\n        <div id=\"admin-notifications\" className=\"compact\">\n          {Object.entries(notifications).map(([messageID, message]) =>\n            this.renderNotification(messageID, message)\n          )}\n        </div>\n        {children}\n      </NotificationContext.Provider>\n    );\n  }\n}\n\nNotificationController.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Message as SemanticMessage } from \"semantic-ui-react\";\n\nexport class Message extends Component {\n  componentDidMount() {\n    const { autoDismiss } = this.props;\n    if (autoDismiss) {\n      setTimeout(this.handleDismiss, autoDismiss);\n    }\n  }\n\n  handleDismiss = () => {\n    const { removeNotification, id } = this.props;\n    removeNotification(id);\n  };\n\n  render() {\n    const { id, ...props } = this.props;\n\n    return (\n      <SemanticMessage\n        id={id}\n        floating\n        {...props}\n        onDismiss={this.handleDismiss}\n        role=\"alert\"\n      />\n    );\n  }\n}\n\nexport const ErrorMessage = ({ id, header, content, removeNotification }) => (\n  <Message\n    negative\n    icon=\"exclamation\"\n    header={header}\n    content={content}\n    id={id}\n    removeNotification={removeNotification}\n  />\n);\n\nexport const SuccessMessage = ({ id, header, content, removeNotification }) => (\n  <Message\n    success\n    icon=\"check\"\n    header={header}\n    content={content}\n    id={id}\n    autoDismiss={5 * 1000} // in seconds\n    removeNotification={removeNotification}\n  />\n);\n\nMessage.propTypes = {\n  autoDismiss: PropTypes.number,\n  removeNotification: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nMessage.defaultProps = {\n  autoDismiss: null,\n};\n\nErrorMessage.propTypes = {\n  id: PropTypes.string.isRequired,\n  header: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nSuccessMessage.propTypes = ErrorMessage.propTypes;\n","import TRANSLATE_AF from \"./af/translations.json\";\nimport TRANSLATE_AR from \"./ar/translations.json\";\nimport TRANSLATE_BG from \"./bg/translations.json\";\nimport TRANSLATE_CA from \"./ca/translations.json\";\nimport TRANSLATE_CS from \"./cs/translations.json\";\nimport TRANSLATE_DA from \"./da/translations.json\";\nimport TRANSLATE_DE from \"./de/translations.json\";\nimport TRANSLATE_EL from \"./el/translations.json\";\nimport TRANSLATE_EN from \"./en/translations.json\";\nimport TRANSLATE_ES from \"./es/translations.json\";\nimport TRANSLATE_ET from \"./et/translations.json\";\nimport TRANSLATE_ET_EE from \"./et_EE/translations.json\";\nimport TRANSLATE_FA from \"./fa/translations.json\";\nimport TRANSLATE_FR from \"./fr/translations.json\";\nimport TRANSLATE_GL from \"./gl/translations.json\";\nimport TRANSLATE_HR from \"./hr/translations.json\";\nimport TRANSLATE_HU from \"./hu/translations.json\";\nimport TRANSLATE_IT from \"./it/translations.json\";\nimport TRANSLATE_JA from \"./ja/translations.json\";\nimport TRANSLATE_KA from \"./ka/translations.json\";\nimport TRANSLATE_LT from \"./lt/translations.json\";\nimport TRANSLATE_NO from \"./no/translations.json\";\nimport TRANSLATE_PL from \"./pl/translations.json\";\nimport TRANSLATE_PT from \"./pt/translations.json\";\nimport TRANSLATE_RO from \"./ro/translations.json\";\nimport TRANSLATE_RU from \"./ru/translations.json\";\nimport TRANSLATE_RW from \"./rw/translations.json\";\nimport TRANSLATE_SK from \"./sk/translations.json\";\nimport TRANSLATE_SV from \"./sv/translations.json\";\nimport TRANSLATE_TR from \"./tr/translations.json\";\nimport TRANSLATE_UK from \"./uk/translations.json\";\nimport TRANSLATE_ZH_CN from \"./zh_CN/translations.json\";\nimport TRANSLATE_ZH_TW from \"./zh_TW/translations.json\";\n\nexport const translations = {\n  af: { translation: TRANSLATE_AF },\n  ar: { translation: TRANSLATE_AR },\n  bg: { translation: TRANSLATE_BG },\n  ca: { translation: TRANSLATE_CA },\n  cs: { translation: TRANSLATE_CS },\n  da: { translation: TRANSLATE_DA },\n  de: { translation: TRANSLATE_DE },\n  el: { translation: TRANSLATE_EL },\n  en: { translation: TRANSLATE_EN },\n  es: { translation: TRANSLATE_ES },\n  et: { translation: TRANSLATE_ET },\n  et_EE: { translation: TRANSLATE_ET_EE },\n  fa: { translation: TRANSLATE_FA },\n  fr: { translation: TRANSLATE_FR },\n  gl: { translation: TRANSLATE_GL },\n  hr: { translation: TRANSLATE_HR },\n  hu: { translation: TRANSLATE_HU },\n  it: { translation: TRANSLATE_IT },\n  ja: { translation: TRANSLATE_JA },\n  ka: { translation: TRANSLATE_KA },\n  lt: { translation: TRANSLATE_LT },\n  no: { translation: TRANSLATE_NO },\n  pl: { translation: TRANSLATE_PL },\n  pt: { translation: TRANSLATE_PT },\n  ro: { translation: TRANSLATE_RO },\n  ru: { translation: TRANSLATE_RU },\n  rw: { translation: TRANSLATE_RW },\n  sk: { translation: TRANSLATE_SK },\n  sv: { translation: TRANSLATE_SV },\n  tr: { translation: TRANSLATE_TR },\n  uk: { translation: TRANSLATE_UK },\n  zh_CN: { translation: TRANSLATE_ZH_CN },\n  zh_TW: { translation: TRANSLATE_ZH_TW },\n};\n","// This file is part of React-Invenio-Deposit\n//\n// Invenio-administration is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport i18n from \"i18next\";\n\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { translations } from \"./messages\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst options = {\n  fallbackLng: \"en\", // fallback keys\n  returnEmptyString: false,\n  debug: process.env.NODE_ENV === \"development\",\n  resources: translations,\n  keySeparator: false,\n  nsSeparator: false,\n  // specify language detection order\n  detection: {\n    order: [\"htmlTag\"],\n    // cache user language off\n    caches: [],\n  },\n  react: {\n    // Set empty - to allow html tags convert to trans tags\n    // HTML TAG | Trans TAG\n    //  <span>  | <1>\n    transKeepBasicHtmlNodesFor: [],\n  },\n};\n\nconst i18next = i18n.createInstance();\ni18next.use(LanguageDetector).use(initReactI18next).init(options);\n\nexport { i18next };\n"],"names":["APIRoutes","_objectSpread","detailsView","routePrefix","resource","idKeyPath","arguments","length","undefined","concat","_get","get","pid","getResource","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","apiEndpoint","requestHeaders","_context","prev","next","http","headers","abrupt","sent","stop","_x","_x2","_x3","apply","deleteResource","_ref2","_callee2","_context2","_x4","editResource","_ref3","_callee3","payload","_context3","put","_x5","_x6","_x7","createResource","_ref4","_callee4","_context4","post","_x8","_x9","InvenioAdministrationActionsApi","resourceAction","_ref5","_callee5","endpoint","_context5","_x10","_x11","sortFields","schema","Object","entries","sort","a","b","order","reduce","sorted","entry","key","deserializeFieldErrors","errors","deserializedErrors","Array","isArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","e","value","prototype","hasOwnProperty","call","_set","field","messages","join","err","f","AdminForm","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","values","actions","_this$props","successCallback","create","addNotification","response","_e$response","errorMessage","apiResponse","apiErrors","context","setSubmitting","resetForm","title","content","type","data","t0","console","error","message","setErrors","setState","header","id","code","resourceSchema","state","formData","mapValues","_value$metadata","defaultValue","metadata","_inherits","_createClass","_this2","_this$props2","this","formFields","_this$state","React","Formik","initialValues","onSubmit","Modal","Content","SemanticForm","as","Form","preventDefault","handleSubmit","GenerateForm","jsonSchema","isEmpty","ErrorMessage","_extends","removeNotification","resetErrorState","Actions","Button","form","primary","loading","isSubmitting","disabled","i18next","t","Component","NotificationContext","propTypes","PropTypes","isRequired","defaultProps","createEmptyArrayRowObject","properties","emptyRow","_i","_Object$entries","_Object$entries$_i","_slicedToArray","items","AdminArrayField","fieldSchema","mapFormFields","isCreate","fieldProps","_objectWithoutProperties","_excluded","newRow","defaultNewValue","className","addButtonLabel","arrayHelpers","indexPath","fieldPathPrefix","fieldPath","Group","grouped","widths","Field","icon","onClick","remove","Icon","name","fieldsMap","string","Input","integer","uuid","datetime","bool","BooleanField","obj","parentField","formFieldsConfig","dropDumpOnly","sortedFields","elements","map","_formFieldsConfig$fie","_fieldSchema$metadata5","_formFieldsConfig$fie2","_fieldSchema$metadata6","fieldName","readOnly","formFieldConfig","_fieldSchema$metadata","_fieldSchema$metadata2","_fieldSchema$metadata3","_fieldSchema$metadata4","currentFieldName","fieldLabel","text","placeholder","htmlDescription","dangerouslySetInnerHTML","__html","description","label","_capitalize","required","createOnly","options","rows","generateFieldProps","_isEmpty","checked","AutocompleteDropdown","autocompleteFrom","Header","attached","Segment","dropdownOptions","Dropdown","TextArea","RichInput","Element","notifications","NotificationController","notification","prevNotifications","nextNotificationID","notificationID","MessageComponent","SuccessMessage","children","Provider","messageID","renderNotification","Message","_len","args","_key","autoDismiss","setTimeout","handleDismiss","SemanticMessage","floating","onDismiss","role","negative","success","translations","af","translation","ar","bg","ca","cs","da","de","el","en","es","et","et_EE","fa","fr","gl","hr","hu","it","ja","ka","lt","no","pl","pt","ro","ru","rw","sk","sv","tr","uk","zh_CN","zh_TW","fallbackLng","returnEmptyString","debug","process","resources","keySeparator","nsSeparator","detection","caches","react","transKeepBasicHtmlNodesFor","i18n","createInstance","use","LanguageDetector","initReactI18next","init"],"sourceRoot":""}