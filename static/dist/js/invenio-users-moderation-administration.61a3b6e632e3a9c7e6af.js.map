{"version":3,"file":"js/invenio-users-moderation-administration.61a3b6e632e3a9c7e6af.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/administration/userModeration/search/UserModerationSearchLayout.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/userModeration/ModerationActions.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/userModeration/search/SearchResultItemLayout.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/userModeration/index.js"],"sourcesContent":["/*\n * // This file is part of Invenio-Requests\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-Requests is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { SearchAppResultsPane } from \"@js/invenio_search_ui/components\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { RequestStatusFilter } from \"@js/invenio_requests/search\";\nimport { SearchBar, Sort } from \"react-searchkit\";\n\nexport class UserModerationSearchLayout extends Component {\n  render() {\n    const { config, appName } = this.props;\n\n    return (\n      <>\n        {/* auto column grid used instead of SUI grid for better searchbar width adjustment */}\n        <div className=\"auto-column-grid\">\n          <div className=\"flex column-mobile\">\n            <div className=\"mobile only rel-mb-1 flex align-items-center justify-space-between\">\n              <RequestStatusFilter keepFiltersOnUpdate />\n            </div>\n\n            <div className=\"tablet only computer only rel-mr-2\">\n              <RequestStatusFilter keepFiltersOnUpdate />\n            </div>\n            <div className=\"full-width\">\n              <SearchBar fluid />\n            </div>\n          </div>\n          <div className=\"flex align-items-center column-mobile\">\n            <div className=\"full-width flex align-items-center justify-end column-mobile\">\n              <Sort values={config.sortOptions} />\n            </div>\n          </div>\n        </div>\n        <div className=\"rel-mb-1\" />\n\n        <SearchAppResultsPane layoutOptions={config.layoutOptions} appName={appName} />\n      </>\n    );\n  }\n}\n\nUserModerationSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nUserModerationSearchLayout.defaultProps = {\n  appName: \"\",\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { InvenioAdministrationActionsApi as adminAPI } from \"@js/invenio_administration\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport { withCancel } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport class ModerationActions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false };\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleActionClick = async (e, actionKey, actionConfig) => {\n    this.setState({ loading: true });\n    const { resource, user, successCallback } = this.props;\n    const { addNotification } = this.context;\n\n    const name = user.profile.full_name || user.profile.email || user.profile.username;\n\n    const links = resource.links.actions;\n    const actionUrl = links[actionKey];\n    // Execute action\n    try {\n      if (actionUrl) {\n        this.cancellableAction = withCancel(adminAPI.resourceAction(actionUrl, {}));\n        await this.cancellableAction.promise;\n        if (actionKey === \"accept\") {\n          addNotification({\n            title: i18next.t(\"Success\"),\n            content: i18next.t(\"User {{name}} was approved.\", { name: name }),\n            type: \"success\",\n          });\n        } else if (actionKey === \"decline\") {\n          addNotification({\n            title: i18next.t(\"Success\"),\n            content: i18next.t(\"User {{name}} is blocked.\", { name: name }),\n            type: \"success\",\n          });\n        }\n      }\n      this.setState({ loading: false });\n      successCallback();\n    } catch (e) {\n      addNotification({\n        title: i18next.t(\"Error\"),\n        content: e.toString(),\n        type: \"error\",\n      });\n      console.error(e);\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { actions } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <Button.Group className=\"margined\" basic compact widths={2}>\n        {Object.entries(actions).map(([actionKey, actionConfig]) => {\n          const icon = actionKey === \"accept\" ? \"check\" : \"ban\";\n          return (\n            <Button\n              key={actionKey}\n              onClick={(e) => this.handleActionClick(e, actionKey, actionConfig)}\n              disabled={loading}\n              loading={loading}\n              icon\n              labelPosition=\"left\"\n            >\n              <Icon name={icon} />\n              {actionConfig.text}\n            </Button>\n          );\n        })}\n      </Button.Group>\n    );\n  }\n}\n\nModerationActions.propTypes = {\n  user: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired,\n  resource: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n};\n\nModerationActions.defaultProps = {};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { BoolFormatter } from \"@js/invenio_administration\";\nimport { ModerationActions } from \"../ModerationActions\";\nimport { UserActions } from \"../../users/UserActions\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Table, Icon } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { AdminUIRoutes } from \"@js/invenio_administration/src/routes\";\nimport { UserListItemCompact } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nclass SearchResultItemComponent extends Component {\n  refreshAfterAction = () => {\n    const { updateQueryState, currentQueryState } = this.props;\n    updateQueryState(currentQueryState);\n  };\n\n  render() {\n    const {\n      title,\n      result,\n      idKeyPath,\n      listUIEndpoint,\n      resourceHasActions,\n      resourceName,\n      displayEdit,\n      displayDelete,\n      actions,\n    } = this.props;\n\n    const {\n      expanded: { topic: user },\n    } = result;\n    const splitEmail = user.email.split(\"@\");\n    return (\n      <Table.Row>\n        {/*<Table.Cell>*/}\n        {/*We pass user ID to bulk actions - user moderation API takes user IDs*/}\n        {/*<SearchResultsRowCheckbox rowId={userId} data={result} />*/}\n        {/*</Table.Cell>*/}\n        <Table.Cell\n          key={`user-column-${result.id}`}\n          data-label={i18next.t(\"User\")}\n          className=\"word-break-all\"\n        >\n          <UserListItemCompact\n            user={user}\n            id={result.id}\n            linkToDetailView={AdminUIRoutes.detailsView(\n              listUIEndpoint,\n              result,\n              idKeyPath\n            )}\n          />\n        </Table.Cell>\n        <Table.Cell\n          key={`user-email-${result.id}`}\n          data-label={i18next.t(\"Email\")}\n          collapsing\n          className=\"word-break-all\"\n        >\n          {splitEmail[0]}\n        </Table.Cell>\n        <Table.Cell\n          collapsing\n          key={`user-email-domain-${result.id}`}\n          data-label={i18next.t(\"Email domain\")}\n          className=\"word-break-all\"\n        >\n          @{splitEmail[1]}\n        </Table.Cell>\n        <Table.Cell data-label={i18next.t(\"Actions\")}>\n          {/* TEMPORARY */}\n          <a\n            href={encodeURI(\n              `/administration/records?q=parent.access.owned_by.user:${user.id}`\n            )}\n          >\n            <Icon name=\"paperclip\" />\n            Records\n          </a>\n        </Table.Cell>\n        <Table.Cell data-label={i18next.t(\"Status\")}>\n          <BoolFormatter\n            value={result.status === \"submitted\"}\n            icon=\"hourglass\"\n            color=\"yellow\"\n          />\n          <BoolFormatter value={result.status === \"declined\"} icon=\"ban\" color=\"red\" />\n          <BoolFormatter\n            value={result.status === \"accepted\"}\n            icon=\"check\"\n            color=\"green\"\n          />\n        </Table.Cell>\n        <Table.Cell collapsing textAlign=\"right\">\n          {resourceHasActions && result.is_open && (\n            <ModerationActions\n              title={title}\n              user={user}\n              resourceName={resourceName}\n              editUrl={AdminUIRoutes.editView(listUIEndpoint, result, idKeyPath)}\n              displayEdit={displayEdit}\n              displayDelete={displayDelete}\n              actions={actions}\n              resource={result}\n              idKeyPath={idKeyPath}\n              successCallback={this.refreshAfterAction}\n              listUIEndpoint={listUIEndpoint}\n            />\n          )}\n          {!result.is_open && (\n            <UserActions user={user} successCallback={this.refreshAfterAction} />\n          )}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nSearchResultItemComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  resourceName: PropTypes.string.isRequired,\n  result: PropTypes.object.isRequired,\n  displayDelete: PropTypes.bool,\n  displayEdit: PropTypes.bool,\n  actions: PropTypes.object,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  idKeyPath: PropTypes.string.isRequired,\n  listUIEndpoint: PropTypes.string.isRequired,\n  resourceHasActions: PropTypes.bool,\n};\n\nSearchResultItemComponent.defaultProps = {\n  displayDelete: true,\n  displayEdit: true,\n  actions: {},\n  resourceHasActions: false,\n};\n\nexport const SearchResultItemLayout = withState(SearchResultItemComponent);\n","// This file is part of InvenioCommunities\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { initDefaultSearchComponents } from \"@js/invenio_administration\";\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { UserModerationSearchLayout } from \"./search\";\nimport { NotificationController } from \"@js/invenio_administration\";\nimport { SearchResultItemLayout } from \"./search\";\n\nconst domContainer = document.getElementById(\"invenio-search-config\");\n\nconst defaultComponents = initDefaultSearchComponents(domContainer);\n\nconst overridenComponents = {\n  ...defaultComponents,\n  \"InvenioAdministration.SearchResultItem.layout\": SearchResultItemLayout,\n  \"SearchApp.layout\": UserModerationSearchLayout,\n};\n\ncreateSearchAppInit(\n  overridenComponents,\n  true,\n  \"invenio-search-config\",\n  false,\n  NotificationController\n);\n"],"names":["UserModerationSearchLayout","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","config","appName","React","className","RequestStatusFilter","keepFiltersOnUpdate","SearchBar","fluid","Sort","values","sortOptions","SearchAppResultsPane","layoutOptions","Component","propTypes","PropTypes","isRequired","defaultProps","ModerationActions","_this","_defineProperty","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","actionKey","actionConfig","resource","user","successCallback","addNotification","name","links","actionUrl","_context","prev","next","setState","loading","context","profile","full_name","email","username","actions","cancellableAction","withCancel","adminAPI","resourceAction","promise","title","i18next","t","content","type","t0","toString","console","error","stop","_x","_x2","_x3","apply","state","cancel","_this2","Button","Group","basic","compact","widths","Object","entries","map","_ref2","_ref3","_slicedToArray","icon","onClick","handleActionClick","disabled","labelPosition","Icon","text","NotificationContext","SearchResultItemComponent","_len","length","args","Array","_key","concat","updateQueryState","currentQueryState","_this$props2","result","idKeyPath","listUIEndpoint","resourceHasActions","resourceName","displayEdit","displayDelete","expanded","topic","splitEmail","split","Table","Row","Cell","id","UserListItemCompact","linkToDetailView","AdminUIRoutes","detailsView","collapsing","href","encodeURI","BoolFormatter","status","color","textAlign","is_open","editUrl","editView","refreshAfterAction","UserActions","SearchResultItemLayout","withState","domContainer","document","getElementById","overridenComponents","_objectSpread","initDefaultSearchComponents","createSearchAppInit","NotificationController"],"sourceRoot":""}