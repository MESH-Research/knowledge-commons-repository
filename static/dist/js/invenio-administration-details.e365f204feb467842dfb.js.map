{"version":3,"file":"js/invenio-administration-details.e365f204feb467842dfb.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_administration/src/components/Loader.js","webpack://invenio-assets/./js/invenio_administration/src/components/ErrorPage.js","webpack://invenio-assets/./js/invenio_administration/src/details/AdminDetailsView.js","webpack://invenio-assets/./js/invenio_administration/src/details/DetailsComponent.js","webpack://invenio-assets/./js/invenio_administration/src/details/details.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Overridable from \"react-overridable\";\nimport { Loader as UILoader } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nclass Loader extends Component {\n  render() {\n    const { isLoading, children } = this.props;\n    return (\n      <Overridable id=\"Admin.Loader.layout\" {...this.props}>\n        {isLoading ? (\n          <UILoader active size=\"huge\" inline=\"centered\" />\n        ) : (\n          // eslint-disable-next-line react/jsx-no-useless-fragment\n          <>{children}</>\n        )}\n      </Overridable>\n    );\n  }\n}\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nLoader.defaultProps = {\n  isLoading: false,\n  children: null,\n};\n\nexport default Overridable.component(\"Loader\", Loader);\n","import React, { Component } from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport Overridable from \"react-overridable\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\n\nclass ErrorPage extends Component {\n  render() {\n    const { errorCode, errorMessage, error, children } = this.props;\n    return (\n      <Overridable id=\"Admin.ErrorPage.layout\" {...this.props}>\n        {error ? (\n          <Container textAlign=\"center\" className=\"error-handler\">\n            <Header as=\"h1\" icon>\n              <Icon name=\"warning\" circular />\n              {errorCode}\n              <Header.Subheader>{errorMessage}</Header.Subheader>\n            </Header>\n          </Container>\n        ) : (\n          // eslint-disable-next-line react/jsx-no-useless-fragment\n          <>{children}</>\n        )}\n      </Overridable>\n    );\n  }\n}\n\nErrorPage.propTypes = {\n  errorCode: PropTypes.string,\n  errorMessage: PropTypes.string,\n  error: PropTypes.bool,\n  children: PropTypes.element,\n};\n\nErrorPage.defaultProps = {\n  errorCode: i18next.t(\"Error\"),\n  errorMessage: i18next.t(\"Server was not able to process your request.\"),\n  error: false,\n  children: undefined,\n};\n\nexport default Overridable.component(\"ErrorPage\", ErrorPage);\n","import { AdminUIRoutes } from \"@js/invenio_administration/src/routes\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Grid, Header, Divider, Container, Button } from \"semantic-ui-react\";\nimport { InvenioAdministrationActionsApi } from \"../api/actions\";\nimport DetailsTable from \"./DetailsComponent\";\nimport { Actions } from \"../actions/Actions\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { sortFields } from \"../components/utils\";\nimport { Loader, ErrorPage } from \"../components\";\n\nexport default class AdminDetailsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: undefined,\n      error: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ loading: true });\n    const { apiEndpoint, pid, requestHeaders } = this.props;\n    try {\n      const response = await InvenioAdministrationActionsApi.getResource(\n        apiEndpoint,\n        pid,\n        requestHeaders\n      );\n\n      this.setState({\n        loading: false,\n        data: response.data,\n        error: undefined,\n      });\n    } catch (e) {\n      console.error(e);\n      this.setState({ error: e, loading: false });\n    }\n  };\n\n  childrenWithData = (data, columns) => {\n    const { children } = this.props;\n    return React.Children.map(children, (child) => {\n      if (React.isValidElement(child)) {\n        return React.cloneElement(child, { data: data, columns: columns });\n      }\n      return child;\n    });\n  };\n\n  handleDelete = () => {\n    // after deleting the resource go back to the list view\n    const { listUIEndpoint } = this.props;\n    window.location.href = listUIEndpoint;\n  };\n\n  render() {\n    const {\n      title,\n      columns,\n      actions,\n      apiEndpoint,\n      idKeyPath,\n      listUIEndpoint,\n      resourceSchema,\n      resourceName,\n      displayDelete,\n      displayEdit,\n      uiSchema,\n    } = this.props;\n    const { loading, data, error } = this.state;\n    const sortedColumns = sortFields(uiSchema);\n    return (\n      <Loader isLoading={loading}>\n        <ErrorPage\n          error={!_isEmpty(error)}\n          errorCode={error?.response.status}\n          errorMessage={error?.response.data}\n        >\n          <Grid stackable>\n            <Grid.Row columns=\"2\">\n              <Grid.Column verticalAlign=\"middle\">\n                <Header as=\"h1\">{title}</Header>\n              </Grid.Column>\n              <Grid.Column verticalAlign=\"middle\" floated=\"right\" textAlign=\"right\">\n                <Button.Group size=\"tiny\" className=\"relaxed\">\n                  <Actions\n                    title={title}\n                    resourceName={resourceName}\n                    apiEndpoint={apiEndpoint}\n                    editUrl={AdminUIRoutes.editView(listUIEndpoint, data, idKeyPath)}\n                    actions={actions}\n                    displayEdit={displayEdit}\n                    displayDelete={displayDelete}\n                    resource={data}\n                    idKeyPath={idKeyPath}\n                    successCallback={this.handleDelete}\n                    listUIEndpoint={listUIEndpoint}\n                  />\n                </Button.Group>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Divider />\n          <Container fluid>\n            <DetailsTable\n              data={data}\n              schema={resourceSchema}\n              uiSchema={sortedColumns}\n            />\n            {this.childrenWithData(data, columns)}\n          </Container>\n        </ErrorPage>\n      </Loader>\n    );\n  }\n}\n\nAdminDetailsView.propTypes = {\n  actions: PropTypes.object,\n  apiEndpoint: PropTypes.string.isRequired,\n  columns: PropTypes.object.isRequired,\n  displayEdit: PropTypes.bool.isRequired,\n  displayDelete: PropTypes.bool.isRequired,\n  pid: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object,\n  resourceName: PropTypes.string.isRequired,\n  idKeyPath: PropTypes.string.isRequired,\n  listUIEndpoint: PropTypes.string.isRequired,\n  resourceSchema: PropTypes.object.isRequired,\n  requestHeaders: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object.isRequired,\n};\n\nAdminDetailsView.defaultProps = {\n  actions: undefined,\n  children: undefined,\n};\n","// This file is part of InvenioAdministration\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Overridable from \"react-overridable\";\nimport { Table } from \"semantic-ui-react\";\nimport Formatter from \"../components/Formatter\";\n\nclass DetailsTable extends Component {\n  render() {\n    const { schema, data, uiSchema } = this.props;\n\n    let fields = uiSchema ? uiSchema : schema;\n\n    const tableRows = Object.entries(fields).map(([field, fieldSchema]) => {\n      const text = fieldSchema.text || field;\n\n      return (\n        <Table.Row key={text}>\n          <Table.Cell width={3} className=\"vertical-align-top\">\n            <b>{text}</b>\n          </Table.Cell>\n          <Table.Cell>\n            <Formatter\n              result={data}\n              resourceSchema={schema}\n              property={field}\n              fieldSchema={fieldSchema}\n            />\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n\n    return (\n      <Overridable id=\"DetailsComponent.table\">\n        <Table unstackable>\n          <Table.Body>{tableRows}</Table.Body>\n        </Table>\n      </Overridable>\n    );\n  }\n}\n\nDetailsTable.propTypes = {\n  data: PropTypes.object.isRequired,\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object.isRequired,\n};\n\nexport default Overridable.component(\"DetailsTable\", DetailsTable);\n","// This file is part of InvenioAdministration\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _get from \"lodash/get\";\nimport AdminDetailsView from \"./AdminDetailsView\";\n\nconst domContainer = document.getElementById(\"invenio-details-config\");\n\nconst title = domContainer.dataset.title;\nconst fields = JSON.parse(domContainer.dataset.fields);\nconst pidValue = JSON.parse(domContainer.dataset.pid);\nconst resourceName = JSON.parse(domContainer.dataset.resourceName);\nconst displayEdit = JSON.parse(domContainer.dataset.displayEdit);\nconst displayDelete = JSON.parse(domContainer.dataset.displayDelete);\nconst actions = JSON.parse(domContainer.dataset.actions);\nconst apiEndpoint = _get(domContainer.dataset, \"apiEndpoint\");\nconst idKeyPath = JSON.parse(_get(domContainer.dataset, \"pidPath\", \"pid\"));\nconst listUIEndpoint = domContainer.dataset.listEndpoint;\nconst resourceSchema = JSON.parse(domContainer.dataset?.resourceSchema);\nconst requestHeaders = JSON.parse(domContainer.dataset?.requestHeaders);\nconst uiSchema = JSON.parse(domContainer.dataset?.uiConfig);\n\ndomContainer &&\n  ReactDOM.render(\n    <AdminDetailsView\n      title={title}\n      actions={actions}\n      apiEndpoint={apiEndpoint}\n      columns={fields}\n      pid={pidValue}\n      displayEdit={displayEdit}\n      displayDelete={displayDelete}\n      idKeyPath={idKeyPath}\n      resourceName={resourceName}\n      listUIEndpoint={listUIEndpoint}\n      resourceSchema={resourceSchema}\n      requestHeaders={requestHeaders}\n      uiSchema={uiSchema}\n    />,\n    domContainer\n  );\n"],"names":["Loader","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","isLoading","children","React","Overridable","_extends","id","UILoader","active","size","inline","Component","propTypes","PropTypes","defaultProps","component","ErrorPage","errorCode","errorMessage","error","Container","textAlign","className","Header","as","icon","Icon","name","circular","Subheader","i18next","t","undefined","AdminDetailsView","_this","_defineProperty","_asyncToGenerator","_regeneratorRuntime","_callee","apiEndpoint","pid","requestHeaders","response","_context","prev","next","setState","loading","InvenioAdministrationActionsApi","getResource","sent","data","t0","console","stop","columns","map","child","listUIEndpoint","window","location","href","state","fetchData","_this$props2","title","actions","idKeyPath","resourceSchema","resourceName","displayDelete","displayEdit","uiSchema","_this$state","sortedColumns","sortFields","_isEmpty","status","Grid","stackable","Row","Column","verticalAlign","floated","Button","Group","Actions","editUrl","AdminUIRoutes","editView","resource","successCallback","handleDelete","Divider","fluid","DetailsTable","schema","childrenWithData","isRequired","fields","tableRows","Object","entries","_ref","_ref2","_slicedToArray","field","fieldSchema","text","Table","Cell","width","Formatter","result","property","unstackable","Body","domContainer","document","getElementById","dataset","JSON","parse","pidValue","_get","listEndpoint","_domContainer$dataset","_domContainer$dataset2","_domContainer$dataset3","uiConfig","ReactDOM"],"sourceRoot":""}