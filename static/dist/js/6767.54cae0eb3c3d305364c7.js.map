{"version":3,"file":"js/6767.54cae0eb3c3d305364c7.js","mappings":"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","sources":["webpack://invenio-assets/./node_modules/geopattern/geopattern.js","webpack://invenio-assets/./node_modules/geopattern/lib/color.js","webpack://invenio-assets/./node_modules/geopattern/lib/pattern.js","webpack://invenio-assets/./node_modules/geopattern/lib/sha1.js","webpack://invenio-assets/./node_modules/geopattern/lib/svg.js","webpack://invenio-assets/./node_modules/geopattern/lib/xml.js","webpack://invenio-assets/./node_modules/geopattern/node_modules/extend/index.js"],"sourcesContent":["(function ($) {\n\n'use strict';\n\nvar Pattern = require('./lib/pattern');\n\n/*\n * Normalize arguments, if not given, to:\n * string: (new Date()).toString()\n * options: {}\n */\nfunction optArgs(cb) {\n\treturn function (string, options) {\n\t\tif (typeof string === 'object') {\n\t\t\toptions = string;\n\t\t\tstring = null;\n\t\t}\n\t\tif (string === null || string === undefined) {\n\t\t\tstring = (new Date()).toString();\n\t\t}\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\treturn cb.call(this, string, options);\n\t};\n}\n\nvar GeoPattern = module.exports = {\n\tgenerate: optArgs(function (string, options) {\n\t\treturn new Pattern(string, options);\n\t})\n};\n\nif ($) {\n\n\t// If jQuery, add plugin\n\t$.fn.geopattern = optArgs(function (string, options) {\n\t\treturn this.each(function () {\n\t\t\tvar titleSha = $(this).attr('data-title-sha');\n\t\t\tif (titleSha) {\n\t\t\t\toptions = $.extend({\n\t\t\t\t\thash: titleSha\n\t\t\t\t}, options);\n\t\t\t}\n\t\t\tvar pattern = GeoPattern.generate(string, options);\n\t\t\t$(this).css('background-image', pattern.toDataUrl());\n\t\t});\n\t});\n\n}\n\n}(typeof jQuery !== 'undefined' ? jQuery : null));\n","/*eslint sort-vars:0, curly:0*/\n\n'use strict';\n\n/**\n * Converts a hex CSS color value to RGB.\n * Adapted from http://stackoverflow.com/a/5624139.\n *\n * @param\tString\thex\t\tThe hexadecimal color value\n * @return\tObject\t\t\tThe RGB representation\n */\nfunction hex2rgb(hex) {\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\n\t\treturn r + r + g + g + b + b;\n\t});\n\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result ? {\n\t\tr: parseInt(result[1], 16),\n\t\tg: parseInt(result[2], 16),\n\t\tb: parseInt(result[3], 16)\n\t} : null;\n}\n\n/**\n * Converts an RGB color value to a hex string.\n * @param  Object rgb RGB as r, g, and b keys\n * @return String     Hex color string\n */\nfunction rgb2hex(rgb) {\n\treturn '#' + ['r', 'g', 'b'].map(function (key) {\n\t\treturn ('0' + rgb[key].toString(16)).slice(-2);\n\t}).join('');\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula adapted from\n * http://en.wikipedia.org/wiki/HSL_color_space. This function adapted\n * from http://stackoverflow.com/a/9493060.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Object  rgb     RGB as r, g, and b keys\n * @return  Object          HSL as h, s, and l keys\n */\nfunction rgb2hsl(rgb) {\n\tvar r = rgb.r, g = rgb.g, b = rgb.b;\n\tr /= 255; g /= 255; b /= 255;\n\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\tvar h, s, l = (max + min) / 2;\n\n\tif (max === min) {\n\t\th = s = 0; // achromatic\n\t} else {\n\t\tvar d = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\tswitch (max) {\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\t\th /= 6;\n\t}\n\n\treturn { h: h, s: s, l: l };\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula adapted from\n * http://en.wikipedia.org/wiki/HSL_color_space. This function adapted\n * from http://stackoverflow.com/a/9493060.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Object  hsl     HSL as h, s, and l keys\n * @return  Object          RGB as r, g, and b values\n */\nfunction hsl2rgb(hsl) {\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tvar h = hsl.h, s = hsl.s, l = hsl.l;\n\tvar r, g, b;\n\n\tif(s === 0){\n\t\tr = g = b = l; // achromatic\n\t}else{\n\n\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tvar p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\nmodule.exports = {\n\thex2rgb: hex2rgb,\n\trgb2hex: rgb2hex,\n\trgb2hsl: rgb2hsl,\n\thsl2rgb: hsl2rgb,\n\trgb2rgbString: function (rgb) {\n\t\treturn 'rgb(' + [rgb.r, rgb.g, rgb.b].join(',') + ')';\n\t}\n};\n","'use strict';\n\nvar extend = require('extend');\nvar color  = require('./color');\nvar SHA1   = require('./sha1');\nvar SVG    = require('./svg');\n\n\n\nvar DEFAULTS = {\n\tbaseColor: '#933c3c'\n};\n\nvar PATTERNS = [\n\t'octogons',\n\t'overlappingCircles',\n\t'plusSigns',\n\t'xes',\n\t'sineWaves',\n\t'hexagons',\n\t'overlappingRings',\n\t'plaid',\n\t'triangles',\n\t'squares',\n\t'concentricCircles',\n\t'diamonds',\n\t'tessellation',\n\t'nestedSquares',\n\t'mosaicSquares',\n\t'chevrons'\n];\n\nvar FILL_COLOR_DARK  = '#222';\nvar FILL_COLOR_LIGHT = '#ddd';\nvar STROKE_COLOR     = '#000';\nvar STROKE_OPACITY   = 0.02;\nvar OPACITY_MIN      = 0.02;\nvar OPACITY_MAX      = 0.15;\n\n\n\n// Helpers\n\n/**\n * Extract a substring from a hex string and parse it as an integer\n * @param {string} hash - Source hex string\n * @param {number} index - Start index of substring\n * @param {number} [length] - Length of substring. Defaults to 1.\n */\nfunction hexVal(hash, index, len) {\n\treturn parseInt(hash.substr(index, len || 1), 16);\n}\n\n/*\n * Re-maps a number from one range to another\n * http://processing.org/reference/map_.html\n */\nfunction map(value, vMin, vMax, dMin, dMax) {\n\tvar vValue = parseFloat(value);\n\tvar vRange = vMax - vMin;\n\tvar dRange = dMax - dMin;\n\n\treturn (vValue - vMin) * dRange / vRange + dMin;\n}\n\nfunction fillColor(val) {\n\treturn (val % 2 === 0) ? FILL_COLOR_LIGHT : FILL_COLOR_DARK;\n}\n\nfunction fillOpacity(val) {\n\treturn map(val, 0, 15, OPACITY_MIN, OPACITY_MAX);\n}\n\n\n\nvar Pattern = module.exports = function (string, options) {\n\tthis.opts = extend({}, DEFAULTS, options);\n\tthis.hash = options.hash || SHA1(string);\n\tthis.svg = new SVG();\n\n\tthis.generateBackground();\n\tthis.generatePattern();\n\n\treturn this;\n};\n\nPattern.prototype.toSvg = function () {\n\treturn this.svg.toString();\n};\n\nPattern.prototype.toString = function () {\n\treturn this.toSvg();\n};\n\nPattern.prototype.toBase64 = function () {\n\tvar str = this.toSvg();\n\tvar b64;\n\n\t// Use window.btoa if in the browser; otherwise fallback to node buffers\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\tb64 = window.btoa(str);\n\t} else {\n\t\tb64 = new Buffer(str).toString('base64');\n\t}\n\n\treturn b64;\n};\n\nPattern.prototype.toDataUri = function () {\n\treturn 'data:image/svg+xml;base64,' + this.toBase64();\n};\n\nPattern.prototype.toDataUrl = function () {\n\treturn 'url(\"' + this.toDataUri() + '\")';\n};\n\nPattern.prototype.generateBackground = function () {\n\tvar baseColor, hueOffset, rgb, satOffset;\n\n\tif (this.opts.color) {\n\t\trgb = color.hex2rgb(this.opts.color);\n\t} else {\n\t\thueOffset = map(hexVal(this.hash, 14, 3), 0, 4095, 0, 359);\n\t\tsatOffset = hexVal(this.hash, 17);\n\t\tbaseColor = color.rgb2hsl(color.hex2rgb(this.opts.baseColor));\n\n\t\tbaseColor.h = (((baseColor.h * 360 - hueOffset) + 360) % 360) / 360;\n\n\t\tif (satOffset % 2 === 0) {\n\t\t\tbaseColor.s = Math.min(1, ((baseColor.s * 100) + satOffset) / 100);\n\t\t} else {\n\t\t\tbaseColor.s = Math.max(0, ((baseColor.s * 100) - satOffset) / 100);\n\t\t}\n\t\trgb = color.hsl2rgb(baseColor);\n\t}\n\n\tthis.color = color.rgb2hex(rgb);\n\n\tthis.svg.rect(0, 0, '100%', '100%', {\n\t\tfill: color.rgb2rgbString(rgb)\n\t});\n};\n\nPattern.prototype.generatePattern = function () {\n\tvar generator = this.opts.generator;\n\n\tif (generator) {\n\t\tif (PATTERNS.indexOf(generator) < 0) {\n\t\t\tthrow new Error('The generator '\n\t\t\t\t+ generator\n\t\t\t\t+ ' does not exist.');\n\t\t}\n\t} else {\n\t\tgenerator = PATTERNS[hexVal(this.hash, 20)];\n\t}\n\n\treturn this['geo' + generator.slice(0, 1).toUpperCase() + generator.slice(1)]();\n};\n\nfunction buildHexagonShape(sideLength) {\n\tvar c = sideLength;\n\tvar a = c / 2;\n\tvar b = Math.sin(60 * Math.PI / 180) * c;\n\treturn [\n\t\t0, b,\n\t\ta, 0,\n\t\ta + c, 0,\n\t\t2 * c, b,\n\t\ta + c, 2 * b,\n\t\ta, 2 * b,\n\t\t0, b\n\t].join(',');\n}\n\nPattern.prototype.geoHexagons = function () {\n\tvar scale      = hexVal(this.hash, 0);\n\tvar sideLength = map(scale, 0, 15, 8, 60);\n\tvar hexHeight  = sideLength * Math.sqrt(3);\n\tvar hexWidth   = sideLength * 2;\n\tvar hex        = buildHexagonShape(sideLength);\n\tvar dy, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(hexWidth * 3 + sideLength * 3);\n\tthis.svg.setHeight(hexHeight * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\tdy      = x % 2 === 0 ? y * hexHeight : y * hexHeight + hexHeight / 2;\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tdy = x % 2 === 0 ? 6 * hexHeight : 6 * hexHeight + hexHeight / 2;\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\t5 * hexHeight + hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoSineWaves = function () {\n\tvar period    = Math.floor(map(hexVal(this.hash, 0), 0, 15, 100, 400));\n\tvar amplitude = Math.floor(map(hexVal(this.hash, 1), 0, 15, 30, 100));\n\tvar waveWidth = Math.floor(map(hexVal(this.hash, 2), 0, 15, 3, 30));\n\tvar fill, i, opacity, str, styles, val, xOffset;\n\n\tthis.svg.setWidth(period);\n\tthis.svg.setHeight(waveWidth * 36);\n\n\tfor (i = 0; i < 36; i++) {\n\t\tval     = hexVal(this.hash, i);\n\t\topacity = fillOpacity(val);\n\t\tfill    = fillColor(val);\n\t\txOffset = period / 4 * 0.7;\n\n\t\tstyles = {\n\t\t\tfill: 'none',\n\t\t\tstroke: fill,\n\t\t\topacity: opacity,\n\t\t\t'stroke-width': '' + waveWidth + 'px'\n\t\t};\n\n\t\tstr = 'M0 ' + amplitude +\n\t\t\t' C ' + xOffset + ' 0, ' + (period / 2 - xOffset) + ' 0, ' + (period / 2) + ' ' + amplitude +\n\t\t\t' S ' + (period - xOffset) + ' ' + (amplitude * 2) + ', ' + period + ' ' + amplitude +\n\t\t\t' S ' + (period * 1.5 - xOffset) + ' 0, ' + (period * 1.5) + ', ' + amplitude;\n\n\t\tthis.svg.path(str, styles).transform({\n\t\t\ttranslate: [\n\t\t\t\t-period / 4,\n\t\t\t\twaveWidth * i - amplitude * 1.5\n\t\t\t]\n\t\t});\n\t\tthis.svg.path(str, styles).transform({\n\t\t\ttranslate: [\n\t\t\t\t-period / 4,\n\t\t\t\twaveWidth * i - amplitude * 1.5 + waveWidth * 36\n\t\t\t]\n\t\t});\n\t}\n};\n\nfunction buildChevronShape(width, height) {\n\tvar e = height * 0.66;\n\treturn [\n\t\t[\n\t\t\t0, 0,\n\t\t\twidth / 2, height - e,\n\t\t\twidth / 2, height,\n\t\t\t0, e,\n\t\t\t0, 0\n\t\t],\n\t\t[\n\t\t\twidth / 2, height - e,\n\t\t\twidth, 0,\n\t\t\twidth, e,\n\t\t\twidth / 2, height,\n\t\t\twidth / 2, height - e\n\t\t]\n\t].map(function (x) { return x.join(','); });\n}\n\nPattern.prototype.geoChevrons = function () {\n\tvar chevronWidth  = map(hexVal(this.hash, 0), 0, 15, 30, 80);\n\tvar chevronHeight = map(hexVal(this.hash, 0), 0, 15, 30, 80);\n\tvar chevron       = buildChevronShape(chevronWidth, chevronHeight);\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(chevronWidth * 6);\n\tthis.svg.setHeight(chevronHeight * 6 * 0.66);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\t'stroke-width': 1\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * chevronWidth,\n\t\t\t\t\ty * chevronHeight * 0.66 - chevronHeight / 2\n\t\t\t\t]\n\t\t\t}).polyline(chevron).end();\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * chevronWidth,\n\t\t\t\t\t\t6 * chevronHeight * 0.66 - chevronHeight / 2\n\t\t\t\t\t]\n\t\t\t\t}).polyline(chevron).end();\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildPlusShape(squareSize) {\n\treturn [\n\t\t[squareSize, 0, squareSize, squareSize * 3],\n\t\t[0, squareSize, squareSize * 3, squareSize]\n\t];\n}\n\nPattern.prototype.geoPlusSigns = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 25);\n\tvar plusSize   = squareSize * 3;\n\tvar plusShape  = buildPlusShape(squareSize);\n\tvar dx, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 12);\n\tthis.svg.setHeight(squareSize * 12);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\t\t\tdx      = (y % 2 === 0) ? 0 : 1;\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\t\t'fill-opacity': opacity\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\ty * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t]\n\t\t\t}).rect(plusShape).end();\n\n\t\t\t// Add an extra column on the right for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t4 * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\ty * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra row on the bottom that matches the first row, for tiling\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\t4 * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra one at top-right and bottom-right, for tiling\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t4 * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\t4 * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoXes = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 25);\n\tvar xShape     = buildPlusShape(squareSize);\n\tvar xSize      = squareSize * 3 * 0.943;\n\tvar dy, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(xSize * 3);\n\tthis.svg.setHeight(xSize * 3);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tdy      = x % 2 === 0 ? y * xSize - xSize * 0.5 : y * xSize - xSize * 0.5 + xSize / 4;\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\topacity: opacity\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\tdy - y * xSize / 2\n\t\t\t\t],\n\t\t\t\trotate: [\n\t\t\t\t\t45,\n\t\t\t\t\txSize / 2,\n\t\t\t\t\txSize / 2\n\t\t\t\t]\n\t\t\t}).rect(xShape).end();\n\n\t\t\t// Add an extra column on the right for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - y * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// // Add an extra row on the bottom that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tdy = x % 2 === 0 ? 6 * xSize - xSize / 2 : 6 * xSize - xSize / 2 + xSize / 4;\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 6 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// These can hang off the bottom, so put a row at the top for tiling.\n\t\t\tif (y === 5) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 11 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra one at top-right and bottom-right, for tiling\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 6 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoOverlappingCircles = function () {\n\tvar scale    = hexVal(this.hash, 0);\n\tvar diameter = map(scale, 0, 15, 25, 200);\n\tvar radius   = diameter / 2;\n\tvar circle, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(radius * 6);\n\tthis.svg.setHeight(radius * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\topacity: opacity\n\t\t\t};\n\n\t\t\tthis.svg.circle(x * radius, y * radius, radius, styles);\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.circle(6 * radius, y * radius, radius, styles);\n\t\t\t}\n\n\t\t\t// // Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.circle(x * radius, 6 * radius, radius, styles);\n\t\t\t}\n\n\t\t\t// // Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.circle(6 * radius, 6 * radius, radius, styles);\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nfunction buildOctogonShape(squareSize) {\n\tvar s = squareSize;\n\tvar c = s * 0.33;\n\treturn [\n\t\tc, 0,\n\t\ts - c, 0,\n\t\ts, c,\n\t\ts, s - c,\n\t\ts - c, s,\n\t\tc, s,\n\t\t0, s - c,\n\t\t0, c,\n\t\tc, 0\n\t].join(',');\n}\n\nPattern.prototype.geoOctogons = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 60);\n\tvar tile       = buildOctogonShape(squareSize);\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 6);\n\tthis.svg.setHeight(squareSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.polyline(tile, {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t}).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * squareSize,\n\t\t\t\t\ty * squareSize\n\t\t\t\t]\n\t\t\t});\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoSquares = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 60);\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 6);\n\tthis.svg.setHeight(squareSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.rect(x * squareSize, y * squareSize, squareSize, squareSize, {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t});\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoConcentricCircles = function () {\n\tvar scale       = hexVal(this.hash, 0);\n\tvar ringSize    = map(scale, 0, 15, 10, 60);\n\tvar strokeWidth = ringSize / 5;\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth((ringSize + strokeWidth) * 6);\n\tthis.svg.setHeight((ringSize + strokeWidth) * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.circle(\n\t\t\t\tx * ringSize + x * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\ty * ringSize + y * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\tringSize / 2,\n\t\t\t\t{\n\t\t\t\t\tfill: 'none',\n\t\t\t\t\tstroke: fill,\n\t\t\t\t\topacity: opacity,\n\t\t\t\t\t'stroke-width': strokeWidth + 'px'\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tval     = hexVal(this.hash, 39 - i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.circle(\n\t\t\t\tx * ringSize + x * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\ty * ringSize + y * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\tringSize / 4,\n\t\t\t\t{\n\t\t\t\t\tfill: fill,\n\t\t\t\t\t'fill-opacity': opacity\n\t\t\t\t}\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoOverlappingRings = function () {\n\tvar scale       = hexVal(this.hash, 0);\n\tvar ringSize    = map(scale, 0, 15, 10, 60);\n\tvar strokeWidth = ringSize / 4;\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(ringSize * 6);\n\tthis.svg.setHeight(ringSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': strokeWidth + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.circle(x * ringSize, y * ringSize, ringSize - strokeWidth / 2, styles);\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.circle(6 * ringSize, y * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.circle(x * ringSize, 6 * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.circle(6 * ringSize, 6 * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildTriangleShape(sideLength, height) {\n\tvar halfWidth = sideLength / 2;\n\treturn [\n\t\thalfWidth, 0,\n\t\tsideLength, height,\n\t\t0, height,\n\t\thalfWidth, 0\n\t].join(',');\n}\n\nPattern.prototype.geoTriangles = function () {\n\tvar scale          = hexVal(this.hash, 0);\n\tvar sideLength     = map(scale, 0, 15, 15, 80);\n\tvar triangleHeight = sideLength / 2 * Math.sqrt(3);\n\tvar triangle       = buildTriangleShape(sideLength, triangleHeight);\n\tvar fill, i, opacity, rotation, styles, val, x, y;\n\n\tthis.svg.setWidth(sideLength * 3);\n\tthis.svg.setHeight(triangleHeight * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tif (y % 2 === 0) {\n\t\t\t\trotation = x % 2 === 0 ? 180 : 0;\n\t\t\t} else {\n\t\t\t\trotation = x % 2 !== 0 ? 180 : 0;\n\t\t\t}\n\n\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * sideLength * 0.5 - sideLength / 2,\n\t\t\t\t\ttriangleHeight * y\n\t\t\t\t],\n\t\t\t\trotate: [\n\t\t\t\t\trotation,\n\t\t\t\t\tsideLength / 2,\n\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 0.5 - sideLength / 2,\n\t\t\t\t\t\ttriangleHeight * y\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildDiamondShape(width, height) {\n\treturn [\n\t\twidth / 2, 0,\n\t\twidth, height / 2,\n\t\twidth / 2, height,\n\t\t0, height / 2\n\t].join(',');\n}\n\nPattern.prototype.geoDiamonds = function () {\n\tvar diamondWidth  = map(hexVal(this.hash, 0), 0, 15, 10, 50);\n\tvar diamondHeight = map(hexVal(this.hash, 1), 0, 15, 10, 50);\n\tvar diamond       = buildDiamondShape(diamondWidth, diamondHeight);\n\tvar dx, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(diamondWidth * 6);\n\tthis.svg.setHeight(diamondHeight * 3);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tdx = (y % 2 === 0) ? 0 : diamondWidth / 2;\n\n\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\tdiamondHeight / 2 * y - diamondHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * y - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * 6 - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * 6 - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoNestedSquares = function () {\n\tvar blockSize  = map(hexVal(this.hash, 0), 0, 15, 4, 12);\n\tvar squareSize = blockSize * 7;\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth((squareSize + blockSize) * 6 + blockSize * 6);\n\tthis.svg.setHeight((squareSize + blockSize) * 6 + blockSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': blockSize + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.rect(x * squareSize + x * blockSize * 2 + blockSize / 2,\n\t\t\t              y * squareSize + y * blockSize * 2 + blockSize / 2,\n\t\t\t              squareSize, squareSize, styles);\n\n\t\t\tval     = hexVal(this.hash, 39 - i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': blockSize + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.rect(x * squareSize + x * blockSize * 2 + blockSize / 2 + blockSize * 2,\n\t\t\t              y * squareSize + y * blockSize * 2 + blockSize / 2 + blockSize * 2,\n\t\t\t              blockSize * 3, blockSize * 3, styles);\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildRightTriangleShape(sideLength) {\n\treturn [\n\t\t0, 0,\n\t\tsideLength, sideLength,\n\t\t0, sideLength,\n\t\t0, 0\n\t].join(',');\n}\n\nfunction drawInnerMosaicTile(svg, x, y, triangleSize, vals) {\n\tvar triangle = buildRightTriangleShape(triangleSize);\n\tvar opacity  = fillOpacity(vals[0]);\n\tvar fill     = fillColor(vals[0]);\n\tvar styles   = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty\n\t\t],\n\t\tscale: [-1, 1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty + triangleSize * 2\n\t\t],\n\t\tscale: [1, -1]\n\t});\n\n\topacity = fillOpacity(vals[1]);\n\tfill    = fillColor(vals[1]);\n\tstyles  = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty + triangleSize * 2\n\t\t],\n\t\tscale: [-1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty\n\t\t],\n\t\tscale: [1, 1]\n\t});\n}\n\nfunction drawOuterMosaicTile(svg, x, y, triangleSize, val) {\n\tvar opacity  = fillOpacity(val);\n\tvar fill     = fillColor(val);\n\tvar triangle = buildRightTriangleShape(triangleSize);\n\tvar styles   = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize * 2,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [-1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [1, 1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize * 2,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [-1, 1]\n\t});\n}\n\nPattern.prototype.geoMosaicSquares = function () {\n\tvar triangleSize = map(hexVal(this.hash, 0), 0, 15, 15, 50);\n\tvar i, x, y;\n\n\tthis.svg.setWidth(triangleSize * 8);\n\tthis.svg.setHeight(triangleSize * 8);\n\n\ti = 0;\n\tfor (y = 0; y < 4; y++) {\n\t\tfor (x = 0; x < 4; x++) {\n\t\t\tif (x % 2 === 0) {\n\t\t\t\tif (y % 2 === 0) {\n\t\t\t\t\tdrawOuterMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\thexVal(this.hash, i)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdrawInnerMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\t[hexVal(this.hash, i), hexVal(this.hash, i + 1)]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (y % 2 === 0) {\n\t\t\t\t\tdrawInnerMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\t[hexVal(this.hash, i), hexVal(this.hash, i + 1)]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdrawOuterMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\thexVal(this.hash, i)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoPlaid = function () {\n\tvar height = 0;\n\tvar width  = 0;\n\tvar fill, i, opacity, space, stripeHeight, stripeWidth, val;\n\n\t// Horizontal stripes\n\ti = 0;\n\twhile (i < 36) {\n\t\tspace   = hexVal(this.hash, i);\n\t\theight += space + 5;\n\n\t\tval          = hexVal(this.hash, i + 1);\n\t\topacity      = fillOpacity(val);\n\t\tfill         = fillColor(val);\n\t\tstripeHeight = val + 5;\n\n\t\tthis.svg.rect(0, height, '100%', stripeHeight, {\n\t\t\topacity: opacity,\n\t\t\tfill: fill\n\t\t});\n\n\t\theight += stripeHeight;\n\t\ti += 2;\n\t}\n\n\t// Vertical stripes\n\ti = 0;\n\twhile (i < 36) {\n\t\tspace  = hexVal(this.hash, i);\n\t\twidth += space + 5;\n\n\t\tval         = hexVal(this.hash, i + 1);\n\t\topacity     = fillOpacity(val);\n\t\tfill        = fillColor(val);\n\t\tstripeWidth = val + 5;\n\n\t\tthis.svg.rect(width, 0, stripeWidth, '100%', {\n\t\t\topacity: opacity,\n\t\t\tfill: fill\n\t\t});\n\n\t\twidth += stripeWidth;\n\t\ti += 2;\n\t}\n\n\tthis.svg.setWidth(width);\n\tthis.svg.setHeight(height);\n};\n\nfunction buildRotatedTriangleShape(sideLength, triangleWidth) {\n\tvar halfHeight = sideLength / 2;\n\treturn [\n\t\t0, 0,\n\t\ttriangleWidth, halfHeight,\n\t\t0, sideLength,\n\t\t0, 0\n\t].join(',');\n}\n\nPattern.prototype.geoTessellation = function () {\n\t// 3.4.6.4 semi-regular tessellation\n\tvar sideLength     = map(hexVal(this.hash, 0), 0, 15, 5, 40);\n\tvar hexHeight      = sideLength * Math.sqrt(3);\n\tvar hexWidth       = sideLength * 2;\n\tvar triangleHeight = sideLength / 2 * Math.sqrt(3);\n\tvar triangle       = buildRotatedTriangleShape(sideLength, triangleHeight);\n\tvar tileWidth      = sideLength * 3 + triangleHeight * 2;\n\tvar tileHeight     = (hexHeight * 2) + (sideLength * 2);\n\tvar fill, i, opacity, styles, val;\n\n\tthis.svg.setWidth(tileWidth);\n\tthis.svg.setHeight(tileHeight);\n\n\tfor (i = 0; i < 20; i++) {\n\t\tval     = hexVal(this.hash, i);\n\t\topacity = fillOpacity(val);\n\t\tfill    = fillColor(val);\n\n\t\tstyles  = {\n\t\t\tstroke: STROKE_COLOR,\n\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\tfill: fill,\n\t\t\t'fill-opacity': opacity,\n\t\t\t'stroke-width': 1\n\t\t};\n\n\t\tswitch (i) {\n\t\t\tcase 0: // All 4 corners\n\t\t\t\tthis.svg.rect(-sideLength / 2, -sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, -sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(-sideLength / 2, tileHeight - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, tileHeight - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 1: // Center / top square\n\t\t\t\tthis.svg.rect(hexWidth / 2 + triangleHeight, hexHeight / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Side squares\n\t\t\t\tthis.svg.rect(-sideLength / 2, tileHeight / 2 - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, tileHeight / 2 - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Center / bottom square\n\t\t\t\tthis.svg.rect(hexWidth / 2 + triangleHeight, hexHeight * 1.5 + sideLength, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 4: // Left top / bottom triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight - -sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 5: // Right top / bottom triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\t-sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\ttileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 6: // Center / top / right triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth / 2 + sideLength / 2,\n\t\t\t\t\t\thexHeight / 2\n\t\t\t\t\t]});\n\t\t\t\tbreak;\n\t\t\tcase 7: // Center / top / left triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - tileWidth / 2 - sideLength / 2,\n\t\t\t\t\t\thexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 8: // Center / bottom / right triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth / 2 + sideLength / 2,\n\t\t\t\t\t\ttileHeight - hexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 9: // Center / bottom / left triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - tileWidth / 2 - sideLength / 2,\n\t\t\t\t\t\ttileHeight - hexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 10: // Left / middle triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 11: // Right // middle triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 12: // Left / top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\ttranslate: [sideLength / 2, sideLength / 2],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 13: // Right / top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, 1],\n\t\t\t\t\ttranslate: [-tileWidth + sideLength / 2, sideLength / 2],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 14: // Left / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 15: // Right / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, 1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2  - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 16: // Left / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-tileHeight + tileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 17: // Right / center-bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\t-tileHeight + tileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 18: // Left / bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-tileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 19: // Right / bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\t-tileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n","/*\nhttps://github.com/creationix/git-sha1/blob/master/git-sha1.js\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Tim Caswell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n'use strict';\n\n// A streaming interface for when nothing is passed in.\nfunction create() {\n\n\tvar h0 = 0x67452301;\n\tvar h1 = 0xEFCDAB89;\n\tvar h2 = 0x98BADCFE;\n\tvar h3 = 0x10325476;\n\tvar h4 = 0xC3D2E1F0;\n\t// The first 64 bytes (16 words) is the data chunk\n\tvar block = new Uint32Array(80), offset = 0, shift = 24;\n\tvar totalLength = 0;\n\n\t// We have a full block to process.  Let's do it!\n\tfunction processBlock() {\n\t\t// Extend the sixteen 32-bit words into eighty 32-bit words:\n\t\tfor (var i = 16; i < 80; i++) {\n\t\t\tvar w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\n\t\t\tblock[i] = (w << 1) | (w >>> 31);\n\t\t}\n\n\t\t// log(block);\n\n\t\t// Initialize hash value for this chunk:\n\t\tvar a = h0;\n\t\tvar b = h1;\n\t\tvar c = h2;\n\t\tvar d = h3;\n\t\tvar e = h4;\n\t\tvar f, k;\n\n\t\t// Main loop:\n\t\tfor (i = 0; i < 80; i++) {\n\t\t\tif (i < 20) {\n\t\t\t\tf = d ^ (b & (c ^ d));\n\t\t\t\tk = 0x5A827999;\n\t\t\t}\n\t\t\telse if (i < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t}\n\t\t\telse if (i < 60) {\n\t\t\t\tf = (b & c) | (d & (b | c));\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\t\t\tvar temp = (a << 5 | a >>> 27) + f + e + k + (block[i] | 0);\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = (b << 30 | b >>> 2);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\t// Add this chunk's hash to result so far:\n\t\th0 = (h0 + a) | 0;\n\t\th1 = (h1 + b) | 0;\n\t\th2 = (h2 + c) | 0;\n\t\th3 = (h3 + d) | 0;\n\t\th4 = (h4 + e) | 0;\n\n\t\t// The block is now reusable.\n\t\toffset = 0;\n\t\tfor (i = 0; i < 16; i++) {\n\t\t\tblock[i] = 0;\n\t\t}\n\t}\n\n\tfunction write(byte) {\n\t\tblock[offset] |= (byte & 0xff) << shift;\n\t\tif (shift) {\n\t\t\tshift -= 8;\n\t\t}\n\t\telse {\n\t\t\toffset++;\n\t\t\tshift = 24;\n\t\t}\n\t\tif (offset === 16) {\n\t\t\tprocessBlock();\n\t\t}\n\t}\n\n\tfunction updateString(string) {\n\t\tvar length = string.length;\n\t\ttotalLength += length * 8;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\twrite(string.charCodeAt(i));\n\t\t}\n\t}\n\n\t// The user gave us more data.  Store it!\n\tfunction update(chunk) {\n\t\tif (typeof chunk === 'string') {\n\t\t\treturn updateString(chunk);\n\t\t}\n\t\tvar length = chunk.length;\n\t\ttotalLength += length * 8;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\twrite(chunk[i]);\n\t\t}\n\t}\n\n\tfunction toHex(word) {\n\t\tvar hex = '';\n\t\tfor (var i = 28; i >= 0; i -= 4) {\n\t\t\thex += ((word >> i) & 0xf).toString(16);\n\t\t}\n\t\treturn hex;\n\t}\n\n\t// No more data will come, pad the block, process and return the result.\n\tfunction digest() {\n\t\t// Pad\n\t\twrite(0x80);\n\t\tif (offset > 14 || (offset === 14 && shift < 24)) {\n\t\t\tprocessBlock();\n\t\t}\n\t\toffset = 14;\n\t\tshift = 24;\n\n\t\t// 64-bit length big-endian\n\t\twrite(0x00); // numbers this big aren't accurate in javascript anyway\n\t\twrite(0x00); // ..So just hard-code to zero.\n\t\twrite(totalLength > 0xffffffffff ? totalLength / 0x10000000000 : 0x00);\n\t\twrite(totalLength > 0xffffffff ? totalLength / 0x100000000 : 0x00);\n\t\tfor (var s = 24; s >= 0; s -= 8) {\n\t\t\twrite(totalLength >> s);\n\t\t}\n\n\t\t// At this point one last processBlock() should trigger and we can pull out the result.\n\t\treturn toHex(h0) +\n\t\ttoHex(h1) +\n\t\ttoHex(h2) +\n\t\ttoHex(h3) +\n\t\ttoHex(h4);\n\t}\n\n\treturn { update: update, digest: digest };\n}\n\n// Input chunks must be either arrays of bytes or \"raw\" encoded strings\nmodule.exports = function sha1(buffer) {\n\tif (buffer === undefined) {\n\t\treturn create();\n\t}\n\tvar shasum = create();\n\tshasum.update(buffer);\n\treturn shasum.digest();\n};\n","'use strict';\n\nvar extend = require('extend');\nvar XMLNode = require('./xml');\n\nfunction SVG() {\n\tthis.width = 100;\n\tthis.height = 100;\n\tthis.svg = XMLNode('svg');\n\tthis.context = []; // Track nested nodes\n\tthis.setAttributes(this.svg, {\n\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\twidth: this.width,\n\t\theight: this.height\n\t});\n\n\treturn this;\n}\n\nmodule.exports = SVG;\n\n// This is a hack so groups work.\nSVG.prototype.currentContext = function () {\n\treturn this.context[this.context.length - 1] || this.svg;\n};\n\n// This is a hack so groups work.\nSVG.prototype.end = function () {\n\tthis.context.pop();\n\treturn this;\n};\n\nSVG.prototype.currentNode = function () {\n\tvar context = this.currentContext();\n\treturn context.lastChild || context;\n};\n\nSVG.prototype.transform = function (transformations) {\n\tthis.currentNode().setAttribute('transform',\n\t\tObject.keys(transformations).map(function (transformation) {\n\t\t\treturn transformation + '(' + transformations[transformation].join(',') + ')';\n\t\t}).join(' ')\n\t);\n\treturn this;\n};\n\nSVG.prototype.setAttributes = function (el, attrs) {\n\tObject.keys(attrs).forEach(function (attr) {\n\t\tel.setAttribute(attr, attrs[attr]);\n\t});\n};\n\nSVG.prototype.setWidth = function (width) {\n\tthis.svg.setAttribute('width', Math.floor(width));\n};\n\nSVG.prototype.setHeight = function (height) {\n\tthis.svg.setAttribute('height', Math.floor(height));\n};\n\nSVG.prototype.toString = function () {\n\treturn this.svg.toString();\n};\n\nSVG.prototype.rect = function (x, y, width, height, args) {\n\t// Accept array first argument\n\tvar self = this;\n\tif (Array.isArray(x)) {\n\t\tx.forEach(function (a) {\n\t\t\tself.rect.apply(self, a.concat(args));\n\t\t});\n\t\treturn this;\n\t}\n\n\tvar rect = XMLNode('rect');\n\tthis.currentContext().appendChild(rect);\n\tthis.setAttributes(rect, extend({\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.circle = function (cx, cy, r, args) {\n\tvar circle = XMLNode('circle');\n\tthis.currentContext().appendChild(circle);\n\tthis.setAttributes(circle, extend({\n\t\tcx: cx,\n\t\tcy: cy,\n\t\tr: r\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.path = function (str, args) {\n\tvar path = XMLNode('path');\n\tthis.currentContext().appendChild(path);\n\tthis.setAttributes(path, extend({\n\t\td: str\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.polyline = function (str, args) {\n\t// Accept array first argument\n\tvar self = this;\n\tif (Array.isArray(str)) {\n\t\tstr.forEach(function (s) {\n\t\t\tself.polyline(s, args);\n\t\t});\n\t\treturn this;\n\t}\n\n\tvar polyline = XMLNode('polyline');\n\tthis.currentContext().appendChild(polyline);\n\tthis.setAttributes(polyline, extend({\n\t\tpoints: str\n\t}, args));\n\n\treturn this;\n};\n\n// group and context are hacks\nSVG.prototype.group = function (args) {\n\tvar group = XMLNode('g');\n\tthis.currentContext().appendChild(group);\n\tthis.context.push(group);\n\tthis.setAttributes(group, extend({}, args));\n\treturn this;\n};\n","'use strict';\n\nvar XMLNode = module.exports = function (tagName) {\n\tif (!(this instanceof XMLNode)) {\n\t\treturn new XMLNode(tagName);\n\t}\n\n\tthis.tagName = tagName;\n\tthis.attributes = Object.create(null);\n\tthis.children = [];\n\tthis.lastChild = null;\n\n\treturn this;\n};\n\nXMLNode.prototype.appendChild = function (child) {\n\tthis.children.push(child);\n\tthis.lastChild = child;\n\n\treturn this;\n};\n\nXMLNode.prototype.setAttribute = function (name, value) {\n\tthis.attributes[name] = value;\n\n\treturn this;\n};\n\nXMLNode.prototype.toString = function () {\n\tvar self = this;\n\n\treturn [\n\t\t'<',\n\t\tself.tagName,\n\t\tObject.keys(self.attributes).map(function (attr) {\n\t\t\treturn [\n\t\t\t\t' ',\n\t\t\t\tattr,\n\t\t\t\t'=\"',\n\t\t\t\tself.attributes[attr],\n\t\t\t\t'\"'\n\t\t\t].join('');\n\t\t}).join(''),\n\t\t'>',\n\t\tself.children.map(function (child) {\n\t\t\treturn child.toString();\n\t\t}).join(''),\n\t\t'</',\n\t\tself.tagName,\n\t\t'>'\n\t].join('');\n};\n","var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nfunction isPlainObject(obj) {\n\tif (!obj || toString.call(obj) !== '[object Object]' || obj.nodeType || obj.setInterval)\n\t\treturn false;\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method)\n\t\treturn false;\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor ( key in obj ) {}\n\n\treturn key === undefined || hasOwn.call( obj, key );\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t    target = arguments[0] || {},\n\t    i = 1,\n\t    length = arguments.length,\n\t    deep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && typeof target !== \"function\") {\n\t\ttarget = {};\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( isPlainObject(copy) || (copyIsArray = Array.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n"],"names":["$","Pattern","optArgs","cb","string","options","undefined","Date","toString","call","this","GeoPattern","module","exports","generate","fn","geopattern","each","titleSha","attr","extend","hash","pattern","css","toDataUrl","jQuery","hex2rgb","hex","replace","m","r","g","b","result","exec","parseInt","rgb2hex","rgb","map","key","slice","join","rgb2hsl","h","s","max","Math","min","l","d","hsl2rgb","hsl","hue2rgb","p","q","t","round","rgb2rgbString","color","SHA1","SVG","DEFAULTS","baseColor","PATTERNS","FILL_COLOR_DARK","FILL_COLOR_LIGHT","STROKE_COLOR","STROKE_OPACITY","OPACITY_MIN","OPACITY_MAX","hexVal","index","len","substr","value","vMin","vMax","dMin","dMax","parseFloat","fillColor","val","fillOpacity","opts","svg","generateBackground","generatePattern","buildPlusShape","squareSize","buildRightTriangleShape","sideLength","drawInnerMosaicTile","x","y","triangleSize","vals","triangle","opacity","fill","styles","stroke","polyline","transform","translate","scale","drawOuterMosaicTile","prototype","toSvg","toBase64","str","window","btoa","Buffer","toDataUri","hueOffset","satOffset","rect","generator","indexOf","Error","toUpperCase","geoHexagons","dy","i","hexHeight","sqrt","hexWidth","c","a","sin","PI","buildHexagonShape","setWidth","setHeight","geoSineWaves","xOffset","period","floor","amplitude","waveWidth","path","geoChevrons","chevronWidth","chevronHeight","chevron","width","height","e","buildChevronShape","group","end","geoPlusSigns","dx","plusSize","plusShape","geoXes","xShape","xSize","rotate","geoOverlappingCircles","radius","circle","geoOctogons","tile","buildOctogonShape","geoSquares","geoConcentricCircles","ringSize","strokeWidth","geoOverlappingRings","geoTriangles","rotation","triangleHeight","halfWidth","buildTriangleShape","geoDiamonds","diamondWidth","diamondHeight","diamond","geoNestedSquares","blockSize","geoMosaicSquares","geoPlaid","stripeHeight","stripeWidth","geoTessellation","triangleWidth","buildRotatedTriangleShape","tileWidth","tileHeight","create","h0","h1","h2","h3","h4","block","Uint32Array","offset","shift","totalLength","processBlock","w","f","k","temp","write","byte","toHex","word","update","chunk","length","charCodeAt","updateString","digest","buffer","shasum","XMLNode","context","setAttributes","xmlns","currentContext","pop","currentNode","lastChild","transformations","setAttribute","Object","keys","transformation","el","attrs","forEach","args","self","Array","isArray","apply","concat","appendChild","cx","cy","points","push","tagName","attributes","children","child","name","hasOwn","hasOwnProperty","isPlainObject","obj","nodeType","setInterval","has_own_constructor","has_is_property_of_method","constructor","src","copy","copyIsArray","clone","target","arguments","deep"],"sourceRoot":""}