{"version":3,"file":"js/4826.60797cb5d8170a0795ef.js","mappings":"iLAKaA,EAAY,SAACC,GACxB,IAAAC,GAA2CC,EAAAA,EAAAA,YAAWC,EAAAA,IAA9CC,EAAWH,EAAXG,YAAaC,EAAiBJ,EAAjBI,kBACrB,OACEC,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAACE,EAAAA,GAAW,MACXJ,GACCE,EAAAA,cAACG,EAAAA,GAAI,CACHJ,kBAAmBA,EACnBK,OAAQN,EACRO,UAAWC,EAAAA,EAAQC,EAAE,QACrBC,MAAO,SAACC,GAAG,OAAKT,EAAAA,cAAAA,EAAAA,SAAA,KAAGS,EAAO,IAKpC,C,isBCNO,IAAMC,GAAmBC,EAAAA,EAAAA,KAC9B,SAAAC,GAOM,IANJC,EAAgBD,EAAhBC,iBACAC,EAAiBF,EAAjBE,kBACAC,EAAaH,EAAbG,cACAC,EAAWJ,EAAXI,YACAC,EAAOL,EAAPK,QACAC,EAAWN,EAAXM,YAUA,OACElB,EAAAA,cAACmB,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,OAAQ,CACN,KAAQ,SACR,QAZmB,WACvBR,EAAgBS,EAAAA,EAAC,CAAC,EAAIR,GAAiB,IAAEE,YAAAA,IAC3C,EAWM,UAAa,SACb,aAAcV,EAAAA,EAAQC,EAAE,WAE1BgB,OAAK,EACLL,YAAaA,EACbM,SAAU,SAACC,EAAKC,GAAgB,IAAZC,EAAKD,EAALC,MAClBZ,EAAcY,EAChB,EACAA,MAAOX,EACPY,WAnBe,SAACH,GACA,UAAdA,EAAMI,KACRhB,EAAgBS,EAAAA,EAAC,CAAC,EAAIR,GAAiB,IAAEE,YAAAA,IAE7C,EAgBI,aAAYV,EAAAA,EAAQC,EAAE,WAClBU,GAGV,IAGFP,EAAiBoB,UAAY,CAC3Bd,YAAae,IAAAA,OAAiBC,WAC9BnB,iBAAkBkB,IAAAA,KAAeC,WACjCd,YAAaa,IAAAA,OAAiBC,WAC9BjB,cAAegB,IAAAA,KAAeC,WAC9Bf,QAASc,IAAAA,QAGXrB,EAAiBuB,aAAe,CAC9BhB,aAASiB,EACThB,YAAaZ,EAAAA,EAAQC,EAAE,cACvBS,YAAa,G,uZC3DR,IAAMmB,EAAuB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,EAAAA,EAAAA,GAAA,KAAAF,GAAAG,EAAA,KAAAH,EAAAI,UAAA,QAAAC,EAAAA,EAAAA,GAAAL,EAAAC,IAAAK,EAAAA,EAAAA,GAAAN,EAAA,EAAAN,IAAA,SAAAF,MAClC,WACE,IAAQe,EAAaC,KAAKjD,MAAlBgD,SACR,OACE1C,EAAAA,cAAC4C,EAAAA,GAAsB,KACrB5C,EAAAA,cAAC6C,EAAAA,gCAA+B,KAAEH,GAGxC,IAAC,CARiC,CAASI,EAAAA,WAW7CX,EAAwBL,UAAY,CAClCY,SAAUX,IAAAA,KAAeC,W,kJCMde,EAA8B,SAACC,GAC1C,IAEMC,EAAQC,KAAKC,MAAMH,EAAaI,QAAQH,OACxCI,EAAeH,KAAKC,MAAMH,EAAaI,QAAQC,cAE/CC,EALc,SAACC,GAAO,OAC1BC,OAAOC,QAAQF,GAASG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE,GAAGE,MAAQD,EAAE,GAAGC,KAAK,GAAC,CAI3CC,CADNZ,KAAKC,MAAMH,EAAaI,QAAQW,SAE1CC,EAAgBd,KAAKC,MAAMH,EAAaI,QAAQY,eAChDC,EAAcf,KAAKC,MAAMH,EAAaI,QAAQa,aAC9CC,EAAgBhB,KAAKC,MAAMH,EAAaI,QAAQc,eAChDC,EAAcjB,KAAKC,MAAMH,EAAaI,QAAQe,aAC9CC,EAAUlB,KAAKC,MAAMH,EAAaI,QAAQgB,SAC1CC,EAAcC,IAAKtB,EAAaI,QAAS,eACzCmB,EAAYrB,KAAKC,MAAMmB,IAAKtB,EAAaI,QAAS,UAAW,QAC7DoB,EAAiBxB,EAAaI,QAAQqB,aACtCC,EAAiBxB,KAAKC,MAAMH,EAAaI,QAAQsB,gBAEjDC,GAA6BC,EAAAA,EAAAA,aAAYC,EAAAA,EAAwB,CACrEtB,QAASD,EACTW,YAAaA,EACbC,cAAeA,EACfE,QAASA,IAGLU,GAA0BF,EAAAA,EAAAA,aAAYG,EAAAA,EAAe,CACzDxB,QAASD,IAiBX,MAAO,CACL,oBAfiCsB,EAAAA,EAAAA,aAAYI,EAAAA,EAAkB,CAC/D/B,MAAOA,EACPI,aAAcA,EACdE,QAASD,EACTa,YAAaA,EACbF,YAAaA,EACbC,cAAeA,EACfE,QAASA,EACTC,YAAaA,EACbE,UAAWA,EACXC,eAAgBA,EAChBE,eAAgBA,IAKhB,4BAA6BO,EAAAA,GAC7B,kCAAmCC,EAAAA,GACnC,mBAAoB,WAAO,EAC3B,oBAAqBJ,EACrB,wBAAyBH,EACzB,uBAAwBQ,EAAAA,EACxB,eAAgBC,EAAAA,GAChB,mBAAoBC,EAAAA,GACpB,+BAAgC5F,EAAAA,EAChC,0BAA2B,kBAAM,IAAI,EACrC,oBAAqBuE,EAAgBtD,EAAAA,EAAmB,kBAAM,IAAI,EAEtE,C,icCnEmC,IAE7ByE,EAAkB,SAAA/C,GAAA,SAAA+C,IAAA,OAAA9C,EAAAA,EAAAA,GAAA,KAAA8C,GAAA7C,EAAA,KAAA6C,EAAA5C,UAAA,QAAAC,EAAAA,EAAAA,GAAA2C,EAAA/C,IAAAK,EAAAA,EAAAA,GAAA0C,EAAA,EAAAtD,IAAA,SAAAF,MACtB,WACE,IAAA2D,EAMI3C,KAAKjD,MALP6F,EAAUD,EAAVC,WACAC,EAAYF,EAAZE,aACAxE,EAAWsE,EAAXtE,YACAF,EAAiBwE,EAAjBxE,kBACA2E,EAAmBH,EAAnBG,oBAGIC,EAAyB5E,EAAkB6E,KAAO,EAClDC,EACuB,IAA3B9E,EAAkB6E,MAAiD,IAAnCF,EAAoBI,KAAKC,MAE3D,OACE9F,EAAAA,cAAC+F,EAAAA,EAAO,CAAC7E,aAAW,EAAC8E,UAAU,UAC7BhG,EAAAA,cAACiG,EAAAA,EAAM,CAACC,MAAI,GACVlG,EAAAA,cAACmG,EAAAA,EAAI,CAACC,KAAK,WACVR,GAAetF,EAAAA,EAAQC,EAAE,2CACzBmF,GAA0BpF,EAAAA,EAAQC,EAAE,iCAEtCS,GAAehB,EAAAA,cAAA,UAAI,mBAAiBgB,EAAY,KACjDhB,EAAAA,cAAA,WACC0F,GACC1F,EAAAA,cAACqG,EAAAA,EAAM,CAACC,SAAO,EAACC,QAAS,kBAAMhB,GAAY,GACxCjF,EAAAA,EAAQC,EAAE,gBAGdiF,EAGP,IAAC,CA/BqB,CAAS1C,EAAAA,WAkCjCqC,EAAmBrD,UAAY,CAC7ByD,WAAYxD,IAAAA,KAAeC,WAC3BwD,aAAczD,IAAAA,KACdf,YAAae,IAAAA,OACbjB,kBAAmBiB,IAAAA,OAAiBC,WACpCyD,oBAAqB1D,IAAAA,OAAiBC,YAGxCmD,EAAmBlD,aAAe,CAChCuD,kBAActD,EACdlB,iBAAakB,GAGf,SAAevB,EAAAA,EAAAA,IAAUwE,E,ufC7CmB,IAEtCqB,EAAyB,SAAApE,GAAA,SAAAoE,IAAA,IAAAC,GAAApE,EAAAA,EAAAA,GAAA,KAAAmE,GAAA,QAAAE,EAAAnE,UAAAoE,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAvE,UAAAuE,GAI5B,OAJ4BL,EAAAnE,EAAA,KAAAkE,EAAA,GAAAO,OAAAH,KAAAI,EAAAA,EAAAA,GAAAP,EAAA,sBACR,WACnB,IAAAnB,EAAgDmB,EAAK/G,OACrDmB,EADwByE,EAAhBzE,kBAAmCyE,EAAjBxE,kBAE5B,IAAC2F,CAAA,QAAAjE,EAAAA,EAAAA,GAAAgE,EAAApE,IAAAK,EAAAA,EAAAA,GAAA+D,EAAA,EAAA3E,IAAA,SAAAF,MAED,WACE,IAAAsF,EAWItE,KAAKjD,MAVPuD,EAAKgE,EAALhE,MACAI,EAAY4D,EAAZ5D,aACA6D,EAAMD,EAANC,OACA3D,EAAO0D,EAAP1D,QACAU,EAAWgD,EAAXhD,YACAC,EAAa+C,EAAb/C,cACAE,EAAO6C,EAAP7C,QACAG,EAAS0C,EAAT1C,UACAG,EAAcuC,EAAdvC,eACAF,EAAcyC,EAAdzC,eAGI2C,EAAqBlD,GAAeC,IAAkBkD,IAAQhD,GAEpE,OACEpE,EAAAA,cAACqH,EAAAA,QAAW,CACVC,GAAG,gDACHrE,MAAOA,EACPI,aAAcA,EACd6D,OAAQA,EACR3D,QAASA,EACTU,YAAaA,EACbC,cAAeA,EACfE,QAASA,EACTG,UAAWA,EACXG,eAAgBA,EAChBF,eAAgBA,EAChB2C,mBAAoBA,GAEpBnH,EAAAA,cAACuH,EAAAA,EAAMC,IAAG,KACPjE,EAAQkE,KAAI,SAAA7G,EAA8B8G,GAAU,IAAAhG,GAAAiG,EAAAA,EAAAA,GAAA/G,EAAA,GAAtCgH,EAAQlG,EAAA,GAAAmG,EAAAnG,EAAA,GAAIoG,EAAID,EAAJC,KAAMjE,EAAKgE,EAALhE,MAC/B,OACE7D,EAAAA,cAACuH,EAAAA,EAAMQ,KAAI,CACTlG,IAAG,GAAAkF,OAAKe,EAAI,KAAAf,OAAIlD,GAChB,aAAYiE,EACZ7H,UAAU,kBAEC,IAAVyH,GACC1H,EAAAA,cAAA,KACEgI,KAAMC,EAAAA,EAAcC,YAAY1D,EAAgB0C,EAAQ3C,IAExDvE,EAAAA,cAACmI,EAAAA,EAAS,CACRjB,OAAQA,EACRxC,eAAgBA,EAChBkD,SAAUA,KAIL,IAAVF,GACC1H,EAAAA,cAACmI,EAAAA,EAAS,CACRjB,OAAQA,EACRxC,eAAgBA,EAChBkD,SAAUA,IAKpB,IACCT,GACCnH,EAAAA,cAACuH,EAAAA,EAAMQ,KAAI,CAACK,YAAU,GACpBpI,EAAAA,cAACqH,EAAAA,QAAW,CAACC,GAAG,4DACdtH,EAAAA,cAACqG,EAAAA,EAAOgC,MAAK,CAACC,KAAK,OAAOC,OAAK,EAACC,OAAQ,EAAGC,SAAO,EAACxI,UAAU,YAC3DD,EAAAA,cAAC0I,EAAAA,EAAO,CACNzF,MAAOA,EACPI,aAAcA,EACdsF,QAASV,EAAAA,EAAcW,SAASpE,EAAgB0C,EAAQ3C,GACxDN,YAAaA,EACbC,cAAeA,EACfE,QAASA,EACTyE,SAAU3B,EACV3C,UAAWA,EACXuE,gBAAiBnG,KAAKoG,mBACtBvE,eAAgBA,QASlC,IAAC,CAzF4B,CAAS1B,EAAAA,WA4FxC0D,EAA0B1E,UAAY,CACpCmB,MAAOlB,IAAAA,OAAiBC,WACxBqB,aAActB,IAAAA,OAAiBC,WAC/BkF,OAAQnF,IAAAA,OAAiBC,WACzBuB,QAASxB,IAAAA,MAAgBC,WACzBkC,cAAenC,IAAAA,KACfkC,YAAalC,IAAAA,KACbqC,QAASrC,IAAAA,OACTlB,iBAAkBkB,IAAAA,KAAeC,WACjClB,kBAAmBiB,IAAAA,OAAiBC,WACpCuC,UAAWxC,IAAAA,OAAiBC,WAC5B0C,eAAgB3C,IAAAA,OAAiBC,WACjCwC,eAAgBzC,IAAAA,OAAiBC,YAGnCwE,EAA0BvE,aAAe,CACvCiC,eAAe,EACfD,aAAa,EACbG,QAAS,CAAC,GAGL,IAAMY,GAAmBrE,EAAAA,EAAAA,IAAU6F,E,gHCpH7BzB,EAAgB,SAAHnE,GAAmD,IAA7CoI,EAAiBpI,EAAjBoI,kBACtBlD,EAD4DlF,EAAnB6E,oBACXI,KAA9BC,MAER,OACEA,GACE9F,EAAAA,cAACiJ,EAAAA,EAAI,KACHjJ,EAAAA,cAACiJ,EAAAA,EAAKzB,IAAG,KACPxH,EAAAA,cAACiJ,EAAAA,EAAKC,OAAM,CAACC,MAAO,IAClBnJ,EAAAA,cAACiJ,EAAAA,EAAI,KACHjJ,EAAAA,cAACiJ,EAAAA,EAAKzB,IAAG,KACPxH,EAAAA,cAACiJ,EAAAA,EAAKC,OAAM,KACVlJ,EAAAA,cAACoJ,EAAAA,GAAW,WAMtBpJ,EAAAA,cAACiJ,EAAAA,EAAKzB,IAAG,CAAC6B,cAAc,UACtBrJ,EAAAA,cAACiJ,EAAAA,EAAKC,OAAM,CAACC,MAAO,GAClBnJ,EAAAA,cAACsJ,EAAAA,GAAK,CACJ9I,MAAO,kBACLR,EAAAA,cAAAA,EAAAA,SAAA,KAAGM,EAAAA,EAAQC,EAAE,0BAA2B,CAAEgJ,MAAOzD,IAAY,KAInE9F,EAAAA,cAACiJ,EAAAA,EAAKC,OAAM,CAACC,MAAO,EAAGnD,UAAU,UAC/BhG,EAAAA,cAACwJ,EAAAA,GAAU,CACTC,QAAS,CACPnB,KAAM,OACNoB,WAAW,EACXC,UAAU,MAIhB3J,EAAAA,cAACiJ,EAAAA,EAAKC,OAAM,CAAClD,UAAU,QAAQmD,MAAO,GACpCnJ,EAAAA,cAAC4J,EAAAA,GAAc,CACbxJ,OAAQ4I,EAAkBa,eAC1BrJ,MAAO,SAACC,GAAG,OACTT,EAAAA,cAAC8J,EAAAA,EAAK,CAACjI,IAAI,qBAAqB0H,MAAO9I,GACpCA,EAAI,oBACC,MAQxB,EAEAsE,EAAcjD,UAAY,CACxBkH,kBAAmBjH,IAAAA,OAAiBC,WACpCyD,oBAAqB1D,IAAAA,OAAiBC,W,0HCrD3B6C,EAAyB,SAAHjE,GAM7B,IALJmJ,EAAOnJ,EAAPmJ,QACAxG,EAAO3C,EAAP2C,QACAU,EAAWrD,EAAXqD,YACAC,EAAatD,EAAbsD,cACAE,EAAOxD,EAAPwD,QAEM+C,EAAqBlD,GAAeC,IAAkBkD,IAAQhD,GAEpE,OACEpE,EAAAA,cAACuH,EAAAA,EAAK,KACJvH,EAAAA,cAACuH,EAAAA,EAAMtB,OAAM,KACXjG,EAAAA,cAACuH,EAAAA,EAAMC,IAAG,KACPjE,EAAQkE,KAAI,SAAA/F,EAAqCgG,GAAU,IAAAsC,GAAArC,EAAAA,EAAAA,GAAAjG,EAAA,GAA7CkG,EAAQoC,EAAA,GAAAC,EAAAD,EAAA,GAAIlC,EAAImC,EAAJnC,KAAMjE,EAAKoG,EAALpG,MAAOsF,EAAKc,EAALd,MAKtC,OAJKA,IACHA,EAAkB,IAAVzB,OAAcxF,EAAsB,IAAVwF,EAAc,EAAI,GAIpD1H,EAAAA,cAACuH,EAAAA,EAAM2C,WAAU,CAACrI,IAAK+F,EAAW/D,EAAOsF,MAAOA,GAC7CrB,EAGP,IACCX,GACCnH,EAAAA,cAACuH,EAAAA,EAAM2C,WAAU,CAAC9B,YAAU,GAAE9H,EAAAA,EAAQC,EAAE,cAI9CP,EAAAA,cAACuH,EAAAA,EAAM4C,KAAI,KAAEJ,GAGnB,EAEAlF,EAAuB/C,UAAY,CACjCiI,QAAShI,IAAAA,MAAgBC,WACzBuB,QAASxB,IAAAA,MAAgBC,WACzBiC,YAAalC,IAAAA,KACbmC,cAAenC,IAAAA,KACfqC,QAASrC,IAAAA,OAAiBC,YAG5B6C,EAAuB5C,aAAe,CACpCiC,eAAe,EACfD,aAAa,E","sources":["webpack://invenio-assets/./js/invenio_administration/src/search/SearchBar.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchBarElement.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchBulkActionContext.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchComponents.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchEmptyResults.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchResultItem.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchResults.js","webpack://invenio-assets/./js/invenio_administration/src/search/SearchResultsContainer.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { SearchBar as SKSearchBar, Sort } from \"react-searchkit\";\nimport { SearchConfigurationContext } from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\n\nexport const SearchBar = (props) => {\n  const { sortOptions, sortOrderDisabled } = useContext(SearchConfigurationContext);\n  return (\n    <div className=\"auto-column-grid rel-mt-3\">\n      <SKSearchBar />\n      {sortOptions && (\n        <Sort\n          sortOrderDisabled={sortOrderDisabled}\n          values={sortOptions}\n          ariaLabel={i18next.t(\"Sort\")}\n          label={(cmp) => <>{cmp}</>} // eslint-disable-line react/jsx-no-useless-fragment\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Input } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\n\nexport const SearchBarElement = withState(\n  ({\n    updateQueryState,\n    currentQueryState,\n    onInputChange,\n    queryString,\n    uiProps,\n    placeholder,\n  }) => {\n    const onBtnSearchClick = () => {\n      updateQueryState({ ...currentQueryState, queryString });\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        updateQueryState({ ...currentQueryState, queryString });\n      }\n    };\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n        aria-label={i18next.t(\"Search\")}\n        {...uiProps}\n      />\n    );\n  }\n);\n\nSearchBarElement.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  updateQueryState: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  uiProps: PropTypes.object,\n};\n\nSearchBarElement.defaultProps = {\n  uiProps: undefined,\n  placeholder: i18next.t(\"Search ...\"),\n  queryString: \"\",\n};\n","import { NotificationController } from \"../ui_messages\";\nimport { SearchResultsBulkActionsManager } from \"react-invenio-forms\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\nexport class SearchBulkActionContext extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <NotificationController>\n        <SearchResultsBulkActionsManager>{children}</SearchResultsBulkActionsManager>\n      </NotificationController>\n    );\n  }\n}\n\nSearchBulkActionContext.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { SearchResultItem } from \"./SearchResultItem\";\nimport SearchEmptyResults from \"./SearchEmptyResults\";\nimport { SearchResultsContainer } from \"./SearchResultsContainer\";\nimport { SearchResults } from \"./SearchResults\";\nimport { parametrize } from \"react-overridable\";\nimport { DropdownSort } from \"@js/invenio_search_ui/components\";\nimport { SearchBarElement } from \"./SearchBarElement\";\nimport _get from \"lodash/get\";\nimport {\n  ContribSearchAppFacets,\n  ContribBucketAggregationElement,\n  ContribBucketAggregationValuesElement,\n} from \"@js/invenio_search_ui/components\";\nimport { SearchBar } from \"./SearchBar\";\n\nexport const initDefaultSearchComponents = (domContainer) => {\n  const sortColumns = (columns) =>\n    Object.entries(columns).sort((a, b) => a[1].order - b[1].order);\n  const title = JSON.parse(domContainer.dataset.title);\n  const resourceName = JSON.parse(domContainer.dataset.resourceName);\n  const columns = JSON.parse(domContainer.dataset.fields);\n  const sortedColumns = sortColumns(columns);\n  const displaySearch = JSON.parse(domContainer.dataset.displaySearch);\n  const displayEdit = JSON.parse(domContainer.dataset.displayEdit);\n  const displayDelete = JSON.parse(domContainer.dataset.displayDelete);\n  const displayRead = JSON.parse(domContainer.dataset.displayRead);\n  const actions = JSON.parse(domContainer.dataset.actions);\n  const apiEndpoint = _get(domContainer.dataset, \"apiEndpoint\");\n  const idKeyPath = JSON.parse(_get(domContainer.dataset, \"pidPath\", \"pid\"));\n  const listUIEndpoint = domContainer.dataset.listEndpoint;\n  const resourceSchema = JSON.parse(domContainer.dataset.resourceSchema);\n\n  const ResultsContainerWithConfig = parametrize(SearchResultsContainer, {\n    columns: sortedColumns,\n    displayEdit: displayEdit,\n    displayDelete: displayDelete,\n    actions: actions,\n  });\n\n  const SearchResultsWithConfig = parametrize(SearchResults, {\n    columns: sortedColumns,\n  });\n\n  const SearchResultItemWithConfig = parametrize(SearchResultItem, {\n    title: title,\n    resourceName: resourceName,\n    columns: sortedColumns,\n    displayRead: displayRead,\n    displayEdit: displayEdit,\n    displayDelete: displayDelete,\n    actions: actions,\n    apiEndpoint: apiEndpoint,\n    idKeyPath: idKeyPath,\n    listUIEndpoint: listUIEndpoint,\n    resourceSchema: resourceSchema,\n  });\n\n  return {\n    \"ResultsList.item\": SearchResultItemWithConfig,\n    \"BucketAggregation.element\": ContribBucketAggregationElement,\n    \"BucketAggregationValues.element\": ContribBucketAggregationValuesElement,\n    \"ResultsGrid.item\": () => {},\n    \"SearchApp.results\": SearchResultsWithConfig,\n    \"ResultsList.container\": ResultsContainerWithConfig,\n    \"EmptyResults.element\": SearchEmptyResults,\n    \"Sort.element\": DropdownSort,\n    \"SearchApp.facets\": ContribSearchAppFacets,\n    \"SearchApp.searchbarContainer\": SearchBar,\n    \"SearchApp.resultOptions\": () => null,\n    \"SearchBar.element\": displaySearch ? SearchBarElement : () => null,\n  };\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\nimport PropTypes from \"prop-types\";\n\nclass SearchEmptyResults extends Component {\n  render() {\n    const {\n      resetQuery,\n      extraContent,\n      queryString,\n      currentQueryState,\n      currentResultsState,\n    } = this.props;\n\n    const isEmptyPageAfterSearch = currentQueryState.page < 0;\n    const isEmptyPage =\n      currentQueryState.page === 1 && currentResultsState.data.total === 0;\n\n    return (\n      <Segment placeholder textAlign=\"center\">\n        <Header icon>\n          <Icon name=\"search\" />\n          {isEmptyPage && i18next.t(\"There is no resources in this category.\")}\n          {isEmptyPageAfterSearch && i18next.t(\"No matching resources found.\")}\n        </Header>\n        {queryString && <em>Current search \"{queryString}\"</em>}\n        <br />\n        {isEmptyPageAfterSearch && (\n          <Button primary onClick={() => resetQuery()}>\n            {i18next.t(\"Clear query\")}\n          </Button>\n        )}\n        {extraContent}\n      </Segment>\n    );\n  }\n}\n\nSearchEmptyResults.propTypes = {\n  resetQuery: PropTypes.func.isRequired,\n  extraContent: PropTypes.node,\n  queryString: PropTypes.string,\n  currentQueryState: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n};\n\nSearchEmptyResults.defaultProps = {\n  extraContent: undefined,\n  queryString: undefined,\n};\n\nexport default withState(SearchEmptyResults);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Actions } from \"../actions/Actions\";\nimport { withState } from \"react-searchkit\";\nimport { AdminUIRoutes } from \"../routes\";\nimport Formatter from \"../components/Formatter\";\nimport Overridable from \"react-overridable\";\n\nclass SearchResultItemComponent extends Component {\n  refreshAfterAction = () => {\n    const { updateQueryState, currentQueryState } = this.props;\n    updateQueryState(currentQueryState);\n  };\n\n  render() {\n    const {\n      title,\n      resourceName,\n      result,\n      columns,\n      displayEdit,\n      displayDelete,\n      actions,\n      idKeyPath,\n      resourceSchema,\n      listUIEndpoint,\n    } = this.props;\n\n    const resourceHasActions = displayEdit || displayDelete || !isEmpty(actions);\n\n    return (\n      <Overridable\n        id=\"InvenioAdministration.SearchResultItem.layout\"\n        title={title}\n        resourceName={resourceName}\n        result={result}\n        columns={columns}\n        displayEdit={displayEdit}\n        displayDelete={displayDelete}\n        actions={actions}\n        idKeyPath={idKeyPath}\n        resourceSchema={resourceSchema}\n        listUIEndpoint={listUIEndpoint}\n        resourceHasActions={resourceHasActions}\n      >\n        <Table.Row>\n          {columns.map(([property, { text, order }], index) => {\n            return (\n              <Table.Cell\n                key={`${text}-${order}`}\n                data-label={text}\n                className=\"word-break-all\"\n              >\n                {index === 0 && (\n                  <a\n                    href={AdminUIRoutes.detailsView(listUIEndpoint, result, idKeyPath)}\n                  >\n                    <Formatter\n                      result={result}\n                      resourceSchema={resourceSchema}\n                      property={property}\n                    />\n                  </a>\n                )}\n                {index !== 0 && (\n                  <Formatter\n                    result={result}\n                    resourceSchema={resourceSchema}\n                    property={property}\n                  />\n                )}\n              </Table.Cell>\n            );\n          })}\n          {resourceHasActions && (\n            <Table.Cell collapsing>\n              <Overridable id=\"InvenioAdministration.SearchResultItem.actions.container\">\n                <Button.Group size=\"tiny\" basic widths={5} compact className=\"margined\">\n                  <Actions\n                    title={title}\n                    resourceName={resourceName}\n                    editUrl={AdminUIRoutes.editView(listUIEndpoint, result, idKeyPath)}\n                    displayEdit={displayEdit}\n                    displayDelete={displayDelete}\n                    actions={actions}\n                    resource={result}\n                    idKeyPath={idKeyPath}\n                    successCallback={this.refreshAfterAction}\n                    listUIEndpoint={listUIEndpoint}\n                  />\n                </Button.Group>\n              </Overridable>\n            </Table.Cell>\n          )}\n        </Table.Row>\n      </Overridable>\n    );\n  }\n}\n\nSearchResultItemComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  resourceName: PropTypes.string.isRequired,\n  result: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  displayDelete: PropTypes.bool,\n  displayEdit: PropTypes.bool,\n  actions: PropTypes.object,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  idKeyPath: PropTypes.string.isRequired,\n  resourceSchema: PropTypes.object.isRequired,\n  listUIEndpoint: PropTypes.string.isRequired,\n};\n\nSearchResultItemComponent.defaultProps = {\n  displayDelete: true,\n  displayEdit: true,\n  actions: {},\n};\n\nexport const SearchResultItem = withState(SearchResultItemComponent);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { ResultsList, Pagination, ResultsPerPage, Count } from \"react-searchkit\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\n\nexport const SearchResults = ({ paginationOptions, currentResultsState }) => {\n  const { total } = currentResultsState.data;\n\n  return (\n    total && (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column>\n                  <ResultsList />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column width={4}>\n            <Count\n              label={() => (\n                <>{i18next.t(\"{{count}} results found\", { count: total })}</>\n              )}\n            />\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"center\">\n            <Pagination\n              options={{\n                size: \"mini\",\n                showFirst: false,\n                showLast: false,\n              }}\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"right\" width={4}>\n            <ResultsPerPage\n              values={paginationOptions.resultsPerPage}\n              label={(cmp) => (\n                <Trans key=\"adminSearchResults\" count={cmp}>\n                  {cmp} results per page\n                </Trans>\n              )}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  );\n};\n\nSearchResults.propTypes = {\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\n\nexport const SearchResultsContainer = ({\n  results,\n  columns,\n  displayEdit,\n  displayDelete,\n  actions,\n}) => {\n  const resourceHasActions = displayEdit || displayDelete || !isEmpty(actions);\n\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          {columns.map(([property, { text, order, width }], index) => {\n            if (!width) {\n              width = index === 0 ? undefined : index === 1 ? 4 : 3;\n            }\n\n            return (\n              <Table.HeaderCell key={property + order} width={width}>\n                {text}\n              </Table.HeaderCell>\n            );\n          })}\n          {resourceHasActions && (\n            <Table.HeaderCell collapsing>{i18next.t(\"Actions\")}</Table.HeaderCell>\n          )}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{results}</Table.Body>\n    </Table>\n  );\n};\n\nSearchResultsContainer.propTypes = {\n  results: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  displayEdit: PropTypes.bool,\n  displayDelete: PropTypes.bool,\n  actions: PropTypes.object.isRequired,\n};\n\nSearchResultsContainer.defaultProps = {\n  displayDelete: true,\n  displayEdit: true,\n};\n"],"names":["SearchBar","props","_useContext","useContext","SearchConfigurationContext","sortOptions","sortOrderDisabled","React","className","SKSearchBar","Sort","values","ariaLabel","i18next","t","label","cmp","SearchBarElement","withState","_ref","updateQueryState","currentQueryState","onInputChange","queryString","uiProps","placeholder","Input","_extends","action","_objectSpread","fluid","onChange","event","_ref2","value","onKeyPress","key","propTypes","PropTypes","isRequired","defaultProps","undefined","SearchBulkActionContext","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","children","this","NotificationController","SearchResultsBulkActionsManager","Component","initDefaultSearchComponents","domContainer","title","JSON","parse","dataset","resourceName","sortedColumns","columns","Object","entries","sort","a","b","order","sortColumns","fields","displaySearch","displayEdit","displayDelete","displayRead","actions","apiEndpoint","_get","idKeyPath","listUIEndpoint","listEndpoint","resourceSchema","ResultsContainerWithConfig","parametrize","SearchResultsContainer","SearchResultsWithConfig","SearchResults","SearchResultItem","ContribBucketAggregationElement","ContribBucketAggregationValuesElement","SearchEmptyResults","DropdownSort","ContribSearchAppFacets","_this$props","resetQuery","extraContent","currentResultsState","isEmptyPageAfterSearch","page","isEmptyPage","data","total","Segment","textAlign","Header","icon","Icon","name","Button","primary","onClick","SearchResultItemComponent","_this","_len","length","args","Array","_key","concat","_defineProperty","_this$props2","result","resourceHasActions","isEmpty","Overridable","id","Table","Row","map","index","_slicedToArray","property","_ref2$","text","Cell","href","AdminUIRoutes","detailsView","Formatter","collapsing","Group","size","basic","widths","compact","Actions","editUrl","editView","resource","successCallback","refreshAfterAction","paginationOptions","Grid","Column","width","ResultsList","verticalAlign","Count","count","Pagination","options","showFirst","showLast","ResultsPerPage","resultsPerPage","Trans","results","_ref3","_ref3$","HeaderCell","Body"],"sourceRoot":""}