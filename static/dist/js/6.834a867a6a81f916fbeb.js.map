{"version":3,"sources":["webpack:///./js/invenio_theme/base.js","webpack:///(webpack)/buildin/global.js"],"names":["g","this","Function","e","window","module","exports"],"mappings":"2FAAA,Y,oBCAA,IAAIA,EAGJA,EAAI,WACH,OAAOC,IACP,CAFG,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,EACV,CAAE,MAAOC,GAEc,kBAAXC,SAAqBJ,EAAII,OACrC,CAMAC,EAAOC,QAAUN,C","file":"js/6.834a867a6a81f916fbeb.js","sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2017-2020 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n// TODO: Check if jQuery is actually needed for anything else besides\n// Semantic-UI. If not remove the \"base\" entry completely.\n// eslint-disable-next-line no-unused-vars\nimport jquery from \"jquery/dist/jquery\";\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}