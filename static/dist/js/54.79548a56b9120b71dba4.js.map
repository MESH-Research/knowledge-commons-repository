{"version":3,"sources":["webpack:///./js/invenio_theme/truncate.js","webpack:///./js/invenio_theme/theme.js"],"names":["document","querySelectorAll","forEach","element","textElement","querySelector","scrollHeight","offsetHeight","$","find","toggle","on","$container","this","parent","$text","hasPreviousClass","data","addClass","removeData","cls","attr","split","startsWith","removeClass","jquery","each","$image","naturalHeight","dropdown","accordion","selector","trigger","onOpening","$accordionTrigger","closest","accordionCloseText","html","onClosing","accordionOpenText","event","$target","target","is","key","hasClass","transition","animation","duration","interval","menu","addEventListener","classList","contains","remove","add","css"],"mappings":"wHAMEA,SAASC,iBAAiB,uBAAuBC,SAAQ,SAACC,GACxD,IAAMC,EAAcD,EAAQE,cAAc,kBAExCD,EAAYE,aAAeF,EAAYG,cAGvCC,IAAEL,GAASM,KAAK,uBAAuBC,QAE3C,IAEAF,IAAE,qBAAqBG,GAAG,SAAS,WACjC,IAAMC,EAAaJ,IAAEK,MAAMC,OAAO,uBAE5BC,EAAQH,EAAWH,KAAK,kBACxBO,EAAmBD,EAAME,KAAK,SACpC,GAAID,EAEFD,EAAMG,SAASF,GACfD,EAAMI,WAAW,aACZ,CAEL,IACMC,EADUL,EAAMM,KAAK,SAASC,MAAM,KACtBb,MAAK,SAACW,GAAG,OAAKA,EAAIG,WAAW,kBAAkB,IACnER,EAAMS,YAAYJ,GAClBL,EAAME,KAAK,QAASG,EACtB,CAGAR,EAAWH,KAAK,uBAAuBC,SACvCE,EAAWH,KAAK,uBAAuBC,QACzC,I,gBCrBFe,IAAO,uBAAuBC,MAAK,WACjC,IAAMC,EAASF,IAAOZ,MAEI,IAAvBA,KAAKe,eACND,EAAON,KAAK,MAAO,wCAEvB,IAGAI,IAAO,gBAAgBI,WAEvBJ,IAAO,iBAAiBK,UAAU,CAChCC,SAAU,CACRC,QAAS,YAEXC,UAAW,WACT,IAAMC,EAAoBrB,KAAKsB,QAAQ,iBAAiB1B,KAAK,YACvD2B,EAAqBF,EAAkBb,KAAK,mBAClDe,GAAsBF,EAAkBG,KAAKD,GAC7CF,EAAkBb,KAAK,iBAAiB,EAC1C,EACAiB,UAAW,WACT,IAAMJ,EAAoBrB,KAAKsB,QAAQ,iBAAiB1B,KAAK,YACvD8B,EAAoBL,EAAkBb,KAAK,kBACjDkB,GAAqBL,EAAkBG,KAAKE,GAC5CL,EAAkBb,KAAK,iBAAiB,EAC1C,IAGFI,IAAO,0BAA0Bd,GAAG,WAAW,SAAU6B,GACvD,IAAMC,EAAUhB,IAAOe,EAAME,QACJD,EAAQE,GAAG,cAAgBF,EAAQE,GAAG,WAGzB,UAAdH,EAAMI,MACLnB,IAAOe,EAAME,QAAQP,QAAQ,UAEjCU,SAAS,WAC1BJ,EAAQX,UAAU,SAClBW,EAAQpB,KAAK,iBAAiB,KAE9BoB,EAAQX,UAAU,QAClBW,EAAQpB,KAAK,iBAAiB,IAGpC,IAEAI,IAAO,mBAAmBd,GAAG,SAAS,WACpCc,IAAOZ,MAAMsB,QAAQ,YAAYW,WAAW,CAC1CC,UAAW,OACXC,SAAU,EACVC,SAAU,GAEd,IAEAxB,IAAO,uBAAuBd,GAAG,WAAW,SAAU6B,GACnC,UAAdA,EAAMI,KACPnB,IAAOZ,MAAMsB,QAAQ,YAAYW,WAAW,CAC1CC,UAAW,OACXC,SAAU,EACVC,SAAU,GAGhB,IAGA,IAAMvC,EAASV,SAASK,cAAc,cAChC6C,EAAOlD,SAASK,cAAc,gBASpCK,GAAUA,EAAOyC,iBAAiB,SAPlC,WACMD,EAAKE,UAAUC,SAAS,UAC1BH,EAAKE,UAAUE,OAAO,UAEtBJ,EAAKE,UAAUG,IAAI,SAEvB,IACuD,GAGvDvD,SAASmD,iBAAiB,oBAAoB,SAAAX,GAC5Cf,IAAO,iCAAiC+B,IAAI,UAAW,QACzD,G","file":"js/54.79548a56b9120b71dba4.js","sourcesContent":["import $ from \"jquery\";\n\n(function () {\n  // on document ready\n\n  // find all elements to be truncated\n  document.querySelectorAll(\".truncate-container\").forEach((element) => {\n    const textElement = element.querySelector(\".truncate-text\");\n    const hasOverflowingText =\n      textElement.scrollHeight > textElement.offsetHeight;\n    if (hasOverflowingText) {\n      // show Show More btn\n      $(element).find(\".truncate-show-more\").toggle();\n    }\n  });\n\n  $(\".truncate-toggler\").on(\"click\", function () {\n    const $container = $(this).parent(\".truncate-container\");\n\n    const $text = $container.find(\".truncate-text\");\n    const hasPreviousClass = $text.data(\"lines\");\n    if (hasPreviousClass) {\n      // restore the class `truncate-<n>`\n      $text.addClass(hasPreviousClass);\n      $text.removeData(\"lines\");\n    } else {\n      // remove the class `truncate-<n>` and save it in the data-lines attr\n      const classes = $text.attr(\"class\").split(\" \");\n      const cls = classes.find((cls) => cls.startsWith(\"truncate-lines-\"));\n      $text.removeClass(cls);\n      $text.data(\"lines\", cls);\n    }\n\n    // switch buttons\n    $container.find(\".truncate-show-more\").toggle();\n    $container.find(\".truncate-show-less\").toggle();\n  });\n})();\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2017-2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n// eslint-disable-next-line no-unused-vars\nimport jquery from \"jquery/dist/jquery\";\nimport \"./truncate.js\";\nimport \"semantic-ui-css/semantic.js\";\nimport \"semantic-ui-less/semantic.less\";\n\n// Add placeholder image if image not found\njquery(\"img.has-placeholder\").each(function() {\n  const $image = jquery(this);\n\n  if(this.naturalHeight === 0) {\n    $image.attr(\"src\", \"/static/images/square-placeholder.png\");\n  }\n})\n\n// Initialize Semantic UI components\njquery(\".ui.dropdown\").dropdown();\n\njquery(\".ui.accordion\").accordion({\n  selector: {\n    trigger: '.trigger'\n  },\n  onOpening: function() {\n    const $accordionTrigger = this.closest('.ui.accordion').find('.trigger');\n    const accordionCloseText = $accordionTrigger.attr('data-close-text');\n    accordionCloseText && $accordionTrigger.html(accordionCloseText);\n    $accordionTrigger.attr('aria-expanded', true);\n  },\n  onClosing: function() {\n    const $accordionTrigger = this.closest('.ui.accordion').find('.trigger');\n    const accordionOpenText = $accordionTrigger.attr('data-open-text');\n    accordionOpenText && $accordionTrigger.html(accordionOpenText);\n    $accordionTrigger.attr('aria-expanded', false);\n  }\n});\n\njquery('.ui.accordion .trigger').on(\"keydown\", function (event) {\n  const $target = jquery(event.target);\n  const isTriggerElement = $target.is(\".trigger\") && !$target.is('button');\n  // Button already have this functionality and will cause double trigger\n\n  if (isTriggerElement && event.key === \"Enter\") {\n    const accordionTitle = jquery(event.target).closest('.title');\n\n    if (accordionTitle.hasClass('active')) {\n      $target.accordion(\"close\");\n      $target.attr('aria-expanded', false);\n    } else {\n      $target.accordion(\"open\");\n      $target.attr('aria-expanded', true);\n    }\n  }\n});\n\njquery(\".message .close\").on(\"click\", function () {\n  jquery(this).closest(\".message\").transition({\n    animation: \"fade\",\n    duration: 0,\n    interval: 0,\n  });\n});\n\njquery(\".message .close-btn\").on(\"keydown\", function (event) {\n  if(event.key === \"Enter\") {\n    jquery(this).closest(\".message\").transition({\n      animation: \"fade\",\n      duration: 0,\n      interval: 0,\n    });\n  }\n});\n\n/* Expand and collapse navbar  */\nconst toggle = document.querySelector(\".menu-icon\");\nconst menu = document.querySelector(\".navbar-menu\");\n/* Toggle mobile menu */\nfunction toggleMenu() {\n  if (menu.classList.contains(\"active\")) {\n    menu.classList.remove(\"active\");\n  } else {\n    menu.classList.add(\"active\");\n  }\n}\ntoggle && toggle.addEventListener(\"click\", toggleMenu, false);\n\n// Make sure screen reader picks up the flashed messages on page load\ndocument.addEventListener('DOMContentLoaded', event => {\n  jquery(\"#flash-message #alert-content\").css('display', 'block');\n})\n"],"sourceRoot":""}