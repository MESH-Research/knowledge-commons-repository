{"version":3,"file":"js/invenio-communities-invitations.da4fb4d1f120249118f5.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationResultItem.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationsResults.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationsResultsContainer.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationsSearchBarElement.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationsSearchLayout.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/InvitationsEmptyResults.js","webpack://invenio-assets/./js/invenio_communities/members/invitations/index.js"],"sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { DateTime } from \"luxon\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport { Container, Grid, Item, Table } from \"semantic-ui-react\";\nimport { InvitationsContext } from \"../../api/invitations/InvitationsContextProvider\";\nimport { RoleDropdown } from \"../components/dropdowns\";\nimport RequestStatus from \"@js/invenio_requests/request/RequestStatus\";\n\nconst formattedTime = (expiresAt) =>\n  DateTime.fromISO(expiresAt).setLocale(i18next.language).toRelative();\n\nexport class InvitationResultItem extends Component {\n  constructor(props) {\n    super(props);\n    const { result } = this.props;\n    this.state = { invitation: result };\n  }\n\n  static contextType = InvitationsContext;\n\n  updateInvitation = (data, value) => {\n    const { invitation } = this.state;\n    this.setState({ invitation: { ...invitation, ...{ role: value } } });\n  };\n\n  render() {\n    const {\n      config: { rolesCanInvite },\n      community,\n    } = this.props;\n    const {\n      invitation: { member, request },\n      invitation,\n    } = this.state;\n    const { api: invitationsApi } = this.context;\n    const rolesCanInviteByType = rolesCanInvite[member.type];\n    const memberInvitationExpiration = formattedTime(request.expires_at);\n    return (\n      <Table.Row className=\"community-member-item\">\n        <Table.Cell>\n          <Grid textAlign=\"left\" verticalAlign=\"middle\">\n            <Grid.Column>\n              <Item className=\"flex align-items-center\" key={invitation.id}>\n                <Image src={member.avatar} avatar circular className=\"mr-10\" />\n                <Item.Content>\n                  <Item.Header size=\"small\" as=\"b\">\n                    <a href={`/communities/${community.slug}/requests/${request.id}`}>\n                      {member.name}\n                    </a>\n                  </Item.Header>\n                  {member.description && (\n                    <Item.Meta>\n                      <div className=\"truncate-lines-1\">{member.description}</div>\n                    </Item.Meta>\n                  )}\n                </Item.Content>\n              </Item>\n            </Grid.Column>\n          </Grid>\n        </Table.Cell>\n        <Table.Cell data-label={i18next.t(\"Status\")}>\n          <RequestStatus status={request.status} />\n        </Table.Cell>\n        <Table.Cell\n          aria-label={i18next.t(\"Expires\") + \" \" + memberInvitationExpiration}\n          data-label={i18next.t(\"Expires\")}\n        >\n          {memberInvitationExpiration}\n        </Table.Cell>\n        <Table.Cell data-label={i18next.t(\"Role\")}>\n          <RoleDropdown\n            roles={rolesCanInviteByType}\n            successCallback={this.updateInvitation}\n            action={invitationsApi.updateRole}\n            disabled={!invitation.permissions.can_update_role}\n            currentValue={invitation.role}\n            resource={invitation}\n            label={i18next.t(\"Role\") + \" \" + invitation.role}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Container fluid textAlign=\"right\">\n            {/* TODO uncomment when links available in the request resource subschema */}\n            {/*<RequestActionController*/}\n            {/*  request={request }*/}\n            {/*  actionSuccessCallback={this.updateInvitation}*/}\n            {/*>*/}\n            {/*<ActionButtons request={invitation} />*/}\n            {/*</RequestActionController>*/}\n          </Container>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nInvitationResultItem.propTypes = {\n  result: PropTypes.object.isRequired,\n  config: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n};\n\nInvitationResultItem.defaultProps = {};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { ResultsPerPage, Pagination, ResultsList } from \"react-searchkit\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\n\nexport const InvitationsResults = ({ paginationOptions, currentResultsState }) => {\n  const { total } = currentResultsState.data;\n  return (\n    total && (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <ResultsList />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column width={8} textAlign=\"right\">\n            <Pagination\n              options={{\n                size: \"mini\",\n                showFirst: false,\n                showLast: false,\n              }}\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"right\" width={8}>\n            <ResultsPerPage\n              values={paginationOptions.resultsPerPage}\n              label={(cmp) => (\n                <Trans key=\"communitiesInvitationsResult\" count={cmp}>\n                  {cmp} results per page\n                </Trans>\n              )}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  );\n};\n\nInvitationsResults.propTypes = {\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"semantic-ui-react\";\nimport { InvitationsContextProvider } from \"../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"./invitationsModal/InvitationsMembersModal\";\n\nexport const InvitationsResultsContainer = ({\n  results,\n  rolesCanInvite,\n  community,\n  communityGroupsEnabled,\n}) => {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell width={6}>{i18next.t(\"Name\")}</Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Status\")}</Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Expires\")}</Table.HeaderCell>\n          <Table.HeaderCell width={3}>{i18next.t(\"Role\")}</Table.HeaderCell>\n          <Table.HeaderCell width={1} textAlign=\"right\">\n            <InvitationsContextProvider community={community}>\n              <InvitationsMembersModalWithSearchKit\n                rolesCanInvite={rolesCanInvite}\n                groupsEnabled={communityGroupsEnabled}\n                community={community}\n                triggerButtonSize=\"tiny\"\n              />\n            </InvitationsContextProvider>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{results}</Table.Body>\n    </Table>\n  );\n};\n\nInvitationsResultsContainer.propTypes = {\n  results: PropTypes.array.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport PropTypes from \"prop-types\";\n\nexport const InvitationsSearchBarElement = ({\n  onBtnSearchClick,\n  onInputChange,\n  onKeyPress,\n  queryString,\n  uiProps,\n}) => {\n  return (\n    <Input\n      className=\"invitation-searchbar\"\n      action={{\n        icon: \"search\",\n        onClick: onBtnSearchClick,\n        className: \"search\",\n        title: i18next.t(\"Search\"),\n      }}\n      fluid\n      placeholder={i18next.t(\"Search in invitations...\")}\n      onChange={(_, { value }) => {\n        onInputChange(value);\n      }}\n      value={queryString}\n      onKeyPress={onKeyPress}\n      {...uiProps}\n    />\n  );\n};\n\nInvitationsSearchBarElement.propTypes = {\n  onBtnSearchClick: PropTypes.func.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onKeyPress: PropTypes.func.isRequired,\n  queryString: PropTypes.string.isRequired,\n  uiProps: PropTypes.object,\n};\n\nInvitationsSearchBarElement.defaultProps = {\n  uiProps: null,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { SearchAppResultsPane } from \"@js/invenio_search_ui/components\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { RequestStatusFilter } from \"@js/invenio_requests/search\";\nimport { Filters } from \"../Filters\";\nimport { InvitationsContextProvider } from \"../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"./invitationsModal/InvitationsMembersModal\";\nimport { SearchBar, Sort } from \"react-searchkit\";\nimport { FilterLabels } from \"../components/FilterLabels\";\nimport { SearchFilters } from \"@js/invenio_search_ui/components/SearchFilters\";\n\nexport class InvitationsSearchLayout extends Component {\n  render() {\n    const {\n      config,\n      roles,\n      rolesCanInvite,\n      community,\n      communityGroupsEnabled,\n      appName,\n    } = this.props;\n\n    const filtersClass = new Filters(roles);\n    const customFilters = filtersClass.getInvitationFilters();\n\n    return (\n      <>\n        {/* auto column grid used instead of SUI grid for better searchbar width adjustment */}\n        <div className=\"auto-column-grid\">\n          <div className=\"flex column-mobile\">\n            <div className=\"mobile only rel-mb-1 flex align-items-center justify-space-between\">\n              <RequestStatusFilter keepFiltersOnUpdate />\n              <div>\n                <InvitationsContextProvider community={community}>\n                  <InvitationsMembersModalWithSearchKit\n                    rolesCanInvite={rolesCanInvite}\n                    groupsEnabled={communityGroupsEnabled}\n                    community={community}\n                  />\n                </InvitationsContextProvider>\n              </div>\n            </div>\n\n            <div className=\"tablet computer only only rel-mr-2\">\n              <RequestStatusFilter keepFiltersOnUpdate />\n            </div>\n            <SearchBar fluid />\n          </div>\n          <div className=\"flex align-items-center column-mobile\">\n            <div className=\"tablet only mr-5\">\n              <InvitationsContextProvider community={community}>\n                <InvitationsMembersModalWithSearchKit\n                  rolesCanInvite={rolesCanInvite}\n                  groupsEnabled={communityGroupsEnabled}\n                  community={community}\n                />\n              </InvitationsContextProvider>\n            </div>\n\n            <div className=\"full-width flex align-items-center justify-end column-mobile\">\n              <SearchFilters customFilters={customFilters} />\n              <Sort values={config.sortOptions} />\n            </div>\n          </div>\n        </div>\n        <div className=\"rel-mb-1\">\n          <FilterLabels ignoreFilters={[\"is_open\"]} />\n        </div>\n\n        <SearchAppResultsPane layoutOptions={config.layoutOptions} appName={appName} />\n      </>\n    );\n  }\n}\n\nInvitationsSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n  appName: PropTypes.string,\n};\n\nInvitationsSearchLayout.defaultProps = {\n  appName: \"\",\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Header, Icon, Segment, Grid } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { InvitationsContextProvider } from \"../../api/invitations/InvitationsContextProvider\";\nimport { InvitationsMembersModalWithSearchKit } from \"./invitationsModal/InvitationsMembersModal\";\n\nclass InvitationsEmptyResultsCmp extends Component {\n  render() {\n    const {\n      resetQuery,\n      extraContent,\n      queryString,\n      community,\n      communityGroupsEnabled,\n      rolesCanInvite,\n    } = this.props;\n\n    return (\n      <Segment.Group>\n        <Segment as={Grid} className=\"computer only\">\n          <Grid.Column width=\"13\" />\n          <Grid.Column width=\"3\">\n            <InvitationsContextProvider community={community}>\n              <InvitationsMembersModalWithSearchKit\n                rolesCanInvite={rolesCanInvite}\n                groupsEnabled={communityGroupsEnabled}\n                community={community}\n              />\n            </InvitationsContextProvider>\n          </Grid.Column>\n        </Segment>\n        <Segment placeholder textAlign=\"center\">\n          <Header icon>\n            <Icon name=\"search\" />\n            {i18next.t(\"No matching members found.\")}\n          </Header>\n          {queryString && (\n            <p>\n              <em>\n                {i18next.t(\"Current search\")} \"{queryString}\"\n              </em>\n            </p>\n          )}\n          <Button primary onClick={() => resetQuery()}>\n            {i18next.t(\"Clear query\")}\n          </Button>\n          {extraContent}\n        </Segment>\n      </Segment.Group>\n    );\n  }\n}\n\nInvitationsEmptyResultsCmp.propTypes = {\n  resetQuery: PropTypes.func.isRequired,\n  queryString: PropTypes.string.isRequired,\n  rolesCanInvite: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  communityGroupsEnabled: PropTypes.bool.isRequired,\n  extraContent: PropTypes.node,\n};\n\nInvitationsEmptyResultsCmp.defaultProps = {\n  extraContent: null,\n};\n\nexport const InvitationsEmptyResults = withState(InvitationsEmptyResultsCmp);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { parametrize, overrideStore } from \"react-overridable\";\nimport { DropdownSort } from \"@js/invenio_search_ui/components\";\nimport { InvitationsContextProvider as ContextProvider } from \"../../api/invitations/InvitationsContextProvider\";\nimport { InvitationResultItem } from \"./InvitationResultItem\";\nimport { InvitationsResults } from \"./InvitationsResults\";\nimport { InvitationsResultsContainer } from \"./InvitationsResultsContainer\";\nimport { InvitationsSearchBarElement } from \"./InvitationsSearchBarElement\";\nimport { InvitationsSearchLayout } from \"./InvitationsSearchLayout\";\nimport { InvitationsEmptyResults } from \"./InvitationsEmptyResults\";\nimport {\n  SubmitStatus,\n  DeleteStatus,\n  AcceptStatus,\n  DeclineStatus,\n  CancelStatus,\n  ExpireStatus,\n} from \"@js/invenio_requests/request\";\n\nconst dataAttr = document.getElementById(\"community-invitations-search-root\").dataset;\nconst community = JSON.parse(dataAttr.community);\nconst communitiesAllRoles = JSON.parse(dataAttr.communitiesAllRoles);\nconst communitiesRolesCanInvite = JSON.parse(dataAttr.communitiesRolesCanInvite);\nconst permissions = JSON.parse(dataAttr.permissions);\n\nconst appName = \"InvenioCommunities.InvitationsSearch\";\n\nconst communityGroupsEnabled = JSON.parse(dataAttr.communityGroupsEnabled);\n\nconst InvitationResultItemWithConfig = parametrize(InvitationResultItem, {\n  config: { rolesCanInvite: communitiesRolesCanInvite },\n  community: community,\n});\n\nconst InvitationsSearchLayoutWithConfig = parametrize(InvitationsSearchLayout, {\n  roles: communitiesAllRoles,\n  rolesCanInvite: communitiesRolesCanInvite,\n  community: community,\n  permissions: permissions,\n  communityGroupsEnabled: communityGroupsEnabled,\n  appName: appName,\n});\n\nconst InvitationsContextProvider = parametrize(ContextProvider, {\n  community: community,\n});\n\nconst InvitationsResultsContainerWithConfig = parametrize(InvitationsResultsContainer, {\n  rolesCanInvite: communitiesRolesCanInvite,\n  community: community,\n  communityGroupsEnabled: communityGroupsEnabled,\n});\n\nconst InvitationsEmptyResultsWithCommunity = parametrize(InvitationsEmptyResults, {\n  community: community,\n  communityGroupsEnabled: communityGroupsEnabled,\n  rolesCanInvite: communitiesRolesCanInvite,\n});\n\nconst defaultComponents = {\n  [`${appName}.EmptyResults.element`]: InvitationsEmptyResultsWithCommunity,\n  [`${appName}.ResultsList.item`]: InvitationResultItemWithConfig,\n  [`${appName}.SearchApp.layout`]: InvitationsSearchLayoutWithConfig,\n  [`${appName}.SearchBar.element`]: InvitationsSearchBarElement,\n  [`${appName}.SearchApp.results`]: InvitationsResults,\n  [`${appName}.ResultsList.container`]: InvitationsResultsContainerWithConfig,\n  [`${appName}.Sort.element`]: DropdownSort,\n  [`RequestStatus.layout.submitted`]: SubmitStatus,\n  [`RequestStatus.layout.deleted`]: DeleteStatus,\n  [`RequestStatus.layout.accepted`]: AcceptStatus,\n  [`RequestStatus.layout.declined`]: DeclineStatus,\n  [`RequestStatus.layout.cancelled`]: CancelStatus,\n  [`RequestStatus.layout.expired`]: ExpireStatus,\n};\n\nconst overriddenComponents = overrideStore.getAll();\n\n// Auto-initialize search app\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true,\n  InvitationsContextProvider\n);\n"],"names":["InvitationResultItem","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","data","value","invitation","state","setState","_objectSpread","role","result","_inherits","_createClass","key","expiresAt","_this$props","this","rolesCanInvite","config","community","_this$state","_this$state$invitatio","member","request","invitationsApi","context","api","rolesCanInviteByType","type","memberInvitationExpiration","expires_at","DateTime","fromISO","setLocale","i18next","language","toRelative","React","Table","Row","className","Cell","Grid","textAlign","verticalAlign","Column","Item","id","Image","src","avatar","circular","Content","Header","size","as","href","concat","slug","name","description","Meta","t","RequestStatus","status","RoleDropdown","roles","successCallback","updateInvitation","action","updateRole","disabled","permissions","can_update_role","currentValue","resource","label","Container","fluid","Component","InvitationsContext","propTypes","PropTypes","isRequired","defaultProps","InvitationsResults","_ref","paginationOptions","currentResultsState","total","width","ResultsList","Pagination","options","showFirst","showLast","ResultsPerPage","values","resultsPerPage","cmp","Trans","count","InvitationsResultsContainer","results","communityGroupsEnabled","HeaderCell","InvitationsContextProvider","InvitationsMembersModalWithSearchKit","groupsEnabled","triggerButtonSize","Body","InvitationsSearchBarElement","onBtnSearchClick","onInputChange","onKeyPress","queryString","uiProps","Input","_extends","icon","onClick","title","placeholder","onChange","_","_ref2","InvitationsSearchLayout","arguments","appName","customFilters","Filters","getInvitationFilters","RequestStatusFilter","keepFiltersOnUpdate","SearchBar","SearchFilters","Sort","sortOptions","FilterLabels","ignoreFilters","SearchAppResultsPane","layoutOptions","InvitationsEmptyResultsCmp","resetQuery","extraContent","Segment","Group","Icon","Button","primary","InvitationsEmptyResults","withState","dataAttr","document","getElementById","dataset","JSON","parse","communitiesAllRoles","communitiesRolesCanInvite","InvitationResultItemWithConfig","parametrize","InvitationsSearchLayoutWithConfig","ContextProvider","InvitationsResultsContainerWithConfig","InvitationsEmptyResultsWithCommunity","defaultComponents","_defaultComponents","DropdownSort","SubmitStatus","DeleteStatus","AcceptStatus","DeclineStatus","CancelStatus","ExpireStatus","overriddenComponents","overrideStore","getAll","createSearchAppInit"],"sourceRoot":""}