{"version":3,"file":"js/3624.0c5879687e5072014b41.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/components/CompactStats.js","webpack://invenio-assets/./js/invenio_app_rdm/components/DisplayPartOfCommunities.js","webpack://invenio-assets/./js/invenio_app_rdm/components/DisplayVerifiedCommunity.js","webpack://invenio-assets/./js/invenio_app_rdm/components/RecordsResultsListItem.js","webpack://invenio-assets/./js/invenio_app_rdm/search/components.js","webpack://invenio-assets/./js/invenio_app_rdm/utils.js"],"sourcesContent":["// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Icon, Label, Popup } from \"semantic-ui-react\";\n\nexport const CompactStats = ({ uniqueViews, uniqueDownloads }) => {\n  return (\n    <>\n      {uniqueViews != null && (\n        <Popup\n          size=\"tiny\"\n          content={i18next.t(\"Views\")}\n          trigger={\n            <Label className=\"transparent\">\n              <Icon name=\"eye\" />\n              {uniqueViews}\n            </Label>\n          }\n        />\n      )}\n      {uniqueDownloads != null && (\n        <Popup\n          size=\"tiny\"\n          content={i18next.t(\"Downloads\")}\n          trigger={\n            <Label className=\"transparent\">\n              <Icon name=\"download\" />\n              {uniqueDownloads}\n            </Label>\n          }\n        />\n      )}\n    </>\n  );\n};\n\nCompactStats.propTypes = {\n  uniqueViews: PropTypes.number,\n  uniqueDownloads: PropTypes.number,\n};\n\nCompactStats.defaultProps = {\n  uniqueViews: null,\n  uniqueDownloads: null,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2024-2024 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport const DisplayPartOfCommunities = ({ communities }) => {\n  const PartOfCommunities = () => {\n    // FIXME: Uncomment to enable themed banner\n    // const communitiesEntries = communities.entries?.filter((community) => !(community.id === communities?.default && community?.theme));\n    const communitiesEntries = communities.entries;\n\n    if (communitiesEntries?.length > 0) {\n      return (\n        <>\n          {i18next.t(\"Part of \")}\n          {communitiesEntries.map((community, index) => {\n            return (\n              <>\n                <a href={`/communities/${community.slug}`}>\n                  {community.metadata?.title}\n                </a>\n                {index !== communitiesEntries.length - 1 && \", \"}\n              </>\n            );\n          })}\n        </>\n      );\n    }\n  };\n  return (\n    <p>\n      <b>{PartOfCommunities()}</b>\n    </p>\n  );\n};\n\nDisplayPartOfCommunities.propTypes = {\n  communities: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2024-2024 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, Image } from \"semantic-ui-react\";\n\nexport const DisplayVerifiedCommunity = ({ communities }) => {\n  const filterBrandedCommunity = (parentCommunities) => {\n    const brandedCommunityId = parentCommunities?.default;\n    const communities = parentCommunities?.entries;\n    let displayCommunity = null;\n\n    if (communities) {\n      communities.map((community) => {\n        if (community.id === brandedCommunityId && community?.theme) {\n          displayCommunity = community;\n        }\n        return displayCommunity;\n      });\n    }\n\n    return displayCommunity;\n  };\n\n  const verifiedCommunity = filterBrandedCommunity(communities);\n  return (\n    <>\n      {verifiedCommunity && (\n        <Label\n          as=\"a\"\n          href={`/communities/${verifiedCommunity.slug}`}\n          style={{ backgroundColor: verifiedCommunity?.theme?.style?.primaryColor }}\n          className=\"themed-community-label\"\n        >\n          {verifiedCommunity.metadata.title}\n          <Image\n            className=\"themed-community-logo right-floated\"\n            src={`/api/communities/${verifiedCommunity.slug}/logo`}\n            alt=\"\"\n          />\n        </Label>\n      )}\n    </>\n  );\n};\n\nDisplayVerifiedCommunity.propTypes = {\n  communities: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022-2024 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _get from \"lodash/get\";\nimport _truncate from \"lodash/truncate\";\nimport React, { Component } from \"react\";\nimport Overridable from \"react-overridable\";\nimport { SearchItemCreators } from \"../utils\";\nimport PropTypes from \"prop-types\";\nimport { Item, Label, Icon } from \"semantic-ui-react\";\nimport { buildUID } from \"react-searchkit\";\nimport { CompactStats } from \"./CompactStats\";\nimport { DisplayVerifiedCommunity } from \"./DisplayVerifiedCommunity\";\nimport { DisplayPartOfCommunities } from \"./DisplayPartOfCommunities\";\n\nclass RecordsResultsListItem extends Component {\n  render() {\n    const { currentQueryState, result, key, appName } = this.props;\n\n    const accessStatusId = _get(result, \"ui.access_status.id\", \"open\");\n    const accessStatus = _get(result, \"ui.access_status.title_l10n\", \"Open\");\n    const accessStatusIcon = _get(result, \"ui.access_status.icon\", \"unlock\");\n    const createdDate = _get(\n      result,\n      \"ui.created_date_l10n_long\",\n      \"No creation date found.\"\n    );\n\n    const creators = result.ui.creators.creators;\n\n    const descriptionStripped = _get(\n      result,\n      \"ui.description_stripped\",\n      \"No description\"\n    );\n\n    const publicationDate = _get(\n      result,\n      \"ui.publication_date_l10n_long\",\n      \"No publication date found.\"\n    );\n    const resourceType = _get(\n      result,\n      \"ui.resource_type.title_l10n\",\n      \"No resource type\"\n    );\n    const subjects = _get(result, \"ui.subjects\", []);\n    const title = _get(result, \"metadata.title\", \"No title\");\n    const version = _get(result, \"ui.version\", null);\n    const versions = _get(result, \"versions\");\n    const uniqueViews = _get(result, \"stats.all_versions.unique_views\", 0);\n    const uniqueDownloads = _get(result, \"stats.all_versions.unique_downloads\", 0);\n\n    const publishingInformation = _get(result, \"ui.publishing_information.journal\", \"\");\n\n    const filters = currentQueryState && Object.fromEntries(currentQueryState.filters);\n    const allVersionsVisible = filters?.allversions;\n    const numOtherVersions = versions.index - 1;\n\n    // Derivatives\n    const viewLink = `/records/${result.id}`;\n    return (\n      <Overridable\n        id={buildUID(\"RecordsResultsListItem.layout\", \"\", appName)}\n        result={result}\n        key={key}\n        accessStatusId={accessStatusId}\n        accessStatus={accessStatus}\n        accessStatusIcon={accessStatusIcon}\n        createdDate={createdDate}\n        creators={creators}\n        descriptionStripped={descriptionStripped}\n        publicationDate={publicationDate}\n        resourceType={resourceType}\n        subjects={subjects}\n        title={title}\n        version={version}\n        versions={versions}\n        allVersionsVisible={allVersionsVisible}\n        numOtherVersions={numOtherVersions}\n      >\n        <Item key={key ?? result.id}>\n          <Item.Content>\n            {/* FIXME: Uncomment to enable themed banner */}\n            {/* <DisplayVerifiedCommunity communities={result.parent?.communities} /> */}\n            <Item.Extra className=\"labels-actions\">\n              <Label horizontal size=\"small\" className=\"primary\">\n                {publicationDate} ({version})\n              </Label>\n              <Label horizontal size=\"small\" className=\"neutral\">\n                {resourceType}\n              </Label>\n              <Label\n                horizontal\n                size=\"small\"\n                className={`access-status ${accessStatusId}`}\n              >\n                {accessStatusIcon && <Icon name={accessStatusIcon} />}\n                {accessStatus}\n              </Label>\n            </Item.Extra>\n            <Item.Header as=\"h2\">\n              <a href={viewLink}>{title}</a>\n            </Item.Header>\n            <Item className=\"creatibutors\">\n              <SearchItemCreators creators={creators} othersLink={viewLink} />\n            </Item>\n            <Item.Description>\n              {_truncate(descriptionStripped, { length: 350 })}\n            </Item.Description>\n            <Item.Extra>\n              {subjects.map((subject) => (\n                <Label key={subject.title_l10n} size=\"tiny\">\n                  {subject.title_l10n}\n                </Label>\n              ))}\n\n              <div className=\"flex justify-space-between align-items-end\">\n                <small>\n                  <DisplayPartOfCommunities communities={result.parent?.communities} />\n                  <p>\n                    {createdDate && (\n                      <>\n                        {i18next.t(\"Uploaded on {{uploadDate}}\", {\n                          uploadDate: createdDate,\n                        })}\n                      </>\n                    )}\n                    {createdDate && publishingInformation && \" | \"}\n\n                    {publishingInformation && (\n                      <>\n                        {i18next.t(\"Published in: {{publishInfo}}\", {\n                          publishInfo: publishingInformation,\n                        })}\n                      </>\n                    )}\n                  </p>\n\n                  {!allVersionsVisible && versions.index > 1 && (\n                    <p>\n                      <b>\n                        {i18next.t(\"{{count}} more versions exist for this record\", {\n                          count: numOtherVersions,\n                        })}\n                      </b>\n                    </p>\n                  )}\n                </small>\n\n                <small>\n                  <CompactStats\n                    uniqueViews={uniqueViews}\n                    uniqueDownloads={uniqueDownloads}\n                  />\n                </small>\n              </div>\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      </Overridable>\n    );\n  }\n}\n\nRecordsResultsListItem.propTypes = {\n  currentQueryState: PropTypes.object,\n  result: PropTypes.object.isRequired,\n  key: PropTypes.string,\n  appName: PropTypes.string,\n};\n\nRecordsResultsListItem.defaultProps = {\n  key: null,\n  currentQueryState: null,\n  appName: \"\",\n};\n\nexport default Overridable.component(\"RecordsResultsListItem\", RecordsResultsListItem);\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021-2022 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  SearchBar,\n  MultipleOptionsSearchBarRSK,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _get from \"lodash/get\";\nimport _truncate from \"lodash/truncate\";\nimport React from \"react\";\nimport Overridable from \"react-overridable\";\nimport { withState, buildUID } from \"react-searchkit\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Label,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport RecordsResultsListItem from \"../components/RecordsResultsListItem\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\n\nexport const RDMRecordResultsListItemWithState = withState(\n  ({ currentQueryState, result, appName }) => (\n    <RecordsResultsListItem\n      currentQueryState={currentQueryState}\n      result={result}\n      appName={appName}\n    />\n  )\n);\n\nRDMRecordResultsListItemWithState.propTypes = {\n  currentQueryState: PropTypes.object,\n  result: PropTypes.object.isRequired,\n};\n\nRDMRecordResultsListItemWithState.defaultProps = {\n  currentQueryState: null,\n};\n\n// TODO: Update this according to the full List item template?\nexport const RDMRecordResultsGridItem = ({ result }) => {\n  const descriptionStripped = _get(result, \"ui.description_stripped\", \"No description\");\n  return (\n    <Card fluid href={`/records/${result.pid}`}>\n      <Card.Content>\n        <Card.Header>{result.metadata.title}</Card.Header>\n        <Card.Description>\n          {_truncate(descriptionStripped, { length: 200 })}\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nRDMRecordResultsGridItem.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n\nexport const RDMRecordSearchBarContainer = ({ appName }) => {\n  return (\n    <Overridable id={buildUID(\"SearchApp.searchbar\", \"\", appName)}>\n      <SearchBar />\n    </Overridable>\n  );\n};\n\nRDMRecordSearchBarContainer.propTypes = {\n  appName: PropTypes.string.isRequired,\n};\n\nexport const RDMRecordMultipleSearchBarElement = ({ queryString, onInputChange }) => {\n  const headerSearchbar = document.getElementById(\"header-search-bar\");\n  const searchbarOptions = JSON.parse(headerSearchbar.dataset.options);\n\n  return (\n    <MultipleOptionsSearchBarRSK\n      options={searchbarOptions}\n      onInputChange={onInputChange}\n      queryString={queryString}\n      placeholder={i18next.t(\"Search records...\")}\n    />\n  );\n};\n\nRDMRecordMultipleSearchBarElement.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport const RDMRecordSearchBarElement = withState(\n  ({\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    updateQueryState,\n    currentQueryState,\n  }) => {\n    const placeholder = passedPlaceholder || i18next.t(\"Search\");\n\n    const onSearch = () => {\n      updateQueryState({ ...currentQueryState, queryString });\n    };\n\n    const onBtnSearchClick = () => {\n      onSearch();\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        onSearch();\n      }\n    };\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        aria-label={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    );\n  }\n);\n\nexport const RDMToggleComponent = ({\n  updateQueryFilters,\n  userSelectionFilters,\n  filterValue,\n  label,\n  title,\n}) => {\n  const _isChecked = (userSelectionFilters) => {\n    const isFilterActive =\n      userSelectionFilters.filter((filter) => filter[0] === filterValue[0]).length > 0;\n    return isFilterActive;\n  };\n\n  const onToggleClicked = () => {\n    updateQueryFilters(filterValue);\n  };\n\n  var isChecked = _isChecked(userSelectionFilters);\n  return (\n    <Card className=\"borderless facet\">\n      <Card.Content>\n        <Card.Header as=\"h2\">{title}</Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Checkbox\n          toggle\n          label={<label aria-hidden=\"true\">{label}</label>}\n          name=\"versions-toggle\"\n          aria-label={label}\n          onClick={onToggleClicked}\n          checked={isChecked}\n        />\n      </Card.Content>\n    </Card>\n  );\n};\n\nRDMToggleComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  filterValue: PropTypes.array.isRequired,\n  userSelectionFilters: PropTypes.array.isRequired,\n  updateQueryFilters: PropTypes.func.isRequired,\n};\n\nexport const RDMCountComponent = ({ totalResults }) => {\n  return <Label>{totalResults.toLocaleString(\"en-US\")}</Label>;\n};\n\nRDMCountComponent.propTypes = {\n  totalResults: PropTypes.number.isRequired,\n};\n\nexport const RDMEmptyResults = ({ queryString, searchPath, resetQuery }) => {\n  return (\n    <Grid>\n      <Grid.Row centered>\n        <Grid.Column width={12} textAlign=\"center\">\n          <Header as=\"h2\">\n            {i18next.t(\"We couldn't find any matches for {{- search}}\", {\n              search: (queryString && `'${queryString}'`) || \"your search\",\n            })}\n          </Header>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column width={8} textAlign=\"center\">\n          <Button primary onClick={resetQuery}>\n            <Icon name=\"search\" />\n            {i18next.t(\"Start over\")}\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column width={12}>\n          <Segment secondary padded size=\"large\">\n            <Header as=\"h3\" size=\"small\">\n              {i18next.t(\"ProTip\")}!\n            </Header>\n            <Trans>\n              <p>\n                <a href={`${searchPath}?q=metadata.publication_date:[2017-01-01 TO *]`}>\n                  metadata.publication_date:[2017-01-01 TO *]\n                </a>{\" \"}\n                will give you all the publications from 2017 until today.\n              </p>\n            </Trans>\n            <Trans>\n              <p>\n                For more tips, check out our{\" \"}\n                <a href=\"/help/search\" title={i18next.t(\"Search guide\")}>\n                  search guide\n                </a>{\" \"}\n                for defining advanced search queries.\n              </p>\n            </Trans>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nRDMEmptyResults.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  resetQuery: PropTypes.func.isRequired,\n  searchPath: PropTypes.string,\n};\n\nRDMEmptyResults.defaultProps = {\n  searchPath: \"/search\",\n};\n\nexport const RDMErrorComponent = ({ error }) => {\n  return <Message error content={error.response.data.message} icon=\"warning sign\" />;\n};\n\nRDMErrorComponent.propTypes = {\n  error: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2021 CERN.\n// Copyright (C) 2021 New York University.\n// Copyright (C) 2022 data-futures.\n// Copyright (C) 2023 Northwestern University.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { DateTime } from \"luxon\";\n\nexport function SearchItemCreators({ creators, className, othersLink }) {\n  let spanClass = \"creatibutor-wrap separated\";\n  className && (spanClass += ` ${className}`);\n\n  function makeIcon(scheme, identifier, name) {\n    let link = null;\n    let linkTitle = null;\n    let icon = null;\n    let alt = \"\";\n\n    switch (scheme) {\n      case \"orcid\":\n        link = `https://orcid.org/${identifier}`;\n        linkTitle = i18next.t(\"ORCID profile\");\n        icon = \"/static/images/orcid.svg\";\n        alt = \"ORCID logo\";\n        break;\n      case \"ror\":\n        link = `https://ror.org/${identifier}`;\n        linkTitle = i18next.t(\"ROR profile\");\n        icon = \"/static/images/ror-icon.svg\";\n        alt = \"ROR logo\";\n        break;\n      case \"gnd\":\n        link = `https://d-nb.info/gnd/${identifier}`;\n        linkTitle = i18next.t(\"GND profile\");\n        icon = \"/static/images/gnd-icon.svg\";\n        alt = \"GND logo\";\n        break;\n      default:\n        return null;\n    }\n\n    icon = (\n      <a\n        className=\"no-text-decoration mr-0\"\n        href={link}\n        aria-label={`${name}: ${linkTitle}`}\n        title={`${name}: ${linkTitle}`}\n        key={scheme}\n      >\n        <img className=\"inline-id-icon ml-5\" src={icon} alt={alt} />\n      </a>\n    );\n    return icon;\n  }\n\n  function getIcons(creator) {\n    let ids = _get(creator, \"person_or_org.identifiers\", []);\n    let creatorName = _get(creator, \"person_or_org.name\", \"No name\");\n    let icons = ids.map((c) => makeIcon(c.scheme, c.identifier, creatorName));\n    return icons;\n  }\n\n  function getLink(creator) {\n    let creatorName = _get(creator, \"person_or_org.name\", \"No name\");\n    let link = (\n      <a\n        className=\"creatibutor-link\"\n        href={`/search?q=metadata.creators.person_or_org.name:\"${creatorName}\"`}\n        title={`${creatorName}: ${i18next.t(\"Search\")}`}\n      >\n        <span className=\"creatibutor-name\">{creatorName}</span>\n      </a>\n    );\n    return link;\n  }\n\n  const numDisplayed = 3;\n  const result = creators.slice(0, numDisplayed).map((creator) => (\n    <span className={spanClass} key={creator.person_or_org.name}>\n      {getLink(creator)}\n      {getIcons(creator)}\n    </span>\n  ));\n\n  const numExtra = creators.length - numDisplayed;\n  if (0 < numExtra) {\n    let text;\n    if (numExtra === 1) {\n      text = \"and {{count}} other\";\n    } else {\n      text = \"and {{count}} others\";\n    }\n    result.push(\n      <span className={spanClass} key={text}>\n        <a className=\"creatibutor-link\" href={othersLink}>\n          <span className=\"creatibutor-name\">\n            {i18next.t(text, { count: numExtra })}\n          </span>\n        </a>\n      </span>\n    );\n  }\n\n  return result;\n}\n\n/**\n * Returns a human readable timestamp in the format \"4 days ago\".\n *\n * @param {Date} timestamp\n * @returns string\n */\nexport const timestampToRelativeTime = (timestamp) =>\n  DateTime.fromISO(timestamp).setLocale(i18next.language).toRelative();\n"],"names":["CompactStats","_ref","uniqueViews","uniqueDownloads","React","Popup","size","content","i18next","t","trigger","Label","className","Icon","name","propTypes","PropTypes","defaultProps","DisplayPartOfCommunities","communities","communitiesEntries","entries","length","map","community","index","_community$metadata","href","concat","slug","metadata","title","PartOfCommunities","isRequired","RecordsResultsListItem","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_result$parent","_this$props","this","props","currentQueryState","result","appName","accessStatusId","_get","accessStatus","accessStatusIcon","createdDate","creators","ui","descriptionStripped","publicationDate","resourceType","subjects","version","versions","publishingInformation","filters","Object","fromEntries","allVersionsVisible","allversions","numOtherVersions","viewLink","id","Overridable","buildUID","Item","Content","Extra","horizontal","Header","as","SearchItemCreators","othersLink","Description","_truncate","subject","title_l10n","parent","uploadDate","publishInfo","count","Component","component","RDMRecordResultsListItemWithState","withState","RDMRecordResultsGridItem","_ref2","Card","fluid","pid","RDMRecordSearchBarContainer","_ref3","SearchBar","RDMRecordMultipleSearchBarElement","_ref4","queryString","onInputChange","headerSearchbar","document","getElementById","searchbarOptions","JSON","parse","dataset","options","MultipleOptionsSearchBarRSK","placeholder","RDMRecordSearchBarElement","_ref5","passedPlaceholder","updateQueryState","onSearch","_objectSpread","Input","action","onChange","event","_ref6","onKeyPress","RDMToggleComponent","_ref7","updateQueryFilters","userSelectionFilters","filterValue","label","isChecked","filter","_isChecked","Checkbox","toggle","onClick","checked","RDMCountComponent","_ref8","totalResults","toLocaleString","RDMEmptyResults","_ref9","searchPath","resetQuery","Grid","Row","centered","Column","width","textAlign","search","Button","primary","Segment","secondary","padded","Trans","RDMErrorComponent","_ref10","error","Message","response","data","message","icon","spanClass","getIcons","creator","ids","creatorName","c","scheme","identifier","link","linkTitle","alt","src","makeIcon","text","slice","person_or_org","getLink","numExtra","push","timestampToRelativeTime","timestamp","DateTime","fromISO","setLocale","language","toRelative"],"sourceRoot":""}