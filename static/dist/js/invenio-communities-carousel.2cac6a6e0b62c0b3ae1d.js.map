{"version":3,"file":"js/invenio-communities-carousel.2cac6a6e0b62c0b3ae1d.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_communities/community/communitiesCarousel/CarouselItem.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesCarousel/CommunitiesCarousel.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesCarousel/index.js"],"sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2016-2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport _truncate from \"lodash/truncate\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\nimport { Button, Grid, Header, Item } from \"semantic-ui-react\";\n\nclass CarouselItem extends Component {\n  render() {\n    const { community, defaultLogo, className, showUploadBtn } = this.props;\n\n    return (\n      <Overridable\n        id=\"InvenioCommunities.CarouselItem.layout\"\n        community={community}\n        defaultLogo={defaultLogo}\n        className={className}\n      >\n        <Item\n          className={`carousel flex align-items-center ${className}`}\n          key={community.id}\n        >\n          <Image size=\"small\" src={community.links.logo} fallbackSrc={defaultLogo} />\n          <Item.Content>\n            <Item.Header as={Grid} stackable className=\"rel-pb-1\">\n              <Grid.Column computer=\"10\" tablet=\"16\" className=\"pl-0 pb-0\">\n                <Header as=\"a\" size=\"medium\" href={community.links.self_html}>\n                  {community.metadata.title}\n                </Header>\n              </Grid.Column>\n              <Grid.Column computer=\"6\" tablet=\"16\" className=\"buttons pl-0 pb-0\">\n                <Button\n                  size=\"mini\"\n                  href={community.links.self_html}\n                  content={i18next.t(\"Browse\")}\n                />\n                {showUploadBtn && (\n                  <Button\n                    size=\"mini\"\n                    icon=\"upload\"\n                    labelPosition=\"left\"\n                    positive\n                    href={`/uploads/new?community=${community.slug}`}\n                    content={i18next.t(\"New upload\")}\n                  />\n                )}\n              </Grid.Column>\n            </Item.Header>\n            <Item.Description\n              content={_truncate(community.metadata.description, { length: 300 })}\n            />\n          </Item.Content>\n        </Item>\n      </Overridable>\n    );\n  }\n}\n\nCarouselItem.propTypes = {\n  community: PropTypes.object.isRequired,\n  defaultLogo: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  showUploadBtn: PropTypes.bool,\n};\n\nCarouselItem.defaultProps = {\n  className: \"\",\n  showUploadBtn: true,\n};\n\nexport default Overridable.component(\"InvenioCommunities.CarouselItem\", CarouselItem);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2016-2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { http, withCancel } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Item,\n  Placeholder,\n  Transition,\n} from \"semantic-ui-react\";\nimport CarouselItem from \"./CarouselItem\";\n\nclass CommunitiesCarousel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: { hits: [] },\n      activeIndex: 0,\n      animationDirection: \"left\",\n      carouselTimer: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancellableFetch && this.cancellableFetch.cancel();\n    this.stopCarousel();\n  }\n\n  getDataIndex = (index) => {\n    const { itemsPerPage } = this.props;\n    const {\n      data: { hits },\n    } = this.state;\n    const i = index * parseInt(itemsPerPage);\n    if (i > hits.length - 1) return 0;\n    if (i < 0) return hits.length - 1;\n    return i;\n  };\n\n  runCarousel = async (newIndex) => {\n    const { activeIndex } = this.state;\n    let animationDirection = newIndex < activeIndex ? \"right\" : \"left\";\n    await this.setState({ animationDirection });\n    this.setState({ activeIndex: this.getDataIndex(newIndex) });\n  };\n\n  setCarouselTimer = () => {\n    const {\n      data: { hits: length },\n      activeIndex,\n    } = this.state;\n    const { intervalDelay } = this.props;\n    this.setState({\n      carouselTimer: setInterval(() => {\n        length && this.runCarousel(activeIndex + 1);\n      }, intervalDelay),\n    });\n  };\n\n  // Pause carousel when user focuses elements in the container\n  stopCarousel = () => {\n    const { carouselTimer } = this.state;\n    clearInterval(carouselTimer);\n  };\n  startCarousel = () => {\n    this.setCarouselTimer();\n  };\n\n  fetchData = async () => {\n    const { fetchUrl } = this.props;\n    this.cancellableFetch = withCancel(http.get(fetchUrl));\n    try {\n      const response = await this.cancellableFetch.promise;\n      this.setState({ data: response.data.hits });\n      this.setCarouselTimer();\n      this.setState({ isLoading: false });\n    } catch (error) {\n      console.error(error);\n      this.setState({ isLoading: false });\n    }\n  };\n\n  renderPlaceholder = () => {\n    const { title } = this.props;\n    return (\n      <Container fluid className=\"rel-pt-2 rel-pb-2 ml-0-mobile mr-0-mobile\">\n        <Container>\n          <Header as=\"h2\" className=\"rel-mb-1\">\n            {title}\n          </Header>\n        </Container>\n        <Grid container>\n          <Grid.Column width=\"2\" />\n          <Grid.Column width=\"12\">\n            <Item.Group>\n              <Item>\n                <Item.Image>\n                  <Placeholder>\n                    <Placeholder.Image square />\n                  </Placeholder>\n                </Item.Image>\n\n                <Item.Content>\n                  <Item.Header className=\"mt-5 rel-mb-2\">\n                    <Placeholder>\n                      <Placeholder.Header>\n                        <Placeholder.Line />\n                      </Placeholder.Header>\n                    </Placeholder>\n                  </Item.Header>\n\n                  <Item.Description>\n                    <Placeholder>\n                      <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                      </Placeholder.Paragraph>\n                    </Placeholder>\n                  </Item.Description>\n                </Item.Content>\n              </Item>\n            </Item.Group>\n          </Grid.Column>\n          <Grid.Column width=\"2\" />\n        </Grid>\n      </Container>\n    );\n  };\n\n  carouselSlides = () => {\n    const { data, activeIndex } = this.state;\n    const { defaultLogo, itemsPerPage, showUploadBtn } = this.props;\n\n    const sliceEnd = parseInt(activeIndex) + parseInt(itemsPerPage);\n\n    const carouselSlides = data.hits\n      ?.slice(activeIndex, sliceEnd)\n      .map((community) => (\n        <CarouselItem\n          community={community}\n          defaultLogo={defaultLogo}\n          key={community.id}\n          showUploadBtn={showUploadBtn}\n        />\n      ));\n\n    return carouselSlides;\n  };\n\n  render() {\n    const { data, animationDirection, activeIndex, isLoading } = this.state;\n    const { title, animationSpeed, itemsPerPage } = this.props;\n\n    return (\n      <Overridable\n        id=\"InvenioCommunities.CommunitiesCarousel.layout\"\n        data={data}\n        animationDirection={animationDirection}\n        activeIndex={activeIndex}\n        title={title}\n        animationSpeed={animationSpeed}\n        carouselSlides={this.carouselSlides()}\n        stopCarousel={this.stopCarousel}\n        startCarousel={this.startCarousel}\n        runCarousel={this.runCarousel}\n        itemsPerPage={itemsPerPage}\n      >\n        <>\n          {isLoading && this.renderPlaceholder()}\n\n          {!isLoading && !_isEmpty(data.hits) && (\n            <Container\n              fluid\n              className=\"carousel rel-pt-2 rel-pb-2 ml-0-mobile mr-0-mobile\"\n            >\n              <Container className=\"rel-mb-1\">\n                <Header as=\"h2\">{title}</Header>\n              </Container>\n\n              <Grid container onFocus={this.stopCarousel} onBlur={this.startCarousel}>\n                <Grid.Column\n                  width=\"2\"\n                  className=\"pr-0\"\n                  verticalAlign=\"middle\"\n                  textAlign=\"left\"\n                >\n                  <Icon\n                    className=\"carousel-arrow\"\n                    inverted\n                    role=\"button\"\n                    name=\"angle left\"\n                    size=\"huge\"\n                    aria-label={i18next.t(\"Previous slide\")}\n                    onClick={() => this.runCarousel(activeIndex - 1)}\n                    onKeyDown={(event) =>\n                      event.key === \"Enter\" && this.runCarousel(activeIndex - 1)\n                    }\n                    tabIndex=\"0\"\n                  />\n                </Grid.Column>\n                <Grid.Column width=\"12\">\n                  <Transition.Group\n                    as={Item.Group}\n                    className=\"flex align-items-center justify-center\"\n                    duration={animationSpeed}\n                    animation={`carousel-slide ${animationDirection}`}\n                    directional\n                  >\n                    {this.carouselSlides()}\n                  </Transition.Group>\n                </Grid.Column>\n\n                <Grid.Column\n                  width=\"2\"\n                  className=\"pl-0\"\n                  verticalAlign=\"middle\"\n                  textAlign=\"right\"\n                >\n                  <Icon\n                    className=\"carousel-arrow\"\n                    inverted\n                    role=\"button\"\n                    name=\"angle right\"\n                    size=\"huge\"\n                    aria-label={i18next.t(\"Next slide\")}\n                    onClick={() => this.runCarousel(activeIndex + 1)}\n                    onKeyDown={(event) =>\n                      event.key === \"Enter\" && this.runCarousel(activeIndex + 1)\n                    }\n                    tabIndex=\"0\"\n                  />\n                </Grid.Column>\n              </Grid>\n            </Container>\n          )}\n        </>\n      </Overridable>\n    );\n  }\n}\n\nCommunitiesCarousel.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired,\n  intervalDelay: PropTypes.number.isRequired,\n  animationSpeed: PropTypes.number.isRequired,\n  defaultLogo: PropTypes.string.isRequired,\n  itemsPerPage: PropTypes.string.isRequired,\n  showUploadBtn: PropTypes.bool,\n};\n\nCommunitiesCarousel.defaultProps = {\n  showUploadBtn: true,\n};\n\nexport default Overridable.component(\n  \"InvenioCommunities.CommunitiesCarousel\",\n  CommunitiesCarousel\n);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2016-2024 CERN.\n * Copyright (C) 2024      KTH Royal Institute of Technology.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { OverridableContext, overrideStore } from \"react-overridable\";\nimport CommunitiesCarousel from \"./CommunitiesCarousel\";\n\nconst communitiesCarouselContainer = document.getElementById(\"communities-carousel\");\nconst title = communitiesCarouselContainer.dataset.title;\nconst fetchUrl = communitiesCarouselContainer.dataset.fetchUrl;\nconst intervalDelay = parseInt(communitiesCarouselContainer.dataset.intervalDelay);\nconst animationSpeed = parseInt(communitiesCarouselContainer.dataset.animationSpeed);\nconst defaultLogo = communitiesCarouselContainer.dataset.defaultLogo;\nconst itemsPerPage = communitiesCarouselContainer.dataset.itemsPerPage;\nconst showUploadBtn = JSON.parse(communitiesCarouselContainer.dataset.showUploadBtn);\n\nconst overriddenComponents = overrideStore.getAll();\n\nReactDOM.render(\n  <OverridableContext.Provider value={overriddenComponents}>\n    <CommunitiesCarousel\n      title={title}\n      fetchUrl={fetchUrl}\n      intervalDelay={intervalDelay}\n      animationSpeed={animationSpeed}\n      defaultLogo={defaultLogo}\n      itemsPerPage={itemsPerPage}\n      showUploadBtn={showUploadBtn}\n    />\n  </OverridableContext.Provider>,\n  communitiesCarouselContainer\n);\n"],"names":["CarouselItem","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","community","defaultLogo","className","showUploadBtn","React","Overridable","id","Item","concat","Image","size","src","links","logo","fallbackSrc","Content","Header","as","Grid","stackable","Column","computer","tablet","href","self_html","metadata","title","Button","content","i18next","t","icon","labelPosition","positive","slug","Description","_truncate","description","length","Component","propTypes","PropTypes","isRequired","defaultProps","component","CommunitiesCarousel","_this","_defineProperty","index","itemsPerPage","hits","state","data","i","parseInt","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","newIndex","activeIndex","animationDirection","_context","prev","next","setState","getDataIndex","stop","_x","apply","_this$state","intervalDelay","carouselTimer","setInterval","runCarousel","clearInterval","setCarouselTimer","_callee2","fetchUrl","response","_context2","cancellableFetch","withCancel","http","get","promise","sent","isLoading","t0","console","error","Container","fluid","container","width","Group","Placeholder","square","Line","Paragraph","_data$hits","_this$state2","sliceEnd","slice","map","fetchData","cancel","stopCarousel","_this2","_this$state3","_this$props2","animationSpeed","carouselSlides","startCarousel","renderPlaceholder","_isEmpty","onFocus","onBlur","verticalAlign","textAlign","Icon","inverted","role","name","onClick","onKeyDown","event","tabIndex","Transition","duration","animation","directional","communitiesCarouselContainer","document","getElementById","dataset","JSON","parse","overriddenComponents","overrideStore","getAll","ReactDOM","OverridableContext","Provider"],"sourceRoot":""}