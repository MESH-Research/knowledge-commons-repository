{"version":3,"file":"js/834.3e34ae56c031c20f2883.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/administration/components/SetQuotaForm.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/components/SetQuotaAction.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/users/api/routes.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/users/api/api.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/components/ImpersonateUserForm.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/components/ImpersonateUser.js","webpack://invenio-assets/./js/invenio_app_rdm/administration/users/UserActions.js"],"sourcesContent":["/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { Formik } from \"formik\";\nimport {\n  withCancel,\n  ErrorMessage,\n  TextField,\n  TextAreaField,\n  http,\n} from \"react-invenio-forms\";\nimport { Form, Button, Modal } from \"semantic-ui-react\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport * as Yup from \"yup\";\n\nexport class SetQuotaForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: undefined,\n    };\n    this.tombstoneSchema = Yup.object({\n      quota_size: Yup.number().required().min(1),\n      max_file_size: Yup.number().required().min(1),\n      notes: Yup.string(),\n    });\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleSubmit = async (values) => {\n    this.setState({ loading: true });\n    const { addNotification } = this.context;\n    const { resource, actionSuccessCallback, setQuotaInBytes, apiUrl } = this.props;\n    let { notes, quota_size: quotaSize, max_file_size: maxFileSize } = values;\n\n    const quotaInGb = !setQuotaInBytes && quotaSize;\n\n    if (!setQuotaInBytes) {\n      quotaSize *= 10 ** 9;\n      maxFileSize *= 10 ** 9;\n    }\n\n    this.cancellableAction = withCancel(\n      http.post(apiUrl, {\n        notes,\n        quota_size: quotaSize,\n        max_file_size: maxFileSize,\n      })\n    );\n\n    try {\n      await this.cancellableAction.promise;\n      this.setState({ loading: false, error: undefined });\n\n      addNotification({\n        title: i18next.t(\"Success\"),\n        content: i18next.t(\"Quota of {{id}} was set to {{quota}} {{unit}}\", {\n          id: resource.id,\n          quota: quotaInGb || quotaSize,\n          unit: quotaInGb ? \"GB\" : \"bytes\",\n        }),\n        type: \"success\",\n      });\n      actionSuccessCallback();\n    } catch (error) {\n      if (error === \"UNMOUNTED\") return;\n\n      this.setState({\n        error: error?.response?.data?.message || error?.message,\n        loading: false,\n      });\n      console.error(error);\n    }\n  };\n\n  handleModalClose = () => {\n    const { actionCancelCallback } = this.props;\n    actionCancelCallback();\n  };\n\n  initFormValues = () => {\n    // TODO take current quota\n    return {\n      quota_size: undefined,\n      max_file_size: undefined,\n      notes: undefined,\n    };\n  };\n\n  render() {\n    const { error, loading } = this.state;\n    const { setQuotaInBytes } = this.props;\n\n    return (\n      <Formik\n        onSubmit={this.handleSubmit}\n        enableReinitialize\n        initialValues={this.initFormValues()}\n        validateOnChange={false}\n        validateOnBlur={false}\n        validationSchema={this.tombstoneSchema}\n      >\n        {({ values, handleSubmit }) => {\n          return (\n            <>\n              {error && (\n                <Modal.Content>\n                  <ErrorMessage\n                    header={i18next.t(\"Unable to set quota.\")}\n                    content={i18next.t(error)}\n                    icon=\"exclamation\"\n                    className=\"text-align-left\"\n                    negative\n                  />\n                </Modal.Content>\n              )}\n              <Modal.Content>\n                <Form className=\"full-width\">\n                  <Form.Field>\n                    <TextField\n                      required\n                      fieldPath=\"quota_size\"\n                      label={i18next.t(\"Quota size ({{unit}})\", {\n                        unit: setQuotaInBytes ? \"bytes\" : \"GB\",\n                      })}\n                      placeholder={i18next.t(\"Enter quota size...\")}\n                      type=\"number\"\n                    />\n                    <TextField\n                      required\n                      fieldPath=\"max_file_size\"\n                      label={i18next.t(\"Max file size ({{unit}})\", {\n                        unit: setQuotaInBytes ? \"bytes\" : \"GB\",\n                      })}\n                      placeholder={i18next.t(\"Enter max file size...\")}\n                      type=\"number\"\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <TextAreaField\n                      fieldPath=\"notes\"\n                      label={i18next.t(\"Note\")}\n                      fluid\n                      placeholder={i18next.t(\"Ticket 1234\")}\n                    />\n                  </Form.Field>\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button onClick={this.handleModalClose} floated=\"left\">\n                  {i18next.t(\"Close\")}\n                </Button>\n                <Button\n                  size=\"small\"\n                  labelPosition=\"left\"\n                  icon=\"check\"\n                  color=\"green\"\n                  content={i18next.t(\"Set quota\")}\n                  onClick={(event) => handleSubmit(event)}\n                  loading={loading}\n                  disabled={loading}\n                />\n              </Modal.Actions>\n            </>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nSetQuotaForm.propTypes = {\n  resource: PropTypes.object.isRequired,\n  actionSuccessCallback: PropTypes.func.isRequired,\n  actionCancelCallback: PropTypes.func.isRequired,\n  apiUrl: PropTypes.string.isRequired,\n  setQuotaInBytes: PropTypes.bool,\n};\n\nSetQuotaForm.defaultProps = {\n  setQuotaInBytes: false,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023-2024 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Icon, Checkbox } from \"semantic-ui-react\";\nimport { ActionModal } from \"@js/invenio_administration\";\nimport { SetQuotaForm } from \"./SetQuotaForm\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport class SetQuotaAction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      setQuotaInBytes: false,\n    };\n  }\n\n  onModalTriggerClick = (e, { payloadSchema, dataName, dataActionKey }) => {\n    this.setState({ modalOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalOpen: false,\n      setQuotaInBytes: false,\n    });\n  };\n\n  handleSuccess = () => {\n    const { successCallback } = this.props;\n    this.setState({ modalOpen: false });\n    successCallback();\n  };\n\n  setQuotaValueInBytes = (event, data) => {\n    const { checked } = data;\n    this.setState({ setQuotaInBytes: checked });\n  };\n\n  render() {\n    const { resource, apiUrl, headerText, isRecord } = this.props;\n    const { modalOpen, setQuotaInBytes } = this.state;\n\n    return (\n      <>\n        <Button\n          key=\"set-quota\"\n          onClick={this.onModalTriggerClick}\n          icon\n          fluid\n          basic\n          labelPosition=\"left\"\n        >\n          <Icon name=\"disk\" />\n          {i18next.t(\"Set Quota\")}\n        </Button>\n\n        <ActionModal modalOpen={modalOpen} resource={resource}>\n          <Modal.Header className=\"flex justify-space-between\">\n            <div>{headerText}</div>\n            <div>\n              <Checkbox\n                toggle\n                label={i18next.t(\"Set quota in bytes\")}\n                onChange={this.setQuotaValueInBytes}\n              />\n            </div>\n          </Modal.Header>\n          {!isRecord && (\n            <Modal.Content>\n              <p>\n                <strong>{i18next.t(\"Note\")}:</strong>{\" \"}\n                {i18next.t(\n                  \"This is the default quota that will be applied to any NEW records created by this user – it will NOT update quota of existing records.\"\n                )}\n              </p>\n            </Modal.Content>\n          )}\n          <SetQuotaForm\n            actionSuccessCallback={this.handleSuccess}\n            actionCancelCallback={this.closeModal}\n            resource={resource}\n            apiUrl={apiUrl}\n            setQuotaInBytes={setQuotaInBytes}\n          />\n        </ActionModal>\n      </>\n    );\n  }\n}\n\nSetQuotaAction.propTypes = {\n  resource: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n  apiUrl: PropTypes.string.isRequired,\n  headerText: PropTypes.string.isRequired,\n  isRecord: PropTypes.bool,\n};\n\nSetQuotaAction.defaultProps = {\n  isRecord: false,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2023 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _get from \"lodash/get\";\n\nconst APIRoutesGenerators = {\n  restore: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/restore`;\n  },\n\n  block: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/block`;\n  },\n\n  approve: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/approve`;\n  },\n\n  activate: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/activate`;\n  },\n\n  deactivate: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/deactivate`;\n  },\n\n  impersonate: (user, idKeyPath = \"id\") => {\n    return `/api/users/${_get(user, idKeyPath)}/impersonate`;\n  },\n};\nexport const APIRoutes = {\n  ...APIRoutesGenerators,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2023 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { APIRoutes } from \"./routes\";\nimport { http } from \"react-invenio-forms\";\n\nconst restoreUser = async (user) => {\n  return await http.post(APIRoutes.restore(user));\n};\n\nconst blockUser = async (user) => {\n  return await http.post(APIRoutes.block(user));\n};\n\nconst deactivateUser = async (user) => {\n  return await http.post(APIRoutes.deactivate(user));\n};\n\nconst approveUser = async (user) => {\n  return await http.post(APIRoutes.approve(user));\n};\n\nconst activateUser = async (user) => {\n  return await http.post(APIRoutes.activate(user));\n};\n\nconst impersonateUser = async (user) => {\n  return await http.post(APIRoutes.impersonate(user));\n};\n\nexport const UserModerationApi = {\n  restoreUser: restoreUser,\n  approveUser: approveUser,\n  activateUser: activateUser,\n  impersonateUser: impersonateUser,\n  deactivateUser: deactivateUser,\n  blockUser: blockUser,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { Trans } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport _get from \"lodash/get\";\n\nimport { withCancel, ErrorMessage, RadioField, ErrorLabel } from \"react-invenio-forms\";\nimport { Form, Button, Modal, Message, Icon, Checkbox } from \"semantic-ui-react\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport * as Yup from \"yup\";\nimport { UserModerationApi } from \"../users/api\";\n\nexport class ImpersonateUserForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: undefined,\n    };\n    this.confirmSchema = Yup.object({\n      acceptToLogout: Yup.bool().oneOf([true], i18next.t(\"You must accept this.\")),\n      acceptImpersonation: Yup.bool().oneOf([true], i18next.t(\"You must accept this.\")),\n    });\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleSubmit = async (values) => {\n    this.setState({ loading: true });\n    const { addNotification } = this.context;\n    const { user, actionSuccessCallback } = this.props;\n    this.cancellableAction = withCancel(UserModerationApi.impersonateUser(user));\n    try {\n      await this.cancellableAction.promise;\n      this.setState({ loading: false, error: undefined });\n      addNotification({\n        title: i18next.t(\"Success\"),\n        content: i18next.t(\n          \"User impersonated succesfully! You will be redirected in frontpage soon.\",\n          {\n            id: user.id,\n          }\n        ),\n        type: \"success\",\n      });\n      actionSuccessCallback();\n    } catch (error) {\n      if (error === \"UNMOUNTED\") return;\n\n      this.setState({\n        error: error?.response?.data?.message || error?.message,\n        loading: false,\n      });\n      console.error(error);\n    }\n  };\n\n  handleModalClose = () => {\n    const { actionCancelCallback } = this.props;\n    actionCancelCallback();\n  };\n\n  initFormValues = () => {\n    return {\n      acceptToLogout: false,\n      acceptImpersonation: false,\n    };\n  };\n\n  render() {\n    const { error, loading } = this.state;\n    const { user } = this.props;\n    console.log({ user });\n    return (\n      <Formik\n        onSubmit={this.handleSubmit}\n        enableReinitialize\n        initialValues={this.initFormValues()}\n        validateOnChange={false}\n        validateOnBlur={false}\n        validationSchema={() => this.confirmSchema}\n      >\n        {({ values, handleSubmit }) => {\n          return (\n            <>\n              {error && (\n                <ErrorMessage\n                  header={i18next.t(\"Unable to impersonate user.\")}\n                  content={i18next.t(error)}\n                  icon=\"exclamation\"\n                  className=\"text-align-left\"\n                  negative\n                />\n              )}\n\n              <Modal.Content>\n                <Message visible error>\n                  <p>\n                    <Icon name=\"warning sign\" />\n                    {i18next.t(\n                      \"Please read carefully and confirm the following statements before you proceed.\"\n                    )}\n                  </p>\n                </Message>\n                <Form>\n                  <Form.Field id=\"accept-impersonation-checkbox\">\n                    <RadioField\n                      control={Checkbox}\n                      fieldPath=\"acceptImpersonation\"\n                      label={\n                        <Trans\n                          defaults={i18next.t(\n                            \"You are about to impersonate user <bold>{{email}}(id: {{id}})</bold>.\",\n                            { email: user.email, id: user.id }\n                          )}\n                          values={{ email: user.email, id: user.id }}\n                          components={{ bold: <b /> }}\n                          shouldUnescape\n                        />\n                      }\n                      checked={_get(values, \"acceptImpersonation\") === true}\n                      onChange={({ data, formikProps }) => {\n                        formikProps.form.setFieldValue(\n                          \"acceptImpersonation\",\n                          data.checked\n                        );\n                      }}\n                      optimized\n                    />\n\n                    <ErrorLabel\n                      role=\"alert\"\n                      fieldPath=\"acceptImpersonation\"\n                      className=\"mt-0 mb-5\"\n                    />\n                  </Form.Field>\n                  <Form.Field id=\"accept-logout-checkbox\">\n                    <RadioField\n                      control={Checkbox}\n                      fieldPath=\"acceptToLogout\"\n                      label={\n                        <Trans\n                          defaults={i18next.t(\n                            \"You <bold>MUST</bold> logout after completing your inquiry.\"\n                          )}\n                          components={{ bold: <b /> }}\n                          shouldUnescape\n                        />\n                      }\n                      checked={_get(values, \"acceptToLogout\") === true}\n                      onChange={({ data, formikProps }) => {\n                        formikProps.form.setFieldValue(\"acceptToLogout\", data.checked);\n                      }}\n                      optimized\n                    />\n                    <ErrorLabel\n                      role=\"alert\"\n                      fieldPath=\"acceptToLogout\"\n                      className=\"mt-0 mb-5\"\n                    />\n                  </Form.Field>\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button onClick={this.handleModalClose} floated=\"left\">\n                  Close\n                </Button>\n                <Button\n                  size=\"small\"\n                  labelPosition=\"left\"\n                  icon=\"check\"\n                  color=\"green\"\n                  content={i18next.t(\"Impersonate\")}\n                  onClick={(event) => handleSubmit(event)}\n                  loading={loading}\n                  disabled={loading}\n                />\n              </Modal.Actions>\n            </>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nImpersonateUserForm.propTypes = {\n  user: PropTypes.object.isRequired,\n  actionSuccessCallback: PropTypes.func.isRequired,\n  actionCancelCallback: PropTypes.func.isRequired,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Icon, Dropdown } from \"semantic-ui-react\";\nimport { ActionModal } from \"@js/invenio_administration\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { ImpersonateUserForm } from \"./ImpersonateUserForm\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport class ImpersonateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    };\n  }\n\n  onModalTriggerClick = (e) => {\n    const { user } = this.props;\n\n    this.setState({\n      modalOpen: true,\n      modalHeader: i18next.t(\"Impersonate user\"),\n      modalBody: (\n        <ImpersonateUserForm\n          actionSuccessCallback={this.handleSuccess}\n          actionCancelCallback={this.closeModal}\n          user={user}\n        />\n      ),\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    });\n  };\n\n  handleSuccess = () => {\n    const { successCallback } = this.props;\n    this.setState({\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    });\n    successCallback();\n  };\n\n  render() {\n    const { user } = this.props;\n    const { modalOpen, modalHeader, modalBody } = this.state;\n    return (\n      <>\n        <Dropdown.Item\n          key=\"impersonate-user\"\n          onClick={this.onModalTriggerClick}\n          icon\n          fluid\n          basic\n          labelPosition=\"left\"\n        >\n          <Icon name=\"spy\" />\n          Impersonate\n        </Dropdown.Item>\n        <ActionModal modalOpen={modalOpen} user={user}>\n          {modalHeader && <Modal.Header>{modalHeader}</Modal.Header>}\n          {!_isEmpty(modalBody) && modalBody}\n        </ActionModal>\n      </>\n    );\n  }\n}\n\nImpersonateUser.propTypes = {\n  user: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n};\n\nImpersonateUser.defaultProps = {};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport isEmpty from \"lodash/isEmpty\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Icon, Dropdown } from \"semantic-ui-react\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport { withCancel } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { ImpersonateUser } from \"../components/ImpersonateUser\";\nimport { SetQuotaAction } from \"../components/SetQuotaAction\";\nimport { UserModerationApi } from \"./api\";\n\nexport class UserActions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false };\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleAction = async (action) => {\n    this.setState({ loading: true });\n    const { user, successCallback } = this.props;\n    const { addNotification } = this.context;\n    const name = user.profile?.full_name || user.email || user.username || user.id;\n\n    const actionConfig = {\n      restore: {\n        label: i18next.t(\"Restore\"),\n        icon: \"undo\",\n        apiFunction: UserModerationApi.restoreUser,\n        notificationTitle: i18next.t(\"Restored\"),\n      },\n      block: {\n        label: i18next.t(\"Block\"),\n        icon: \"ban\",\n        apiFunction: UserModerationApi.blockUser,\n        notificationTitle: i18next.t(\"Blocked\"),\n      },\n      deactivate: {\n        label: i18next.t(\"Suspend\"),\n        icon: \"pause\",\n        apiFunction: UserModerationApi.deactivateUser,\n        notificationTitle: i18next.t(\"Suspended\"),\n      },\n      approve: {\n        label: i18next.t(\"Approve\"),\n        icon: \"check\",\n        apiFunction: UserModerationApi.approveUser,\n        notificationTitle: i18next.t(\"Approved\"),\n      },\n      activate: {\n        label: i18next.t(\"Activate\"),\n        icon: \"check\",\n        apiFunction: UserModerationApi.activateUser,\n        notificationTitle: i18next.t(\"Activated\"),\n      },\n    }[action];\n\n    if (actionConfig) {\n      this.cancellableAction = withCancel(actionConfig.apiFunction(user));\n      const successNotification = {\n        title: actionConfig.notificationTitle,\n        content: i18next.t(\n          `User {{name}} was ${actionConfig.notificationTitle.toLowerCase()}.`,\n          {\n            name: name,\n          }\n        ),\n        type: \"success\",\n      };\n\n      try {\n        await this.cancellableAction.promise;\n        addNotification(successNotification);\n        this.setState({ loading: false });\n        successCallback();\n      } catch (e) {\n        addNotification({\n          title: i18next.t(\"Error\"),\n          content: e.toString(),\n          type: \"error\",\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      user,\n      displaySuspend,\n      displayBlock,\n      displayApprove,\n      displayRestore,\n      successCallback,\n      displayImpersonateUser,\n      displayQuota,\n      useDropdown,\n    } = this.props;\n    const { loading } = this.state;\n    const isUserBlocked = !isEmpty(user.blocked_at);\n    const isUserActive = user.active;\n    const isUserVerified = !isEmpty(user.verified_at);\n    const isUserConfirmed = !isEmpty(user.confirmed_at);\n\n    const actionItems = [\n      { key: \"approve\", label: \"Verify\", icon: \"star\" },\n      { key: \"activate\", label: \"Activate\", icon: \"check\" },\n      { key: \"restore\", label: \"Restore\", icon: \"undo\" },\n      { key: \"deactivate\", label: \"Deactivate\", icon: \"pause\" },\n      { key: \"block\", label: \"Block\", icon: \"ban\" },\n    ];\n\n    const filteredActions = actionItems.filter((actionItem) => {\n      return (\n        (actionItem.key === \"restore\" && (isUserBlocked || displayRestore)) ||\n        (actionItem.key === \"block\" && (!isUserBlocked || displayBlock)) ||\n        (actionItem.key === \"deactivate\" && (isUserActive || displaySuspend)) ||\n        (actionItem.key === \"activate\" && (!isUserActive || !isUserConfirmed)) ||\n        (actionItem.key === \"approve\" &&\n          (displayApprove || (isUserActive && !isUserVerified)))\n      );\n    });\n\n    const generateActions = () => {\n      return (\n        <>\n          {displayQuota && (\n            <SetQuotaAction\n              headerText={i18next.t(\"Set default quota for {{email}}\", {\n                email: user.email,\n              })}\n              successCallback={successCallback}\n              apiUrl={`/api/users/${user.id}/quota`}\n              resource={user}\n            />\n          )}\n          {displayImpersonateUser && (\n            <ImpersonateUser\n              successCallback={() => {\n                successCallback();\n                setTimeout(() => (window.location = \"/\"), 1000);\n              }}\n              user={user}\n            />\n          )}\n          <Dropdown.Divider />\n          {filteredActions.map((actionItem) => (\n            <Dropdown.Item\n              key={actionItem.key}\n              onClick={() => this.handleAction(actionItem.key)}\n              disabled={loading}\n              loading={loading}\n              icon\n              fluid\n              basic\n              labelPosition=\"left\"\n            >\n              <Icon name={actionItem.icon} />\n              {i18next.t(actionItem.label)}\n            </Dropdown.Item>\n          ))}\n        </>\n      );\n    };\n\n    return (\n      <div>\n        {useDropdown ? (\n          <div>\n            {isUserActive && (\n              <Button\n                key=\"block\"\n                onClick={() => this.handleAction(\"block\")}\n                disabled={loading}\n                loading={loading}\n                icon\n                labelPosition=\"left\"\n              >\n                <Icon name=\"ban\" />\n                {i18next.t(\"Block\")}\n              </Button>\n            )}\n            {!isUserActive && !isUserBlocked && (\n              <Button\n                key=\"activate\"\n                onClick={() => this.handleAction(\"activate\")}\n                disabled={loading}\n                loading={loading}\n                icon\n                labelPosition=\"left\"\n              >\n                <Icon name=\"check\" />\n                {i18next.t(\"Activate\")}\n              </Button>\n            )}\n            {isUserBlocked && (\n              <Button\n                key=\"restore\"\n                onClick={() => this.handleAction(\"restore\")}\n                disabled={loading}\n                loading={loading}\n                icon\n                labelPosition=\"left\"\n              >\n                <Icon name=\"undo\" />\n                {i18next.t(\"Restore\")}\n              </Button>\n            )}\n            <Dropdown\n              text={<Icon name=\"cog\" />}\n              tooltip={i18next.t(\"Actions\")}\n              button\n              className=\"icon\"\n              direction=\"left\"\n            >\n              <Dropdown.Menu>{generateActions()}</Dropdown.Menu>\n            </Dropdown>\n          </div>\n        ) : (\n          <Button.Group basic widths={5} compact className=\"margined\">\n            {generateActions()}\n          </Button.Group>\n        )}\n      </div>\n    );\n  }\n}\n\nUserActions.propTypes = {\n  user: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n  displayBlock: PropTypes.bool,\n  displaySuspend: PropTypes.bool,\n  displayApprove: PropTypes.bool,\n  displayRestore: PropTypes.bool,\n  displayImpersonateUser: PropTypes.bool,\n  displayQuota: PropTypes.bool,\n  useDropdown: PropTypes.bool,\n};\n\nUserActions.defaultProps = {\n  displayBlock: false,\n  displaySuspend: false,\n  displayApprove: false,\n  displayRestore: false,\n  displayImpersonateUser: false,\n  displayQuota: false,\n  useDropdown: false,\n};\n"],"names":["SetQuotaForm","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","addNotification","_this$props","resource","actionSuccessCallback","setQuotaInBytes","apiUrl","notes","quotaSize","maxFileSize","quotaInGb","_error$response","_context","prev","next","setState","loading","context","quota_size","max_file_size","Math","pow","cancellableAction","withCancel","http","post","promise","error","undefined","title","i18next","t","content","id","quota","unit","type","t0","abrupt","response","data","message","console","stop","_x","apply","arguments","actionCancelCallback","state","tombstoneSchema","Yup","required","min","_inherits","_createClass","key","value","this","cancel","_this2","_this$state","React","Formik","onSubmit","handleSubmit","enableReinitialize","initialValues","initFormValues","validateOnChange","validateOnBlur","validationSchema","_ref2","Modal","Content","ErrorMessage","header","icon","className","negative","Form","Field","TextField","fieldPath","label","placeholder","TextAreaField","fluid","Actions","Button","onClick","handleModalClose","floated","size","labelPosition","color","event","disabled","Component","NotificationContext","propTypes","PropTypes","isRequired","defaultProps","SetQuotaAction","e","payloadSchema","dataName","dataActionKey","modalOpen","successCallback","checked","headerText","isRecord","onModalTriggerClick","basic","Icon","name","ActionModal","Header","Checkbox","toggle","onChange","setQuotaValueInBytes","handleSuccess","closeModal","APIRoutes","_objectSpread","restore","user","idKeyPath","length","concat","_get","block","approve","activate","deactivate","impersonate","restoreUser","sent","blockUser","_callee2","_context2","_x2","deactivateUser","_ref3","_callee3","_context3","_x3","UserModerationApi","approveUser","_ref4","_callee4","_context4","_x4","activateUser","_ref5","_callee5","_context5","_x5","impersonateUser","_ref6","_callee6","_context6","_x6","ImpersonateUserForm","acceptToLogout","acceptImpersonation","confirmSchema","oneOf","log","Message","visible","RadioField","control","Trans","defaults","email","components","bold","shouldUnescape","formikProps","form","setFieldValue","optimized","ErrorLabel","role","ImpersonateUser","modalHeader","modalBody","Dropdown","Item","_isEmpty","UserActions","action","_user$profile","actionConfig","successNotification","profile","full_name","username","apiFunction","notificationTitle","toLowerCase","toString","_this$props2","displaySuspend","displayBlock","displayApprove","displayRestore","displayImpersonateUser","displayQuota","useDropdown","isUserBlocked","isEmpty","blocked_at","isUserActive","active","isUserVerified","verified_at","isUserConfirmed","confirmed_at","filteredActions","filter","actionItem","generateActions","setTimeout","window","location","Divider","map","handleAction","text","tooltip","button","direction","Menu","Group","widths","compact"],"sourceRoot":""}