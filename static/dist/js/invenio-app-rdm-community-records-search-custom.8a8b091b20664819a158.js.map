{"version":3,"file":"js/invenio-app-rdm-community-records-search-custom.8a8b091b20664819a158.js","mappings":"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","sources":["webpack://invenio-assets/./js/collections/communityRecordsSearch/CommunityRecordsSearchAppLayout.js","webpack://invenio-assets/./js/collections/communityRecordsSearch/CommunityRecordsSingleSearchBarElement.js","webpack://invenio-assets/./js/collections/communityRecordsSearch/CommunityRecordsSearchBarElement.js","webpack://invenio-assets/./js/collections/communityRecordsSearch/CommunityRecordsSearchEmptyResults.js","webpack://invenio-assets/./js/collections/communityRecordsSearch/index.js"],"sourcesContent":["import {\n  SearchAppFacets,\n  SearchAppResultsPane,\n  SearchBar,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React, { useContext } from \"react\";\nimport { Count, Sort, buildUID } from \"react-searchkit\";\nimport { Button, Container, Grid } from \"semantic-ui-react\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\nimport { SearchConfigurationContext } from \"@js/invenio_search_ui/components/context\";\n\nexport const CommunityRecordsSearchAppLayout = ({ config, appName }) => {\n  const [sidebarVisible, setSidebarVisible] = React.useState(false);\n\n  const context = useContext(SearchConfigurationContext);\n  console.log(\"CommunitiesSearchLayout\", config, appName, context);\n  console.log(\"CommunityRecordsSearchAppLayout\", config, appName);\n\n  return (\n    <Container className=\"rel-pt-2\">\n      <Grid>\n        <Grid.Column only=\"mobile tablet\" mobile={2} tablet={1}>\n          <Button\n            basic\n            icon=\"sliders\"\n            onClick={() => setSidebarVisible(true)}\n            aria-label={i18next.t(\"Filter results\")}\n          />\n        </Grid.Column>\n\n        <Grid.Column mobile={14} tablet={14} computer={12} floated=\"left\">\n          <Grid>\n            <Grid.Column width={16}>\n              <SearchBar buildUID={buildUID} placeholder={i18next.t(\"Search records in collection...\")} />\n            </Grid.Column>\n\n            <Grid.Column width={4} textAlign=\"left\">\n              <Count\n                label={(cmp) => (\n                  <Trans key=\"communityRecordsSearch\" count={cmp}>\n                    {cmp} results found\n                  </Trans>\n                )}\n              />\n            </Grid.Column>\n            <Grid.Column width={12} textAlign=\"right\">\n              <Sort\n                values={config.sortOptions}\n                label={(cmp) => (\n                  <>\n                    <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                    {cmp}\n                  </>\n                )}\n              />\n            </Grid.Column>\n          </Grid>\n        </Grid.Column>\n\n        <Grid.Row>\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n            // eslint-disable-next-line react/no-children-prop\n            children={<SearchAppFacets aggs={config.aggs} appName={appName} />}\n            computer={4}\n            largeScreen={4}\n            widescreen={4}\n          />\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nCommunityRecordsSearchAppLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nCommunityRecordsSearchAppLayout.defaultProps = {\n  appName: \"\",\n};\n","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Input } from \"semantic-ui-react\";\n\nexport const CommunityRecordsSingleSearchBarElement = withState(\n  ({\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    updateQueryState,\n  }) => {\n    const placeholder = passedPlaceholder || i18next.t(\"Search\");\n    const onBtnSearchClick = () => {\n      updateQueryState({ queryString, filters: [] });\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        updateQueryState({ queryString, filters: [] });\n      }\n    };\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    );\n  }\n);\n","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { MultipleOptionsSearchBarRSK } from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CommunityRecordsSingleSearchBarElement } from \"./CommunityRecordsSingleSearchBarElement\";\n\nexport const CommunityRecordsSearchBarElement = ({ queryString, onInputChange }) => {\n  // const headerSearchbar = document.getElementById(\"header-search-bar\");\n  // const searchbarOptions = headerSearchbar.dataset.options\n  //   ? JSON.parse(headerSearchbar.dataset.options)\n  //   : [];\n\n  // if (!_isEmpty(searchbarOptions)) {\n  //   return (\n  //     <MultipleOptionsSearchBarRSK\n  //       options={searchbarOptions}\n  //       onInputChange={onInputChange}\n  //       queryString={queryString}\n  //       placeholder={i18next.t(\"Search records...\")}\n  //     />\n  //   );\n  // } else {\n    // backwards compatibility\n    return (\n      <CommunityRecordsSingleSearchBarElement\n        placeholder={i18next.t(\"Search collection records...\")}\n        queryString={queryString}\n        onInputChange={onInputChange}\n      />\n    );\n  // }\n};\n\nCommunityRecordsSearchBarElement.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\n\nconst CommunityRecordsSearchEmptyResults = ({ queryString, searchPath, resetQuery }) => {\n  return (\n    <Grid>\n      <Grid.Row centered>\n        <Grid.Column width={12} textAlign=\"center\">\n          <Header as=\"h2\">\n            {i18next.t(\"This collection does not yet include any works you can view\")}\n          </Header>\n        </Grid.Column>\n      </Grid.Row>\n      {/* <Grid.Row centered>\n        <Grid.Column width={8} textAlign=\"center\">\n          <Button primary onClick={resetQuery}>\n            <Icon name=\"search\" />\n            {i18next.t(\"Start over\")}\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column width={12}>\n          <Segment secondary padded size=\"large\">\n            <Header as=\"h3\" size=\"small\">\n              {i18next.t(\"ProTip\")}!\n            </Header>\n            <Trans>\n              <p>\n                <a href={`${searchPath}?q=metadata.publication_date:[2017-01-01 TO *]`}>\n                  metadata.publication_date:[2017-01-01 TO *]\n                </a>{\" \"}\n                will give you all the publications from 2017 until today.\n              </p>\n            </Trans>\n            <Trans>\n              <p>\n                For more tips, check out our{\" \"}\n                <a href=\"/help/search\" title={i18next.t(\"Search guide\")}>\n                  search guide\n                </a>{\" \"}\n                for defining advanced search queries.\n              </p>\n            </Trans>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row> */}\n    </Grid>\n  );\n};\n\nCommunityRecordsSearchEmptyResults.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  resetQuery: PropTypes.func.isRequired,\n  searchPath: PropTypes.string,\n};\n\nCommunityRecordsSearchEmptyResults.defaultProps = {\n  searchPath: \"/search\",\n};\n\nexport { CommunityRecordsSearchEmptyResults };","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport {\n  RDMCountComponent,\n  RDMEmptyResults,\n  RDMErrorComponent,\n  RDMRecordResultsGridItem,\n  RDMToggleComponent,\n} from \"@js/invenio_app_rdm/search/components\";\nimport RecordsResultsListItem from \"@js/invenio_app_rdm/components/RecordsResultsListItem\";\nimport {\n  CommunityRecordsSearchAppLayout,\n  CommunityRecordsSearchBarElement,\n  CommunityRecordsSearchEmptyResults,\n} from \"./components\";\nimport { parametrize, overrideStore } from \"react-overridable\";\nimport {\n  ContribSearchAppFacets,\n  ContribBucketAggregationElement,\n  ContribBucketAggregationValuesElement,\n} from \"@js/invenio_search_ui/components\";\n\nconst appName = \"InvenioCommunities.DetailsSearch\";\n\nconst ContribSearchAppFacetsWithConfig = parametrize(ContribSearchAppFacets, {\n  toggle: true,\n});\n\nconst CommunityRecordSearchAppLayoutWAppName = parametrize(\n  CommunityRecordsSearchAppLayout,\n  {\n    appName: appName,\n  }\n);\n\nconst defaultComponents = {\n  [`${appName}.BucketAggregation.element`]: ContribBucketAggregationElement,\n  [`${appName}.BucketAggregationValues.element`]: ContribBucketAggregationValuesElement,\n  [`${appName}.ResultsGrid.item`]: RDMRecordResultsGridItem,\n  [`${appName}.EmptyResults.element`]: CommunityRecordsSearchEmptyResults,\n  [`${appName}.ResultsList.item`]: RecordsResultsListItem,\n  [`${appName}.SearchApp.facets`]: ContribSearchAppFacetsWithConfig,\n  [`${appName}.SearchApp.layout`]: CommunityRecordSearchAppLayoutWAppName,\n  [`${appName}.SearchBar.element`]: CommunityRecordsSearchBarElement,\n  [`${appName}.Count.element`]: RDMCountComponent,\n  [`${appName}.Error.element`]: RDMErrorComponent,\n  [`${appName}.SearchFilters.Toggle.element`]: RDMToggleComponent,\n};\n\nconst overriddenComponents = overrideStore.getAll();\n\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true\n);\n"],"names":["CommunityRecordsSearchAppLayout","_ref","config","appName","_React$useState","React","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","context","useContext","SearchConfigurationContext","console","log","Container","className","Grid","Column","only","mobile","tablet","Button","basic","icon","onClick","i18next","t","computer","floated","width","SearchBar","buildUID","placeholder","textAlign","Count","label","cmp","Trans","key","count","Sort","values","sortOptions","Row","SearchAppResultsPane","layoutOptions","GridResponsiveSidebarColumn","open","onHideClick","children","SearchAppFacets","aggs","largeScreen","widescreen","propTypes","PropTypes","isRequired","defaultProps","CommunityRecordsSingleSearchBarElement","withState","passedPlaceholder","queryString","onInputChange","updateQueryState","Input","action","filters","fluid","onChange","event","_ref2","value","onKeyPress","CommunityRecordsSearchBarElement","CommunityRecordsSearchEmptyResults","searchPath","resetQuery","centered","Header","as","string","func","ContribSearchAppFacetsWithConfig","parametrize","ContribSearchAppFacets","toggle","CommunityRecordSearchAppLayoutWAppName","defaultComponents","_defaultComponents","_defineProperty","concat","ContribBucketAggregationElement","ContribBucketAggregationValuesElement","RDMRecordResultsGridItem","RecordsResultsListItem","RDMCountComponent","RDMErrorComponent","RDMToggleComponent","overriddenComponents","overrideStore","getAll","createSearchAppInit","_objectSpread"],"sourceRoot":""}