{"version":3,"file":"js/invenio-app-rdm-user-communities-custom.a57e4cff2c924edd4d18.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/utils.js","webpack://invenio-assets/./js/invenio_app_rdm_custom/components/CompactStats.js","webpack://invenio-assets/./js/invenio_app_rdm_custom/components/RecordsResultsListItem.js","webpack://invenio-assets/./js/invenio_app_rdm_custom/search/components.js","webpack://invenio-assets/./js/invenio_app_rdm_custom/user_dashboard/base.js","webpack://invenio-assets/./js/invenio_app_rdm_custom/user_dashboard/communities.js"],"sourcesContent":["// This file is part of InvenioRDM\n// Copyright (C) 2021 CERN.\n// Copyright (C) 2021 New York University.\n// Copyright (C) 2022 data-futures.\n// Copyright (C) 2023 Northwestern University.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { DateTime } from \"luxon\";\n\nexport function SearchItemCreators({ creators, className, othersLink }) {\n  let spanClass = \"creatibutor-wrap separated\";\n  className && (spanClass += ` ${className}`);\n\n  function makeIcon(scheme, identifier, name) {\n    let link = null;\n    let linkTitle = null;\n    let icon = null;\n    let alt = \"\";\n\n    switch (scheme) {\n      case \"orcid\":\n        link = `https://orcid.org/${identifier}`;\n        linkTitle = i18next.t(\"ORCID profile\");\n        icon = \"/static/images/orcid.svg\";\n        alt = \"ORCID logo\";\n        break;\n      case \"ror\":\n        link = `https://ror.org/${identifier}`;\n        linkTitle = i18next.t(\"ROR profile\");\n        icon = \"/static/images/ror-icon.svg\";\n        alt = \"ROR logo\";\n        break;\n      case \"gnd\":\n        link = `https://d-nb.info/gnd/${identifier}`;\n        linkTitle = i18next.t(\"GND profile\");\n        icon = \"/static/images/gnd-icon.svg\";\n        alt = \"GND logo\";\n        break;\n      default:\n        return null;\n    }\n\n    icon = (\n      <a\n        className=\"no-text-decoration mr-0\"\n        href={link}\n        aria-label={`${name}: ${linkTitle}`}\n        title={`${name}: ${linkTitle}`}\n        key={scheme}\n      >\n        <img className=\"inline-id-icon ml-5\" src={icon} alt={alt} />\n      </a>\n    );\n    return icon;\n  }\n\n  function getIcons(creator) {\n    let ids = _get(creator, \"person_or_org.identifiers\", []);\n    let creatorName = _get(creator, \"person_or_org.name\", \"No name\");\n    let icons = ids.map((c) => makeIcon(c.scheme, c.identifier, creatorName));\n    return icons;\n  }\n\n  function getLink(creator) {\n    let creatorName = _get(creator, \"person_or_org.name\", \"No name\");\n    let link = (\n      <a\n        className=\"creatibutor-link\"\n        href={`/search?q=metadata.creators.person_or_org.name:\"${creatorName}\"`}\n        title={`${creatorName}: ${i18next.t(\"Search\")}`}\n      >\n        <span className=\"creatibutor-name\">{creatorName}</span>\n      </a>\n    );\n    return link;\n  }\n\n  const numDisplayed = 3;\n  const result = creators.slice(0, numDisplayed).map((creator) => (\n    <span className={spanClass} key={creator.person_or_org.name}>\n      {getLink(creator)}\n      {getIcons(creator)}\n    </span>\n  ));\n\n  const numExtra = creators.length - numDisplayed;\n  if (0 < numExtra) {\n    let text;\n    if (numExtra === 1) {\n      text = \"and {{count}} other\";\n    } else {\n      text = \"and {{count}} others\";\n    }\n    result.push(\n      <span className={spanClass} key={text}>\n        <a className=\"creatibutor-link\" href={othersLink}>\n          <span className=\"creatibutor-name\">\n            {i18next.t(text, { count: numExtra })}\n          </span>\n        </a>\n      </span>\n    );\n  }\n\n  return result;\n}\n\n/**\n * Returns a human readable timestamp in the format \"4 days ago\".\n *\n * @param {Date} timestamp\n * @returns string\n */\nexport const timestampToRelativeTime = (timestamp) =>\n  DateTime.fromISO(timestamp).setLocale(i18next.language).toRelative();\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Icon, Label, Popup } from \"semantic-ui-react\";\n\nexport const CompactStats = ({ uniqueViews, uniqueDownloads }) => {\n  return (\n    <>\n      {uniqueViews != null && (\n        <Popup\n          size=\"tiny\"\n          content={i18next.t(\"Views\")}\n          trigger={\n            <Label className=\"transparent\">\n              <Icon name=\"eye\" />\n              {uniqueViews}\n            </Label>\n          }\n        />\n      )}\n      {uniqueDownloads != null && (\n        <Popup\n          size=\"tiny\"\n          content={i18next.t(\"Downloads\")}\n          trigger={\n            <Label className=\"transparent\">\n              <Icon name=\"download\" />\n              {uniqueDownloads}\n            </Label>\n          }\n        />\n      )}\n    </>\n  );\n};\n\nCompactStats.propTypes = {\n  uniqueViews: PropTypes.number,\n  uniqueDownloads: PropTypes.number,\n};\n\nCompactStats.defaultProps = {\n  uniqueViews: null,\n  uniqueDownloads: null,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _get from \"lodash/get\";\nimport _truncate from \"lodash/truncate\";\nimport React, { Component } from \"react\";\nimport Overridable from \"react-overridable\";\nimport { SearchItemCreators } from \"@js/invenio_app_rdm/utils\";\nimport PropTypes from \"prop-types\";\nimport { Item, Label, Icon } from \"semantic-ui-react\";\nimport { buildUID } from \"react-searchkit\";\nimport { CompactStats } from \"./CompactStats\";\n\nclass RecordsResultsListItem extends Component {\n  render() {\n    const { currentQueryState, result, key, appName } = this.props;\n\n    const accessStatusId = _get(result, \"ui.access_status.id\", \"open\");\n    const accessStatus = _get(result, \"ui.access_status.title_l10n\", \"Open\");\n    const accessStatusIcon = _get(result, \"ui.access_status.icon\", \"unlock\");\n    const createdDate = _get(\n      result,\n      \"ui.created_date_l10n_long\",\n      \"No creation date found.\"\n    );\n\n    const creators = result.ui.creators.creators;\n\n    const descriptionStripped = _get(\n      result,\n      \"ui.description_stripped\",\n      \"No description\"\n    );\n\n    const publicationDate = _get(\n      result,\n      \"ui.publication_date_l10n_long\",\n      \"No publication date found.\"\n    );\n    const resourceType = _get(\n      result,\n      \"ui.resource_type.title_l10n\",\n      \"No resource type\"\n    );\n    const subjects = _get(result, \"ui.subjects\", []);\n    const title = _get(result, \"metadata.title\", \"No title\");\n    const version = _get(result, \"ui.version\", null);\n    const versions = _get(result, \"versions\");\n    const uniqueViews = _get(result, \"stats.all_versions.unique_views\", 0);\n    const uniqueDownloads = _get(result, \"stats.all_versions.unique_downloads\", 0);\n\n    const publishingInformation = _get(result, \"ui.publishing_information.journal\", \"\");\n\n    const filters = currentQueryState && Object.fromEntries(currentQueryState.filters);\n    const allVersionsVisible = filters?.allversions;\n    const numOtherVersions = versions.index - 1;\n\n    // Derivatives\n    const viewLink = `/records/${result.id}`;\n    return (\n      <Overridable\n        id={buildUID(\"RecordsResultsListItem.layout\", \"\", appName)}\n        result={result}\n        key={key}\n        accessStatusId={accessStatusId}\n        accessStatus={accessStatus}\n        accessStatusIcon={accessStatusIcon}\n        createdDate={createdDate}\n        creators={creators}\n        descriptionStripped={descriptionStripped}\n        publicationDate={publicationDate}\n        resourceType={resourceType}\n        subjects={subjects}\n        title={title}\n        version={version}\n        versions={versions}\n        allVersionsVisible={allVersionsVisible}\n        numOtherVersions={numOtherVersions}\n      >\n        <Item key={key ?? result.id}>\n          <Item.Content>\n            <Item.Extra className=\"labels-actions\">\n              <Label horizontal size=\"small\" className=\"primary\">\n                {publicationDate} ({version})\n              </Label>\n              <Label horizontal size=\"small\" className=\"neutral\">\n                {resourceType}\n              </Label>\n              <Label\n                horizontal\n                size=\"small\"\n                className={`access-status ${accessStatusId}`}\n              >\n                {accessStatusIcon && <Icon name={accessStatusIcon} />}\n                {accessStatus}\n              </Label>\n            </Item.Extra>\n            <Item.Header as=\"h2\">\n              <a href={viewLink}>{title}</a>\n            </Item.Header>\n            <Item className=\"creatibutors\">\n              <SearchItemCreators creators={creators} othersLink={viewLink} />\n            </Item>\n            <Item.Description>\n              {_truncate(descriptionStripped, { length: 350 })}\n            </Item.Description>\n            <Item.Extra>\n              {subjects.map((subject) => (\n                <Label key={subject.title_l10n} size=\"tiny\">\n                  {subject.title_l10n}\n                </Label>\n              ))}\n\n              <div className=\"flex justify-space-between align-items-end\">\n                <small>\n                  <p>\n                    {createdDate && (\n                      <>\n                        {i18next.t(\"Uploaded on {{uploadDate}}\", {\n                          uploadDate: createdDate,\n                        })}\n                      </>\n                    )}\n                    {createdDate && publishingInformation && \" | \"}\n\n                    {publishingInformation && (\n                      <>\n                        {i18next.t(\"Published in: {{publishInfo}}\", {\n                          publishInfo: publishingInformation,\n                        })}\n                      </>\n                    )}\n                  </p>\n\n                  {!allVersionsVisible && versions.index > 1 && (\n                    <p>\n                      <b>\n                        {i18next.t(\"{{count}} more versions exist for this record\", {\n                          count: numOtherVersions,\n                        })}\n                      </b>\n                    </p>\n                  )}\n                </small>\n\n                <small>\n                  <CompactStats\n                    uniqueViews={uniqueViews}\n                    uniqueDownloads={uniqueDownloads}\n                  />\n                </small>\n              </div>\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      </Overridable>\n    );\n  }\n}\n\nRecordsResultsListItem.propTypes = {\n  currentQueryState: PropTypes.object,\n  result: PropTypes.object.isRequired,\n  key: PropTypes.string,\n  appName: PropTypes.string,\n};\n\nRecordsResultsListItem.defaultProps = {\n  key: null,\n  currentQueryState: null,\n  appName: \"\",\n};\n\nexport default Overridable.component(\"RecordsResultsListItem\", RecordsResultsListItem);\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021-2022 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  SearchBar,\n  MultipleOptionsSearchBarRSK,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _get from \"lodash/get\";\nimport _truncate from \"lodash/truncate\";\nimport React from \"react\";\nimport Overridable from \"react-overridable\";\nimport { withState, buildUID } from \"react-searchkit\";\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Label,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport RecordsResultsListItem from \"../components/RecordsResultsListItem\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\n\nexport const RDMRecordResultsListItemWithState = withState(\n  ({ currentQueryState, result, appName }) => (\n    <RecordsResultsListItem\n      currentQueryState={currentQueryState}\n      result={result}\n      appName={appName}\n    />\n  )\n);\n\nRDMRecordResultsListItemWithState.propTypes = {\n  currentQueryState: PropTypes.object,\n  result: PropTypes.object.isRequired,\n};\n\nRDMRecordResultsListItemWithState.defaultProps = {\n  currentQueryState: null,\n};\n\n// TODO: Update this according to the full List item template?\nexport const RDMRecordResultsGridItem = ({ result }) => {\n  const descriptionStripped = _get(result, \"ui.description_stripped\", \"No description\");\n  return (\n    <Card fluid href={`/records/${result.pid}`}>\n      <Card.Content>\n        <Card.Header>{result.metadata.title}</Card.Header>\n        <Card.Description>\n          {_truncate(descriptionStripped, { length: 200 })}\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nRDMRecordResultsGridItem.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n\nexport const RDMRecordSearchBarContainer = ({ appName }) => {\n  return (\n    <Overridable id={buildUID(\"SearchApp.searchbar\", \"\", appName)}>\n      <SearchBar />\n    </Overridable>\n  );\n};\n\nRDMRecordSearchBarContainer.propTypes = {\n  appName: PropTypes.string.isRequired,\n};\n\nexport const RDMRecordMultipleSearchBarElement = ({ queryString, onInputChange }) => {\n  const headerSearchbar = document.getElementById(\"header-search-bar\");\n  const searchbarOptions = JSON.parse(headerSearchbar.dataset.options);\n\n  return (\n    <MultipleOptionsSearchBarRSK\n      options={searchbarOptions}\n      onInputChange={onInputChange}\n      queryString={queryString}\n      placeholder={i18next.t(\"Search records...\")}\n    />\n  );\n};\n\nRDMRecordMultipleSearchBarElement.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport const RDMRecordSearchBarElement = withState(\n  ({\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    updateQueryState,\n    currentQueryState,\n  }) => {\n    const placeholder = passedPlaceholder || i18next.t(\"Search\");\n\n    const onSearch = () => {\n      updateQueryState({ ...currentQueryState, queryString });\n    };\n\n    const onBtnSearchClick = () => {\n      onSearch();\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        onSearch();\n      }\n    };\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        aria-label={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    );\n  }\n);\n\nexport const RDMToggleComponent = ({\n  updateQueryFilters,\n  userSelectionFilters,\n  filterValue,\n  label,\n  title,\n}) => {\n  const _isChecked = (userSelectionFilters) => {\n    const isFilterActive =\n      userSelectionFilters.filter((filter) => filter[0] === filterValue[0]).length > 0;\n    return isFilterActive;\n  };\n\n  const onToggleClicked = () => {\n    updateQueryFilters(filterValue);\n  };\n\n  var isChecked = _isChecked(userSelectionFilters);\n  return (\n    <Card className=\"borderless facet\">\n      <Card.Content>\n        <Card.Header as=\"h2\">{title}</Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Checkbox\n          toggle\n          label={<label aria-hidden=\"true\">{label}</label>}\n          name=\"versions-toggle\"\n          aria-label={label}\n          onClick={onToggleClicked}\n          checked={isChecked}\n        />\n      </Card.Content>\n    </Card>\n  );\n};\n\nRDMToggleComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  filterValue: PropTypes.array.isRequired,\n  userSelectionFilters: PropTypes.array.isRequired,\n  updateQueryFilters: PropTypes.func.isRequired,\n};\n\nexport const RDMCountComponent = ({ totalResults }) => {\n  return <Label>{totalResults.toLocaleString(\"en-US\")}</Label>;\n};\n\nRDMCountComponent.propTypes = {\n  totalResults: PropTypes.number.isRequired,\n};\n\nexport const RDMEmptyResults = ({ queryString, searchPath, resetQuery }) => {\n  return (\n    <Grid>\n      <Grid.Row centered>\n        <Grid.Column width={12} textAlign=\"center\">\n          <Header as=\"h2\">\n            {i18next.t(\"We couldn't find any matches for {{- search}}\", {\n              search: (queryString && `'${queryString}'`) || \"your search\",\n            })}\n          </Header>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column width={8} textAlign=\"center\">\n          <Button primary onClick={resetQuery}>\n            <Icon name=\"search\" />\n            {i18next.t(\"Start over\")}\n          </Button>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row centered>\n        <Grid.Column width={12}>\n          <Segment secondary padded size=\"large\">\n            <Header as=\"h3\" size=\"small\">\n              {i18next.t(\"ProTip\")}!\n            </Header>\n            <Trans>\n              <p>\n                <a href={`${searchPath}?q=metadata.publication_date:[2017-01-01 TO *]`}>\n                  metadata.publication_date:[2017-01-01 TO *]\n                </a>{\" \"}\n                will give you all the publications from 2017 until today.\n              </p>\n            </Trans>\n            <Trans>\n              <p>\n                For more tips, check out our{\" \"}\n                <a href=\"/help/search\" title={i18next.t(\"Search guide\")}>\n                  search guide\n                </a>{\" \"}\n                for defining advanced search queries.\n              </p>\n            </Trans>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nRDMEmptyResults.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  resetQuery: PropTypes.func.isRequired,\n  searchPath: PropTypes.string,\n};\n\nRDMEmptyResults.defaultProps = {\n  searchPath: \"/search\",\n};\n\nexport const RDMErrorComponent = ({ error }) => {\n  return <Message error content={error.response.data.message} icon=\"warning sign\" />;\n};\n\nRDMErrorComponent.propTypes = {\n  error: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  SearchAppFacets,\n  SearchAppResultsPane,\n  InvenioSearchPagination,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport { ResultsList, SearchBar, Sort, buildUID } from \"react-searchkit\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\n\nexport function DashboardResultView(props) {\n  const { sortOptions, paginationOptions, currentResultsState, appName } = props;\n  const { total } = currentResultsState.data;\n  return (\n    total && (\n      <Grid>\n        <Overridable\n          id={buildUID(\"ResultView.resultList\", \"\", appName)}\n          sortOptions={sortOptions}\n          paginationOptions={paginationOptions}\n          currentResultsState={currentResultsState}\n          appName={appName}\n        >\n          <Grid.Row>\n            <Grid.Column>\n              <ResultsList />\n            </Grid.Column>\n          </Grid.Row>\n        </Overridable>\n\n        <Overridable\n          id={buildUID(\"ResultView.resultFooter\", \"\", appName)}\n          sortOptions={sortOptions}\n          paginationOptions={paginationOptions}\n          currentResultsState={currentResultsState}\n          appName={appName}\n        >\n          <InvenioSearchPagination\n            total={total}\n            paginationOptions={paginationOptions}\n          />\n        </Overridable>\n      </Grid>\n    )\n  );\n}\n\nDashboardResultView.propTypes = {\n  sortOptions: PropTypes.array.isRequired,\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nDashboardResultView.defaultProps = {\n  appName: \"\",\n};\n\nexport const DashboardSearchLayoutHOC = ({\n  searchBarPlaceholder = \"\",\n  appName = undefined,\n}) => {\n  const DashboardUploadsSearchLayout = (props) => {\n    const [sidebarVisible, setSidebarVisible] = React.useState(false);\n    const { config } = props;\n\n    return (\n      <Grid>\n        <Overridable\n          id={buildUID(\"SearchLayout.searchHeader\", \"\", appName)}\n          sortOptions={config.sortOptions}\n          appName={appName}\n        >\n          <>\n            {/* Mobile/tablet search header */}\n            <Grid.Row className=\"mobile tablet only\">\n              <Grid.Column mobile={2} tablet={1} verticalAlign=\"middle\">\n                <Button\n                  basic\n                  icon=\"sliders\"\n                  onClick={() => setSidebarVisible(true)}\n                  aria-label={i18next.t(\"Filter results\")}\n                />\n              </Grid.Column>\n              <Grid.Column\n                mobile={14}\n                tablet={10}\n                verticalAlign=\"middle\"\n                floated=\"right\"\n              >\n                <SearchBar placeholder={searchBarPlaceholder} />\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row className=\"mobile tablet only\">\n              <Grid.Column width={16} textAlign=\"right\">\n                {config.sortOptions && (\n                  <Sort\n                    values={config.sortOptions}\n                    label={(cmp) => (\n                      <>\n                        <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                        {cmp}\n                      </>\n                    )}\n                  />\n                )}\n              </Grid.Column>\n            </Grid.Row>\n            {/* End mobile/tablet search header */}\n\n            {/* Desktop search header */}\n            <Grid.Row className=\"computer only\">\n              <Grid.Column width={8} floated=\"right\">\n                <SearchBar placeholder={searchBarPlaceholder} />\n              </Grid.Column>\n\n              <Grid.Column width={4} textAlign=\"right\">\n                {config.sortOptions && (\n                  <Sort\n                    values={config.sortOptions}\n                    label={(cmp) => (\n                      <>\n                        <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                        {cmp}\n                      </>\n                    )}\n                  />\n                )}\n              </Grid.Column>\n            </Grid.Row>\n            {/* End desktop search header */}\n          </>\n        </Overridable>\n\n        <Grid.Row>\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n          >\n            <SearchAppFacets aggs={config.aggs} appName={appName} />\n          </GridResponsiveSidebarColumn>\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  };\n\n  DashboardUploadsSearchLayout.propTypes = {\n    config: PropTypes.object.isRequired,\n  };\n\n  return DashboardUploadsSearchLayout;\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2021 New York University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport {\n  ResultsGridItemTemplate,\n  CommunitiesEmptySearchResults,\n} from \"../../collections/community/searchComponents\";\nimport { CommunityItem } from \"../../collections/community/communitiesItems/CommunityItem\";\nimport { RDMRecordSearchBarElement } from \"../search/components\";\nimport { DashboardResultView, DashboardSearchLayoutHOC } from \"./base\";\nimport {\n  ContribSearchAppFacets,\n  ContribBucketAggregationElement,\n  ContribBucketAggregationValuesElement,\n} from \"@js/invenio_search_ui/components\";\nimport { overrideStore, parametrize } from \"react-overridable\";\n\nexport const appName = \"InvenioAppRdm.DashboardCommunities\";\n\nexport const DashboardCommunitiesSearchLayout = DashboardSearchLayoutHOC({\n  searchBarPlaceholder: i18next.t(\"Search in my collections...\"),\n  appName: appName,\n});\n\nconst DashboardResultViewWAppName = parametrize(DashboardResultView, {\n  appName: appName,\n});\n\nexport const defaultComponents = {\n  [`${appName}.BucketAggregation.element`]: ContribBucketAggregationElement,\n  [`${appName}.BucketAggregationValues.element`]: ContribBucketAggregationValuesElement,\n  [`${appName}.EmptyResults.element`]: CommunitiesEmptySearchResults,\n  [`${appName}.SearchApp.facets`]: ContribSearchAppFacets,\n  [`${appName}.ResultsList.item`]: CommunityItem,\n  [`${appName}.ResultsGrid.item`]: ResultsGridItemTemplate,\n  [`${appName}.SearchApp.layout`]: DashboardCommunitiesSearchLayout,\n  [`${appName}.SearchApp.results`]: DashboardResultViewWAppName,\n  [`${appName}.SearchBar.element`]: RDMRecordSearchBarElement,\n};\nconst overriddenComponents = overrideStore.getAll();\n\nconsole.log(\"communities.js\");\n\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true\n);\n"],"names":["SearchItemCreators","_ref","creators","className","othersLink","spanClass","getIcons","creator","ids","_get","creatorName","map","c","scheme","identifier","name","link","linkTitle","icon","alt","concat","i18next","t","React","href","title","key","src","makeIcon","text","result","slice","person_or_org","getLink","numExtra","length","push","count","timestampToRelativeTime","timestamp","DateTime","fromISO","setLocale","language","toRelative","CompactStats","uniqueViews","uniqueDownloads","Popup","size","content","trigger","Label","Icon","propTypes","PropTypes","defaultProps","RecordsResultsListItem","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","value","_this$props","this","props","currentQueryState","appName","accessStatusId","accessStatus","accessStatusIcon","createdDate","ui","descriptionStripped","publicationDate","resourceType","subjects","version","versions","publishingInformation","filters","Object","fromEntries","allVersionsVisible","allversions","numOtherVersions","index","viewLink","id","Overridable","buildUID","Item","Content","Extra","horizontal","Header","as","Description","_truncate","subject","title_l10n","uploadDate","publishInfo","Component","isRequired","component","RDMRecordResultsListItemWithState","withState","RDMRecordSearchBarElement","_ref5","passedPlaceholder","placeholder","queryString","onInputChange","updateQueryState","onSearch","_objectSpread","Input","action","fluid","onChange","event","_ref6","onKeyPress","RDMEmptyResults","_ref9","searchPath","resetQuery","Grid","Row","centered","Column","width","textAlign","search","Button","primary","onClick","Segment","secondary","padded","Trans","DashboardResultView","sortOptions","paginationOptions","currentResultsState","total","data","ResultsList","InvenioSearchPagination","DashboardCommunitiesSearchLayout","_ref$searchBarPlaceho","searchBarPlaceholder","_ref$appName","undefined","DashboardUploadsSearchLayout","_React$useState","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","config","mobile","tablet","verticalAlign","basic","floated","SearchBar","Sort","values","label","cmp","GridResponsiveSidebarColumn","open","onHideClick","SearchAppFacets","aggs","computer","SearchAppResultsPane","layoutOptions","DashboardSearchLayoutHOC","DashboardResultViewWAppName","parametrize","defaultComponents","_defineProperty","ContribBucketAggregationElement","ContribBucketAggregationValuesElement","CommunitiesEmptySearchResults","ContribSearchAppFacets","CommunityItem","ResultsGridItemTemplate","overriddenComponents","overrideStore","getAll","console","log","createSearchAppInit"],"sourceRoot":""}