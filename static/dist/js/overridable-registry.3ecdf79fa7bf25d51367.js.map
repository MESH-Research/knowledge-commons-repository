{"version":3,"file":"js/overridable-registry.3ecdf79fa7bf25d51367.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/ProtectionButtons.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/MetadataAccess.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/FilesAccess.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/EmbargoDateField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/EmbargoAccess.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/access_rights_components/AccessMessage.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/AccessRightField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/AffiliationsField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/CreatibutorsIdentifiers.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/types.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/CreatibutorsModal.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/CreatibutorsFieldItem.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/CreatibutorsField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/AdditionalDescriptionsField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/DescriptionsField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/AwardResults.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/CustomAwardForm.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/FunderDropdown.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/NoAwardResults.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/FundingModal.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/FundingFieldItem.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/FundingField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/IdentifiersField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/license_field_components/LicenseFilter.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/license_field_components/LicenseResults.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/license_field_components/LicenseModal.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/license_field_components/LicenseFieldItem.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/LicenseField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/MetadataOnlyToggle.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/PublicationDateField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/PublisherField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/RelatedWorksField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/SubjectsField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/AdditionalTitlesField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/TitlesField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/VersionField.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/file_uploader_components/files.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/file_uploader_components/FileUploaderArea.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/file_uploader_components/FileUploaderToolbar.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/file_uploader_components/FileUploader.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/index.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/fields/file_uploader_components/index.js","webpack://invenio-assets/./js/invenio_app_rdm/overridableRegistry/mapping.js","webpack://invenio-assets/./js/invenio_modular_deposit_form/replacement_components/SelectField.js","webpack://invenio-assets/./js/invenio_modular_deposit_form/replacement_components/TextArea.jsx","webpack://invenio-assets/./js/invenio_modular_deposit_form/replacement_components/TextField.js","webpack://invenio-assets/./js/invenio_modular_deposit_form/utils.js"],"sourcesContent":["// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { FastField } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\n\nclass ProtectionButtonsComponent extends Component {\n  componentDidMount() {\n    const { formik, disabled, fieldPath } = this.props;\n    // If is disabled is set it means community is restricted and recort cannot be public\n    // thus it has to be restricted\n    if (disabled) {\n      formik.form.setFieldValue(fieldPath, \"restricted\");\n    }\n  }\n\n  handlePublicButtonClick = () => {\n    const { formik, fieldPath } = this.props;\n    formik.form.setFieldValue(fieldPath, \"public\");\n    // NOTE: We reset values, so if embargo filled and click Public,\n    //       user needs to fill embargo again. Otherwise, lots of\n    //       bookkeeping.\n    formik.form.setFieldValue(\"access.embargo\", {\n      active: false,\n    });\n  };\n\n  handleRestrictionButtonClick = () => {\n    const { formik, fieldPath } = this.props;\n    formik.form.setFieldValue(fieldPath, \"restricted\");\n  };\n\n  render() {\n    const { active, disabled } = this.props;\n\n    const publicColor = active ? \"positive\" : \"\";\n    const restrictedColor = !active ? \"negative\" : \"\";\n\n    return (\n      <Button.Group widths=\"2\">\n        <Button\n          className={publicColor}\n          data-testid=\"protection-buttons-component-public\"\n          disabled={disabled}\n          onClick={this.handlePublicButtonClick}\n          active={active}\n        >\n          {i18next.t(\"Public\")}\n        </Button>\n        <Button\n          className={restrictedColor}\n          data-testid=\"protection-buttons-component-restricted\"\n          active={!active}\n          onClick={this.handleRestrictionButtonClick}\n        >\n          {i18next.t(\"Restricted\")}\n        </Button>\n      </Button.Group>\n    );\n  }\n}\n\nProtectionButtonsComponent.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nProtectionButtonsComponent.defaultProps = {\n  active: true,\n  disabled: false,\n};\n\nexport class ProtectionButtons extends Component {\n  render() {\n    const { fieldPath } = this.props;\n\n    return (\n      <FastField\n        name={fieldPath}\n        component={(formikProps) => (\n          <ProtectionButtonsComponent formik={formikProps} {...this.props} />\n        )}\n      />\n    );\n  }\n}\n\nProtectionButtons.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ProtectionButtons } from \"./ProtectionButtons\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport Overridable from \"react-overridable\";\nimport { Form, Icon } from \"semantic-ui-react\";\n\nexport const MetadataAccess = (props) => {\n  const { recordAccess, communityAccess } = props;\n  const publicMetadata = recordAccess === \"public\";\n  const publicCommunity = communityAccess === \"public\";\n\n  return (\n    <Overridable id=\"ReactInvenioDeposit.MetadataAccess.layout\" {...props}>\n      <Form.Field>\n        <label htmlFor=\"access.record\" className=\"invenio-field-label\">\n          <Icon name=\"lock\" />\n          {i18next.t(\"Record access\")}\n        </label>\n        <ProtectionButtons\n          active={publicMetadata && publicCommunity}\n          disabled={!publicCommunity}\n          fieldPath=\"access.record\"\n        />\n      </Form.Field>\n    </Overridable>\n  );\n};\n\nMetadataAccess.propTypes = {\n  recordAccess: PropTypes.string.isRequired,\n  communityAccess: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { ProtectionButtons } from \"./ProtectionButtons\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Card, Form, Icon } from \"semantic-ui-react\";\n\nexport const FilesAccess = ({ access, accessCommunity, metadataOnly }) => {\n  const publicFiles = access.files === \"public\";\n  const publicMetadata = access.record === \"public\";\n  const publicCommunity = accessCommunity === \"public\";\n\n  const fullRecordRestricted = !publicCommunity || !publicMetadata;\n  const filesRestricted = publicCommunity && !publicFiles && publicMetadata;\n\n  const filesButtonsDisplayed = !metadataOnly && publicCommunity && publicMetadata;\n\n  if (metadataOnly) {\n    return (null\n      // <Card.Meta data-testid=\"access-files\">\n      // <em>{i18next.t(\"The record has no files.\")}</em>\n      // </Card.Meta>\n    );\n  }\n\n  return (\n    <>\n      {filesButtonsDisplayed && (\n        <Form.Field>\n          <label htmlFor=\"access.files\" className=\"invenio-field-label\">\n            <Icon name=\"lock\" />\n            {i18next.t(\"Files access\")}\n          </label>\n          <ProtectionButtons\n            active={publicFiles}\n            disable={!publicCommunity}\n            fieldPath=\"access.files\"\n          />\n        </Form.Field>\n      )}\n      {/* {fullRecordRestricted && (\n        <Card.Description>\n          <em>{i18next.t(\"The deposit record is restricted.\")}</em>\n        </Card.Description>\n      )}\n      {filesRestricted && (\n        <Card.Description>\n          <em>{i18next.t(\"The files of this record are restricted.\")}</em>\n        </Card.Description>\n      )} */}\n    </>\n  );\n};\n\nFilesAccess.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nFilesAccess.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport function EmbargoDateField({\n  fieldPath,\n  label,\n  labelIcon,\n  placeholder,\n  required,\n  helpText,\n}) {\n  return (\n    <TextField\n      fieldPath={fieldPath}\n      label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n      placeholder={placeholder}\n      required={required}\n      helpText={helpText}\n    />\n  );\n}\n\nEmbargoDateField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  helpText: PropTypes.string,\n};\n\nEmbargoDateField.defaultProps = {\n  required: false,\n  labelIcon: \"calendar\",\n  placeholder: i18next.t(\"YYYY-MM-DD\"),\n  label: i18next.t(\"Embargo until\"),\n  helpText: `${i18next.t(\"Format\")}: ${i18next.t(\"YYYY-MM-DD\")}`,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _isEmpty from \"lodash/isEmpty\";\nimport { DateTime } from \"luxon\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { TextAreaField } from \"react-invenio-forms\";\nimport { Button, Divider, Form, Icon, List } from \"semantic-ui-react\";\nimport { EmbargoDateField } from \"./EmbargoDateField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\nimport { useFormikContext } from \"formik\";\n\nexport const EmbargoAccess = ({ access, accessCommunity, metadataOnly }) => {\n  const { setFieldValue } = useFormikContext();\n  console.log(\"EmbargoAccess.js: access\", access);\n  const recordPublic = access.record === \"public\";\n  const filesPublic = access.files === \"public\";\n  const communityPublic = accessCommunity === \"public\";\n\n  const filesRestricted = !metadataOnly && !filesPublic;\n\n  const embargoActive = access.embargo?.active || false;\n  const embargoUntil = access.embargo?.until;\n  const embargoReason = access.embargo?.reason;\n  const embargoWasLifted = !embargoActive && !_isEmpty(embargoUntil);\n  const embargoEnabled = communityPublic && (!recordPublic || filesRestricted);\n\n  const fmtDate = embargoUntil\n    ? DateTime.fromISO(embargoUntil).toLocaleString(DateTime.DATE_FULL)\n    : \"???\";\n\n  const publicColor = !embargoActive ? \"positive\" : \"\";\n  const restrictedColor = embargoActive ? \"negative\" : \"\";\n\n  const handlePublicButtonClick = () => {\n    setFieldValue('access.files', \"public\");\n    setFieldValue(\"access.embargo\", {\n      active: false,\n    });\n  }\n\n  const handleRestrictedButtonClick = () => {\n    setFieldValue('access.files', \"restricted\");\n    setFieldValue(\"access.embargo\", {\n      active: true,\n    });\n  }\n\n  return (\n    <>\n    <Form.Field>\n      <label htmlFor=\"access.embargo.active\" className=\"invenio-field-label\">\n        <Icon name=\"clock outline\" />\n        {i18next.t(\"Apply an embargo\")}\n      </label>\n      <Button.Group widths=\"2\">\n        <Button\n          className={`${publicColor} {!embargoEnabled ? \"disabled\" : \"\"}`}\n          disabled={!embargoEnabled}\n          onClick={handlePublicButtonClick}\n          active={!embargoActive}\n        >\n          {filesPublic ? i18next.t(\"Unrestricted\") : i18next.t(\"Not time limited\")}\n        </Button>\n        <Button\n          active={embargoActive}\n          onClick={handleRestrictedButtonClick}\n          disabled={!embargoEnabled}\n          className={`${restrictedColor} {!embargoEnabled ? \"disabled\" : \"\"}`}\n        >\n          {i18next.t(\"Embargoed\")}\n        </Button>\n      </Button.Group>\n          </Form.Field>\n\n    <List divided relaxed>\n        <List.Content>\n          <List.Header as=\"label\" htmlFor=\"access.embargo.active\" >\n          </List.Header>\n\n          {!metadataOnly && filesPublic && !embargoActive && (\n          <List.Description>\n            <Trans>\n              Record or files access must be <b>restricted</b> to apply an embargo.\n            </Trans>\n          </List.Description>\n          )}\n\n          {embargoActive && (\n            <>\n              <Divider hidden className=\"rel-mb-1\" />\n              <EmbargoDateField fieldPath=\"access.embargo.until\" required />\n              <TextAreaField\n                label={i18next.t(\"Embargo reason\")}\n                fieldPath=\"access.embargo.reason\"\n                placeholder={i18next.t(\n                  \"Optionally, describe the reason for the embargo.\"\n                )}\n                optimized=\"true\"\n              />\n            </>\n          )}\n          {embargoWasLifted && (\n            <>\n              <Divider hidden />\n              <p>\n                {i18next.t(`Embargo was lifted on {{fmtDate}}.`, {\n                  fmtDate: fmtDate,\n                })}\n              </p>\n              {embargoReason && (\n                <p>\n                  <b>{i18next.t(\"Reason\")}</b>: {embargoReason}.\n                </p>\n              )}\n            </>\n          )}\n        </List.Content>\n    </List>\n  </>\n  );\n};\n\nEmbargoAccess.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nEmbargoAccess.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { DateTime } from \"luxon\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\nimport { Icon, Message } from \"semantic-ui-react\";\n\nexport const AccessMessage = ({ access, metadataOnly, accessCommunity }) => {\n  const recordPublic = access.record === \"public\";\n  const filesPublic = access.files === \"public\";\n  const communityPublic = accessCommunity === \"public\";\n  const embargoActive = access.embargo?.active || false;\n\n  // restriction logic\n  const fullyRestricted = !communityPublic || (!recordPublic && !embargoActive);\n  const fullyPublic = communityPublic && recordPublic && (metadataOnly || filesPublic);\n\n  const embargoedFiles = embargoActive && !filesPublic && recordPublic;\n  const restrictedFiles = !embargoActive && !filesPublic && recordPublic;\n  const fullEmbargo = !recordPublic && embargoActive;\n\n  const fmtDate = access.embargo?.until\n    ? DateTime.fromISO(access.embargo.until).toLocaleString(DateTime.DATE_FULL)\n    : \"???\";\n\n  if (fullyPublic) {\n    return (\n      <Message icon positive visible data-testid=\"access-message\">\n        <Icon name=\"lock open\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Public\")}</Message.Header>\n          {metadataOnly\n            ? i18next.t(\"The record is publicly accessible.\")\n            : i18next.t(\"The record and files are publicly accessible.\")}\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (fullEmbargo) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Embargoed (full record)\")}</Message.Header>\n          <Trans i18nKey=\"access-message\">\n            On <b>{fmtDate}</b> the record will automatically be made publicly\n            accessible. Until then, the record can <b>only</b> be accessed by{\" \"}\n            <b>users specified</b> in the permissions.\"\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (fullyRestricted) {\n    return (\n      <Message icon negative visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Restricted\")}</Message.Header>\n          <Trans>\n            The record can <b>only</b> be accessed by <b>users specified</b> in the\n            permissions.\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (restrictedFiles) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Public with restricted files\")}</Message.Header>\n          <Trans>\n            The record is publicly accessible. The files can <b>only</b> be accessed by{\" \"}\n            <b>users specified</b> in the permissions.\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (embargoedFiles) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Embargoed (files-only)\")}</Message.Header>\n          <Trans\n            defaults=\"The record is publicly accessible. On <bold>{{ date }}</bold> the files will automatically be made publicly accessible. Until then, the files can <bold>only</bold> be accessed by <bold>users specified</bold> in the permissions.\"\n            values={{ date: fmtDate }}\n            components={{ bold: <b /> }}\n          />\n        </Message.Content>\n      </Message>\n    );\n  }\n};\n\nAccessMessage.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nAccessMessage.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"formik\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { Card, Divider, Form, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport {\n  MetadataAccess,\n  FilesAccess,\n  EmbargoAccess,\n  AccessMessage,\n} from \"./access_rights_components\";\n\nexport class AccessRightFieldCmp extends Component {\n  /** Top-level Access Right Component */\n\n  render() {\n    const {\n      fieldPath,\n      formik, // this is our access to the shared current draft\n      label = i18next.t(\"Access Permissions\"),\n      labelIcon,\n      showMetadataAccess,\n      community,\n    } = this.props;\n\n    const isGhostCommunity = community?.is_ghost === true;\n    const communityAccess =\n      (community && !isGhostCommunity && community.access.visibility) ||\n      \"public\";\n    const isMetadataOnly = !formik.form.values.files.enabled;\n\n    return (\n      <>\n        <label\n          htmlFor={fieldPath}\n          className=\"field-label-class invenio-field-label\"\n        >\n          {labelIcon && <i className={`${labelIcon} icon`} />}\n          {label}\n        </label>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              {showMetadataAccess && (\n                <MetadataAccess\n                  recordAccess={formik.field.value.record}\n                  communityAccess={communityAccess}\n                />\n              )}\n              <FilesAccess\n                access={formik.field.value}\n                accessCommunity={communityAccess}\n                metadataOnly={isMetadataOnly}\n              />\n              <EmbargoAccess\n                access={formik.field.value}\n                accessCommunity={communityAccess}\n                metadataOnly={isMetadataOnly}\n              />\n            </Grid.Column>\n\n            <Grid.Column width=\"8\">\n              <AccessMessage\n                access={formik.field.value}\n                accessCommunity={communityAccess}\n                metadataOnly={isMetadataOnly}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </>\n    );\n  }\n}\n\nAccessRightFieldCmp.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  labelIcon: PropTypes.string.isRequired,\n  showMetadataAccess: PropTypes.bool,\n  community: PropTypes.object,\n};\n\nAccessRightFieldCmp.defaultProps = {\n  showMetadataAccess: true,\n  community: undefined,\n};\n\nconst mapStateToPropsAccessRightFieldCmp = (state) => ({\n  community: state.deposit.editorState.selectedCommunity,\n});\n\nexport const AccessRightFieldComponent = connect(\n  mapStateToPropsAccessRightFieldCmp,\n  null\n)(AccessRightFieldCmp);\n\nexport class AccessRightField extends Component {\n  render() {\n    const { fieldPath } = this.props;\n\n    return (\n      <Field name={fieldPath}>\n        {(formik) => (\n          <AccessRightFieldComponent formik={formik} {...this.props} />\n        )}\n      </Field>\n    );\n  }\n}\n\nAccessRightField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  labelIcon: PropTypes.string,\n  isMetadataOnly: PropTypes.bool,\n};\n\nAccessRightField.defaultProps = {\n  labelIcon: undefined,\n  isMetadataOnly: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { FieldLabel, RemoteSelectField } from \"react-invenio-forms\";\nimport { Field, getIn } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\n/**Affiliation input component */\nexport class AffiliationsField extends Component {\n  serializeAffiliations = (affiliations) =>\n    affiliations.map((affiliation) => ({\n      text: affiliation.acronym\n        ? `${affiliation.name} (${affiliation.acronym})`\n        : affiliation.name,\n      value: affiliation.name,\n      key: affiliation.name,\n      ...(affiliation.id ? { id: affiliation.id } : {}),\n      name: affiliation.name,\n    }));\n\n  render() {\n    const { fieldPath, selectRef } = this.props;\n    return (\n      <Field name={fieldPath}>\n        {({ form: { values } }) => {\n          return (\n            <RemoteSelectField\n              fieldPath={fieldPath}\n              suggestionAPIUrl=\"/api/affiliations\"\n              suggestionAPIHeaders={{\n                Accept: \"application/json\",\n              }}\n              initialSuggestions={getIn(values, fieldPath, [])}\n              serializeSuggestions={this.serializeAffiliations}\n              placeholder={i18next.t(\"Search or enter an organization\")}\n              label={\n                <FieldLabel\n                  htmlFor={`${fieldPath}.name`}\n                  label={i18next.t(\"Affiliations\")}\n                />\n              }\n              noQueryMessage={i18next.t(\"Search for organizations..\")}\n              allowAdditions\n              clearable\n              multiple\n              onValueChange={({ formikProps }, selectedSuggestions) => {\n                formikProps.form.setFieldValue(\n                  fieldPath,\n                  // save the suggestion objects so we can extract information\n                  // about which value added by the user\n                  selectedSuggestions\n                );\n              }}\n              value={getIn(values, fieldPath, []).map((val) => val.name)}\n              ref={selectRef}\n            />\n          );\n        }}\n      </Field>\n    );\n  }\n}\n\nAffiliationsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  selectRef: PropTypes.object,\n};\n\nAffiliationsField.defaultProps = {\n  selectRef: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\nimport PropTypes, { array } from \"prop-types\";\nimport { FieldLabel, SelectField } from \"react-invenio-forms\";\nimport _unickBy from \"lodash/unionBy\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { TextField } from \"@js/invenio_modular_deposit_form/replacement_components/TextField\";\nimport { FieldArray, useFormikContext } from \"formik\";\n\nconst newIdentifier = { scheme: \"\", identifier: \"\" };\n\nconst idTypeData = {\n  orcid: { text: \"ORCID\", value: \"orcid\", key: \"orcid\" },\n  isni: { text: \"ISNI\", value: \"isni\", key: \"isni\" },\n  gnd: { text: \"GND\", value: \"gnd\", key: \"gnd\" },\n  ror: { text: \"ROR\", value: \"ror\", key: \"ror\" },\n};\n\nconst CreatibutorsIdentifiers = ({\n  fieldPath,\n  label = i18next.t(\"Name identifiers\"),\n  placeholder = \"\",\n  idTypes = [\"orcid\", \"isni\", \"gnd\", \"ror\"],\n}) => {\n  // const [selectedOptions, setSelectedOptions] = useState(initialOptions);\n\n  const [identifiersLength, setIdentifiersLength] = useState(-1);\n  const [haveChangedNumber, setHaveChangedNumber] = useState(false);\n\n  // const { values, formikProps } = useFormikContext();\n  // console.log(\"formikProps\", formikProps);\n\n  const handleAddNew = (arrayHelpers, newItem) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.push(newItem);\n    setIdentifiersLength(identifiersLength + 1);\n  };\n\n  const handleRemove = (arrayHelpers, index) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.remove(index);\n    setIdentifiersLength(identifiersLength - 1);\n  };\n\n  // const handleChange = ({ data, formikProps, index }) => {\n  //   console.log(\"handleChange\", { data, formikProps, index });\n  // console.log(\"handleChange formikProps\", formikProps);\n  // const subField = formikProps.fieldPath.split(\".\")[2];\n  // const newOptions = selectedOptions.map((option, i) =>\n  //   i === index ? { ...option, [subField]: data.value } : option\n  // );\n  // console.log(\"newOptions\", newOptions);\n  // setSelectedOptions(newOptions);\n  // formikProps.form.setFieldValue(formikProps.fieldPath, data.value);\n  // };\n\n  return (\n    <>\n      <FieldLabel htmlFor={`${fieldPath}`} label={label} />\n      <FieldArray\n        addButtonLabel={i18next.t(\"Add other titles\")}\n        name={fieldPath}\n        className=\"creator-identifiers\"\n        render={(arrayHelpers) => (\n          <>\n            {arrayHelpers.form.values.person_or_org.identifiers?.map(\n              (option, index) => {\n                console.log(\"option\", option);\n                console.log(\"arrayHelpers\", arrayHelpers);\n                const fieldPathPrefix = `${fieldPath}.${index}`;\n                console.log(\"fieldPathPrefix\", fieldPathPrefix);\n                return (\n                  <Form.Group\n                    key={index}\n                    inline\n                    className={`creatibutors-identifiers-item-row`}\n                  >\n                    <TextField\n                      fieldPath={`${fieldPathPrefix}.identifier`}\n                      name={`${fieldPathPrefix}.identifier`}\n                      id={`${fieldPathPrefix}.identifier`}\n                      label={\"\"}\n                      width={10}\n                    />\n                    <SelectField\n                      fieldPath={`${fieldPathPrefix}.scheme`}\n                      name={`${fieldPathPrefix}.scheme`}\n                      id={`${fieldPathPrefix}.scheme`}\n                      label={\"Scheme\"}\n                      options={idTypes.map((option) => idTypeData[option])}\n                      selection\n                      selectOnBlur\n                      optimized\n                      width={4}\n                    />\n                    <Form.Field>\n                      <Button\n                        aria-label={i18next.t(\"Remove item\")}\n                        className=\"close-btn\"\n                        icon\n                        onClick={() => handleRemove(arrayHelpers, index)}\n                      >\n                        <Icon name=\"close\" />\n                      </Button>\n                    </Form.Field>\n                  </Form.Group>\n                );\n              }\n            )}\n\n            <Button\n              type=\"button\"\n              onClick={() => handleAddNew(arrayHelpers, newIdentifier)}\n              icon\n              className=\"align-self-end add-btn creatibutors-identifiers-add-button\"\n              labelPosition=\"left\"\n              id={`${fieldPath}.add-identifier-button`}\n            >\n              <Icon name=\"add\" />\n              Add identifier\n            </Button>\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nCreatibutorsIdentifiers.propTypes = {\n  initialOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport { CreatibutorsIdentifiers };\n","export const CREATIBUTOR_TYPE = {\n  PERSON: \"personal\",\n  ORGANIZATION: \"organizational\",\n};\n\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2022 data-futures.org.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component, createRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Divider, Form, Grid, Header, Modal } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport {\n  Image,\n  SelectField,\n  TextField,\n  RadioField,\n  RemoteSelectField,\n} from \"react-invenio-forms\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash/get\";\nimport _find from \"lodash/find\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _map from \"lodash/map\";\nimport { AffiliationsField } from \"./AffiliationsField\";\nimport { CreatibutorsIdentifiers } from \"./CreatibutorsIdentifiers\";\nimport { CREATIBUTOR_TYPE } from \"./types\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\n\nconst onPersonSearchChange = (\n  { formikProps },\n  selectedSuggestions,\n  identifiersRef,\n  affiliationsRef,\n  parentFieldPath = \"creators\"\n) => {\n  if (selectedSuggestions[0].key === \"manual-entry\") {\n    // Empty the autocomplete's selected values\n    this.namesAutocompleteRef.current.setState({\n      suggestions: [],\n      selectedSuggestions: [],\n    });\n    this.setState({\n      showPersonForm: true,\n    });\n    return;\n  }\n\n  this.setState(\n    {\n      showPersonForm: true,\n    },\n    () => {\n      const identifiers = selectedSuggestions[0].extra.identifiers.map(\n        (identifier) => {\n          return identifier.identifier;\n        }\n      );\n      const affiliations = selectedSuggestions[0].extra.affiliations.map(\n        (affiliation) => {\n          return affiliation;\n        }\n      );\n\n      const personOrOrgPath = `person_or_org`;\n      const familyNameFieldPath = `${personOrOrgPath}.family_name`;\n      const givenNameFieldPath = `${personOrOrgPath}.given_name`;\n      const identifiersFieldPath = `${personOrOrgPath}.identifiers`;\n      const affiliationsFieldPath = \"affiliations\";\n\n      let chosen = {\n        [givenNameFieldPath]: selectedSuggestions[0].extra.given_name,\n        [familyNameFieldPath]: selectedSuggestions[0].extra.family_name,\n        [identifiersFieldPath]: identifiers,\n        [affiliationsFieldPath]: affiliations,\n      };\n      Object.entries(chosen).forEach(([path, value]) => {\n        formikProps.form.setFieldValue(path, value);\n      });\n      // Update identifiers render\n      identifiersRef.current.setState({\n        selectedOptions: identifiersRef.current.valuesToOptions(identifiers),\n      });\n      // Update affiliations render\n      const affiliationsState = affiliations.map(({ name }) => ({\n        text: name,\n        value: name,\n        key: name,\n        name,\n      }));\n      affiliationsRef.current.setState({\n        suggestions: affiliationsState,\n        selectedSuggestions: affiliationsState,\n        searchQuery: null,\n        error: false,\n        open: false,\n      });\n      window.setTimeout(\n        () =>\n          document\n            .getElementById(`${parentFieldPath}.role-select`)\n            .querySelectorAll(\"input\")[0]\n            .focus(),\n        50\n      );\n    }\n  );\n};\n\nconst makeIdEntry = (identifier) => {\n  let icon = null;\n  let link = null;\n\n  if (identifier.scheme === \"orcid\") {\n    icon = \"/static/images/orcid.svg\";\n    link = \"https://orcid.org/\" + identifier.identifier;\n  } else if (identifier.scheme === \"gnd\") {\n    icon = \"/static/images/gnd-icon.svg\";\n    link = \"https://d-nb.info/gnd/\" + identifier.identifier;\n  } else if (identifier.scheme === \"ror\") {\n    icon = \"/static/images/ror-icon.svg\";\n    link = \"https://ror.org/\" + identifier.identifier;\n  } else {\n    return (\n      <>\n        {identifier.scheme}: {identifier.identifier}\n      </>\n    );\n  }\n\n  return (\n    <span key={identifier.identifier}>\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n        <Image\n          src={icon}\n          className=\"inline-id-icon ml-5 mr-5\"\n          verticalAlign=\"middle\"\n        />\n        {identifier.identifier}\n      </a>\n      ;\n    </span>\n  );\n};\n\nconst serializeSuggestions = (creatibutors, showManualEntry) => {\n  let results = creatibutors.map((creatibutor) => {\n    let affNames = \"\";\n    creatibutor.affiliations.forEach((affiliation, idx) => {\n      affNames += affiliation.name;\n      if (idx < creatibutor.affiliations.length - 1) {\n        affNames += \", \";\n      }\n    });\n\n    let idString = [];\n    creatibutor.identifiers.forEach((i) => {\n      idString.push(makeIdEntry(i));\n    });\n\n    return {\n      text: creatibutor.name,\n      value: creatibutor.id,\n      extra: creatibutor,\n      key: creatibutor.id,\n      content: (\n        <Header>\n          <Header.Content>\n            {creatibutor.name} {idString.length ? <>({idString})</> : null}\n          </Header.Content>\n          <Header.Subheader>{affNames}</Header.Subheader>\n        </Header>\n      ),\n    };\n  });\n\n  if (showManualEntry) {\n    results.push({\n      text: \"Manual entry\",\n      value: \"Manual entry\",\n      extra: \"Manual entry\",\n      key: \"manual-entry\",\n      content: (\n        <Header textAlign=\"center\">\n          <Header.Content>\n            <p>\n              <Trans>\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n                Couldn't find your person? You can <a>create a new entry</a>.\n              </Trans>\n            </p>\n          </Header.Content>\n        </Header>\n      ),\n    });\n  }\n  return results;\n};\n\n/**\n * Function to transform creatibutor object\n * to formik initialValues. The function is converting\n * the array of objects fields e.g `identifiers`, `affiliations`\n * to simple arrays. This is needed as SUI dropdowns accept only\n * array of strings as values.\n */\nconst deserializeCreatibutor = (initialCreatibutor) => {\n  const identifiersFieldPath = \"person_or_org.identifiers\";\n\n  return {\n    // default type to personal\n    // use empty strings as defaults for name fields to keep inputs controlled\n    person_or_org: {\n      type: CREATIBUTOR_TYPE.PERSON,\n      family_name: \"\",\n      given_name: \"\",\n      ...initialCreatibutor.person_or_org,\n      identifiers: _get(initialCreatibutor, identifiersFieldPath, []),\n    },\n    affiliations: _get(initialCreatibutor, \"affiliations\", []),\n    role: _get(initialCreatibutor, \"role\", \"\"),\n  };\n};\n\n/**\n * Function to transform formik creatibutor state\n * back to the external format.\n */\nconst serializeCreatibutor = (submittedCreatibutor, initialCreatibutor) => {\n  const findField = (arrayField, key, value) => {\n    const knownField = _find(arrayField, {\n      [key]: value,\n    });\n    return knownField ? knownField : { [key]: value };\n  };\n  const identifiersFieldPath = \"person_or_org.identifiers\";\n  const affiliationsFieldPath = \"affiliations\";\n  // The modal is saving only identifiers values, thus\n  // identifiers with existing scheme are trimmed\n  // Here we merge back the known scheme for the submitted identifiers\n  // const initialIdentifiers = _get(\n  //   initialCreatibutor,\n  //   identifiersFieldPath,\n  //   []\n  // );\n  // const submittedIdentifiers = _get(\n  //   submittedCreatibutor,\n  //   identifiersFieldPath,\n  //   []\n  // );\n  // const identifiers = submittedIdentifiers.map((identifier) => {\n  //   return findField(initialIdentifiers, \"identifier\", identifier);\n  // });\n\n  const submittedAffiliations = _get(\n    submittedCreatibutor,\n    affiliationsFieldPath,\n    []\n  );\n\n  return {\n    ...submittedCreatibutor,\n    // person_or_org: {\n    //   ...submittedCreatibutor.person_or_org,\n    // identifiers,\n    // },\n    affiliations: submittedAffiliations,\n  };\n};\n\nconst getCreatorSchema = (isCreator = true) => {\n  return Yup.object({\n    person_or_org: Yup.object({\n      type: Yup.string(),\n      family_name: Yup.string().when(\"type\", (type, schema) => {\n        if (type === CREATIBUTOR_TYPE.PERSON && isCreator) {\n          return schema.required(i18next.t(\"Surname is a required field.\"));\n        }\n      }),\n      name: Yup.string().when(\"type\", (type, schema) => {\n        if (type === CREATIBUTOR_TYPE.ORGANIZATION && isCreator) {\n          return schema.required(\n            i18next.t(\"Organization name is a required field.\")\n          );\n        }\n      }),\n      identifiers: Yup.array().of(\n        Yup.object().shape({\n          scheme: Yup.string().required(\n            \"A scheme is required for each identifier\"\n          ),\n          identifier: Yup.string()\n            .when(\"scheme\", {\n              is: \"url\",\n              then: Yup.string()\n                .url(\"Must be a valid URL (e.g. https://example.com)\")\n                .required(\"You must provide a URL or remove this row\"),\n            })\n            .matches(/(?!\\s).+/, {\n              disallowEmptyString: true,\n              message: \"Identifier cannot be blank\",\n            })\n            .required(\"A value is required for each identifier\"),\n        })\n      ),\n    }),\n    role: Yup.string().when(\"_\", (_, schema) => {\n      if (!isCreator) {\n        return schema.required(i18next.t(\"Role is a required field.\"));\n      }\n    }),\n  });\n};\n\nconst ModalActions = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst NamesAutocompleteOptions = {\n  SEARCH: \"search\",\n  SEARCH_ONLY: \"search_only\",\n  OFF: \"off\",\n};\n\nconst CreatibutorsFormBody = ({\n  autocompleteNames,\n  initialCreatibutor,\n  isCreator,\n  parentFieldPath,\n  roleOptions,\n  showManualEntry,\n  showPersonForm,\n  values,\n}) => {\n  const personOrOrgPath = `person_or_org`;\n  const affiliationsFieldPath = \"affiliations\";\n  const familyNameFieldPath = `${personOrOrgPath}.family_name`;\n  const givenNameFieldPath = `${personOrOrgPath}.given_name`;\n  const identifiersFieldPath = `${personOrOrgPath}.identifiers`;\n  const nameFieldPath = `${personOrOrgPath}.name`;\n  const roleFieldPath = \"role\";\n  const typeFieldPath = `${personOrOrgPath}.type`;\n\n  const affiliationsRef = createRef();\n  const identifiersRef = createRef();\n  const inputRef = createRef();\n  const namesAutocompleteRef = createRef();\n  const surnameRef = createRef();\n\n  const focusInput = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    } else {\n      surnameRef.current.focus();\n    }\n  };\n\n  return (\n    <Form>\n      <Form.Group>\n        <RadioField\n          fieldPath={typeFieldPath}\n          label={i18next.t(\"Person\")}\n          checked={_get(values, typeFieldPath) === CREATIBUTOR_TYPE.PERSON}\n          value={CREATIBUTOR_TYPE.PERSON}\n          onChange={({ formikProps }) => {\n            formikProps.form.setFieldValue(\n              typeFieldPath,\n              CREATIBUTOR_TYPE.PERSON\n            );\n          }}\n          optimized\n        />\n        <RadioField\n          fieldPath={typeFieldPath}\n          label={i18next.t(\"Organization\")}\n          checked={\n            _get(values, typeFieldPath) === CREATIBUTOR_TYPE.ORGANIZATION\n          }\n          value={CREATIBUTOR_TYPE.ORGANIZATION}\n          onChange={({ formikProps }) => {\n            formikProps.form.setFieldValue(\n              typeFieldPath,\n              CREATIBUTOR_TYPE.ORGANIZATION\n            );\n            focusInput();\n          }}\n          optimized\n        />\n      </Form.Group>\n      {_get(values, typeFieldPath, \"\") === CREATIBUTOR_TYPE.PERSON ? (\n        <div>\n          {autocompleteNames !== NamesAutocompleteOptions.OFF && (\n            <>\n              <label htmlFor={`${parentFieldPath}.person-search-select`}>\n                Search our existing list by name, identifier (e.g., ORCID id),\n                or affiliation; or enter a new person below.\n              </label>\n              <RemoteSelectField\n                selectOnBlur={false}\n                selectOnNavigation={false}\n                searchInput={{\n                  autoFocus: _isEmpty(initialCreatibutor),\n                  id: `${parentFieldPath}.person-search-select`,\n                }}\n                fieldPath=\"creators\"\n                clearable\n                multiple={false}\n                allowAdditions={false}\n                placeholder={i18next.t(\"name, identifier, or affiliation...\")}\n                noQueryMessage={i18next.t(\n                  \"name, identifier, or affiliation...\"\n                )}\n                required={false}\n                // Disable UI-side filtering of search results\n                search={(options) => options}\n                suggestionAPIUrl=\"/api/names\"\n                serializeSuggestions={(creatibutors) =>\n                  serializeSuggestions(creatibutors, showManualEntry)\n                }\n                onValueChange={({ formikProps }, selectedSuggestions) =>\n                  onPersonSearchChange(\n                    { formikProps },\n                    selectedSuggestions,\n                    identifiersRef,\n                    affiliationsRef\n                  )\n                }\n                ref={namesAutocompleteRef}\n              />\n            </>\n          )}\n          {showPersonForm && (\n            <>\n              <Divider />\n              <div>\n                <Form.Group widths=\"equal\">\n                  <TextField\n                    label={i18next.t(\"Surname(s)\")}\n                    placeholder={i18next.t(\"Surname(s)\")}\n                    fieldPath={familyNameFieldPath}\n                    required={isCreator}\n                    input={{\n                      ref: surnameRef,\n                      autoFocus: true,\n                    }}\n                  />\n                  <TextField\n                    label={i18next.t(\"First name(s)\")}\n                    placeholder={i18next.t(\"First name(s)\")}\n                    fieldPath={givenNameFieldPath}\n                  />\n                </Form.Group>\n                <CreatibutorsIdentifiers\n                  // initialOptions={values}\n                  fieldPath={identifiersFieldPath}\n                  ref={identifiersRef}\n                  label={\"Personal identifiers (ORCID, ISNI, or GND)\"}\n                  idTypes={[\"orcid\", \"isni\", \"gnd\"]}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      ) : (\n        <>\n          <Divider />\n          <TextField\n            label={i18next.t(\"Organization name\")}\n            placeholder={i18next.t(\"Organization name\")}\n            fieldPath={nameFieldPath}\n            required={isCreator}\n            // forward ref to Input component because Form.Input\n            // doesn't handle it\n            input={{ ref: inputRef }}\n          />\n          <CreatibutorsIdentifiers\n            initialOptions={_get(values, identifiersFieldPath, [])}\n            fieldPath={identifiersFieldPath}\n            label={\"Organization identifiers (ROR, ISNI, or GND)\"}\n            idTypes={[\"ror\", \"isni\", \"gnd\"]}\n          />\n        </>\n      )}\n      {(_get(values, typeFieldPath) === CREATIBUTOR_TYPE.ORGANIZATION ||\n        (showPersonForm &&\n          _get(values, typeFieldPath) === CREATIBUTOR_TYPE.PERSON)) && (\n        <div>\n          <SelectField\n            fieldPath={roleFieldPath}\n            label={i18next.t(\"Role\")}\n            options={roleOptions}\n            placeholder={i18next.t(\"Select role\")}\n            {...(isCreator && { clearable: true })}\n            required={!isCreator}\n            optimized\n            scrolling\n            search\n            id={`${parentFieldPath}.role-select`}\n          />\n          <AffiliationsField\n            fieldPath={affiliationsFieldPath}\n            selectRef={affiliationsRef}\n          />\n        </div>\n      )}\n    </Form>\n  );\n};\n\nconst CreatibutorsFormActionButtons = ({\n  action,\n  autocompleteNames,\n  resetForm,\n  saveAndContinueLabel,\n  setAction,\n  setShowPersonForm,\n  handleModalClose,\n  handleSubmit,\n}) => {\n  return (\n    <>\n      <Button\n        name=\"cancel\"\n        onClick={() => {\n          resetForm();\n          handleModalClose();\n        }}\n        icon=\"remove\"\n        content={i18next.t(\"Cancel\")}\n        floated=\"left\"\n      />\n      {action === ModalActions.ADD && (\n        <Button\n          name=\"submit\"\n          onClick={() => {\n            setAction(\"saveAndContinue\");\n            setShowPersonForm(\n              autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY\n            );\n            handleSubmit();\n          }}\n          primary\n          icon=\"checkmark\"\n          content={saveAndContinueLabel}\n        />\n      )}\n      <Button\n        name=\"submit\"\n        onClick={() => {\n          setAction(\"saveAndClose\");\n          setShowPersonForm(\n            autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY\n          );\n          handleSubmit();\n        }}\n        primary\n        icon=\"checkmark\"\n        content={i18next.t(\"Save\")}\n      />\n    </>\n  );\n};\n\nconst CreatibutorsItemForm = ({\n  addLabel,\n  autocompleteNames = \"search\",\n  editLabel,\n  handleModalClose,\n  initialCreatibutor = {},\n  modalAction,\n  onCreatibutorChange,\n  parentFieldPath,\n  roleOptions = [],\n  schema,\n}) => {\n  const [saveAndContinueLabel, setSaveAndContinueLabel] = useState(\n    i18next.t(\"Save and add another\")\n  );\n  const [action, setAction] = useState(modalAction);\n  const [showPersonForm, setShowPersonForm] = useState(\n    autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY ||\n      !_isEmpty(initialCreatibutor)\n  );\n  const showManualEntry =\n    autocompleteNames === NamesAutocompleteOptions.SEARCH_ONLY &&\n    !showPersonForm;\n  const isCreator = schema === \"creators\";\n\n  const CreatorSchema = getCreatorSchema(isCreator);\n\n  const changeContent = () => {\n    setSaveAndContinueLabel(i18next.t(\"Added\"));\n    // change in 2 sec\n    setTimeout(() => {\n      setSaveAndContinueLabel(i18next.t(\"Save and add another\"));\n    }, 2000);\n  };\n\n  const onSubmit = (values, formikBag) => {\n    onCreatibutorChange(\n      serializeCreatibutor(values, initialCreatibutor),\n      action\n    );\n    formikBag.setSubmitting(false);\n    formikBag.resetForm();\n    switch (action) {\n      case \"saveAndContinue\":\n        // Needed to close and open the modal to reset the internal\n        // state of the cmp inside the modal\n        changeContent();\n        break;\n      case \"saveAndClose\":\n        handleModalClose();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={deserializeCreatibutor(initialCreatibutor)}\n      onSubmit={onSubmit}\n      // enableReinitialize\n      validationSchema={CreatorSchema}\n      validateOnChange={false}\n      validateOnBlur={false}\n      as=\"div\"\n    >\n      {({ values, resetForm, handleSubmit }) => {\n        return (\n          <>\n            {action === ModalActions.ADD ? (\n              <Header as=\"h2\">{addLabel}</Header>\n            ) : null}\n            <CreatibutorsFormBody\n              {...{\n                autocompleteNames,\n                initialCreatibutor,\n                isCreator,\n                parentFieldPath,\n                roleOptions,\n                showManualEntry,\n                showPersonForm,\n                values,\n              }}\n            />\n            <div className=\"creatibutors-item-form-buttons\">\n              <CreatibutorsFormActionButtons\n                {...{\n                  autocompleteNames,\n                  handleModalClose,\n                  handleSubmit,\n                  action,\n                  resetForm,\n                  saveAndContinueLabel,\n                  setAction,\n                  setShowPersonForm,\n                }}\n              />\n            </div>\n          </>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst CreatibutorsModal = ({\n  addLabel,\n  autocompleteNames = \"search\",\n  editLabel,\n  handleModalClose,\n  handleModalOpen,\n  initialCreatibutor = {},\n  modalAction,\n  modalOpen,\n  onCreatibutorChange,\n  parentFieldPath,\n  roleOptions = [],\n  schema,\n  trigger,\n}) => {\n  const [saveAndContinueLabel, setSaveAndContinueLabel] = useState(\n    i18next.t(\"Save and add another\")\n  );\n  const [action, setAction] = useState(modalAction);\n  const [showPersonForm, setShowPersonForm] = useState(\n    autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY ||\n      !_isEmpty(initialCreatibutor)\n  );\n  const showManualEntry =\n    autocompleteNames === NamesAutocompleteOptions.SEARCH_ONLY &&\n    !showPersonForm;\n  const isCreator = schema === \"creators\";\n\n  const CreatorSchema = getCreatorSchema(isCreator);\n\n  const changeContent = () => {\n    setSaveAndContinueLabel(i18next.t(\"Added\"));\n    // change in 2 sec\n    setTimeout(() => {\n      setSaveAndContinueLabel(i18next.t(\"Save and add another\"));\n    }, 2000);\n  };\n\n  const onSubmit = (values, formikBag) => {\n    onCreatibutorChange(serializeCreatibutor(values, initialCreatibutor));\n    formikBag.setSubmitting(false);\n    formikBag.resetForm();\n    switch (action) {\n      case \"saveAndContinue\":\n        // Needed to close and open the modal to reset the internal\n        // state of the cmp inside the modal\n        // handleModalClose();\n        // handleModalOpen();\n        changeContent();\n        break;\n      case \"saveAndClose\":\n        // handleModalClose();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={deserializeCreatibutor(initialCreatibutor)}\n      onSubmit={onSubmit}\n      enableReinitialize\n      validationSchema={CreatorSchema}\n      validateOnChange={false}\n      validateOnBlur={false}\n    >\n      {({ values, resetForm, handleSubmit }) => {\n        return (\n          <Modal\n            centered={false}\n            onOpen={() => handleModalOpen()}\n            open={modalOpen}\n            trigger={trigger}\n            onClose={() => {\n              handleModalClose();\n              resetForm();\n            }}\n            closeIcon\n            closeOnDimmerClick={false}\n            className=\"deposit-creatibutor-modal\"\n          >\n            <Modal.Header as=\"h6\" className=\"pt-10 pb-10\">\n              <Grid>\n                <Grid.Column floated=\"left\" width={4}>\n                  <Header as=\"h2\">\n                    {action === ModalActions.ADD ? addLabel : editLabel}\n                  </Header>\n                </Grid.Column>\n              </Grid>\n            </Modal.Header>\n            <Modal.Content>\n              <CreatibutorsFormBody\n                {...{\n                  autocompleteNames,\n                  initialCreatibutor,\n                  isCreator,\n                  parentFieldPath,\n                  roleOptions,\n                  showManualEntry,\n                  showPersonForm,\n                  values,\n                }}\n              />\n            </Modal.Content>\n            <Modal.Actions>\n              <CreatibutorsFormActionButtons\n                {...{\n                  autocompleteNames,\n                  handleModalClose,\n                  handleSubmit,\n                  action,\n                  resetForm,\n                  saveAndContinueLabel,\n                  setAction,\n                  setShowPersonForm,\n                }}\n              />\n            </Modal.Actions>\n          </Modal>\n        );\n      }}\n    </Formik>\n  );\n};\n\nCreatibutorsModal.propTypes = {\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n  modalAction: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  addLabel: PropTypes.string.isRequired,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  editLabel: PropTypes.string.isRequired,\n  initialCreatibutor: PropTypes.shape({\n    id: PropTypes.string,\n    person_or_org: PropTypes.shape({\n      family_name: PropTypes.string,\n      given_name: PropTypes.string,\n      name: PropTypes.string,\n      identifiers: PropTypes.arrayOf(\n        PropTypes.shape({\n          scheme: PropTypes.string,\n          identifier: PropTypes.string,\n        })\n      ),\n    }),\n    affiliations: PropTypes.array,\n    role: PropTypes.string,\n  }),\n  trigger: PropTypes.object.isRequired,\n  onCreatibutorChange: PropTypes.func.isRequired,\n  roleOptions: PropTypes.array,\n};\n\nexport { CreatibutorsModal, CreatibutorsItemForm };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 New York University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport _get from \"lodash/get\";\nimport React, { useState, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Button, Icon, Label, List, Ref } from \"semantic-ui-react\";\nimport { CreatibutorsModal, CreatibutorsItemForm } from \"./CreatibutorsModal\";\nimport PropTypes from \"prop-types\";\n\nconst CreatibutorsFieldItem = ({\n  compKey,\n  creatibutorDown,\n  creatibutorUp,\n  creatibutorsLength,\n  itemError,\n  index,\n  replaceCreatibutor,\n  removeCreatibutor,\n  moveCreatibutor,\n  addLabel,\n  editLabel,\n  initialCreatibutor,\n  displayName,\n  roleOptions,\n  schema,\n  autocompleteNames,\n  parentFieldPath,\n  showEditForms,\n  setShowEditForms,\n}) => {\n  const dropRef = useRef(null);\n  // eslint-disable-next-line no-unused-vars\n  const [_, drag, preview] = useDrag({\n    item: { index, type: \"creatibutor\" },\n  });\n  const [{ hidden }, drop] = useDrop({\n    accept: \"creatibutor\",\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      if (monitor.isOver({ shallow: true })) {\n        moveCreatibutor(dragIndex, hoverIndex);\n        item.index = hoverIndex;\n      }\n    },\n    collect: (monitor) => ({\n      hidden: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  const handleFormClose = () => {\n    setShowEditForms(showEditForms.filter((elem) => elem !== compKey));\n  };\n\n  const handleFormOpen = () => {\n    setShowEditForms([...showEditForms, compKey]);\n  };\n\n  const renderRole = (role, roleOptions) => {\n    if (role) {\n      const friendlyRole =\n        roleOptions.find(({ value }) => value === role)?.text ?? role;\n\n      return <Label>{friendlyRole}</Label>;\n    }\n  };\n\n  function returnBottomError(error) {\n    if (error && typeof error === \"object\") {\n      return returnBottomError(error[Object.keys(error)[0]]);\n    } else if (error && typeof error === \"array\") {\n      firstError = returnBottomError(\n        itemError.find((elem) => ![undefined, null].includes(elem))\n      );\n    }\n    return error;\n  }\n  let firstError = returnBottomError(itemError);\n  console.log(\"firstError\", firstError);\n\n  // Initialize the ref explicitely\n  drop(dropRef);\n  return (\n    <Ref innerRef={dropRef} key={compKey}>\n      <List.Item\n        key={compKey}\n        className={\n          hidden ? \"deposit-drag-listitem hidden\" : \"deposit-drag-listitem\"\n        }\n      >\n        <List.Content floated=\"right\">\n          <Button\n            size=\"mini\"\n            primary\n            type=\"button\"\n            onClick={\n              showEditForms.includes(compKey)\n                ? handleFormClose\n                : handleFormOpen\n            }\n            role=\"button\"\n          >\n            {i18next.t(showEditForms.includes(compKey) ? \"Cancel\" : \"Edit\")}\n          </Button>\n          <Button\n            size=\"mini\"\n            type=\"button\"\n            onClick={() => removeCreatibutor(index)}\n            icon=\"close\"\n            role=\"button\"\n            aria-label={i18next.t(\"Remove contributor\")}\n            negative\n          />\n          <Button\n            size=\"mini\"\n            type=\"button\"\n            disabled={index === 0}\n            onClick={() => creatibutorUp(index)}\n            icon=\"arrow up\"\n            role=\"button\"\n            aria-label={i18next.t(\"Move contributor up\")}\n          />\n          <Button\n            size=\"mini\"\n            type=\"button\"\n            disabled={index >= creatibutorsLength - 1}\n            onClick={() => creatibutorDown(index)}\n            icon=\"arrow down\"\n            role=\"button\"\n            aria-label={i18next.t(\"Move contributor down\")}\n          />\n        </List.Content>\n        <Ref innerRef={drag}>\n          <List.Icon name=\"bars\" className=\"drag-anchor\" />\n        </Ref>\n        <Ref innerRef={preview}>\n          <>\n            <List.Content>\n              <List.Description>\n                <span className=\"creatibutor\">\n                  {_get(\n                    initialCreatibutor,\n                    \"person_or_org.identifiers\",\n                    []\n                  ).some((identifier) => identifier.scheme === \"orcid\") && (\n                    <img\n                      alt=\"ORCID logo\"\n                      className=\"inline-id-icon mr-5\"\n                      src=\"/static/images/orcid.svg\"\n                      width=\"16\"\n                      height=\"16\"\n                    />\n                  )}\n                  {_get(\n                    initialCreatibutor,\n                    \"person_or_org.identifiers\",\n                    []\n                  ).some((identifier) => identifier.scheme === \"ror\") && (\n                    <img\n                      alt=\"ROR logo\"\n                      className=\"inline-id-icon mr-5\"\n                      src=\"/static/images/ror-icon.svg\"\n                      width=\"16\"\n                      height=\"16\"\n                    />\n                  )}\n                  {_get(\n                    initialCreatibutor,\n                    \"person_or_org.identifiers\",\n                    []\n                  ).some((identifier) => identifier.scheme === \"gnd\") && (\n                    <img\n                      alt=\"GND logo\"\n                      className=\"inline-id-icon mr-5\"\n                      src=\"/static/images/gnd-icon.svg\"\n                      width=\"16\"\n                      height=\"16\"\n                    />\n                  )}\n                  {displayName}{\" \"}\n                  {renderRole(initialCreatibutor?.role, roleOptions)}\n                </span>\n              </List.Description>\n              {firstError && (\n                <Label pointing=\"left\" prompt>\n                  {firstError.scheme\n                    ? firstError.scheme\n                    : \"Invalid identifiers\"}\n                </Label>\n              )}\n            </List.Content>\n            {firstError && (\n              <Label pointing=\"above\" prompt>\n                {firstError}\n              </Label>\n            )}\n            {showEditForms.includes(compKey) && (\n              <CreatibutorsItemForm\n                addLabel={addLabel}\n                autocompleteNames={autocompleteNames}\n                editLabel={editLabel}\n                handleModalClose={handleFormClose}\n                initialCreatibutor={initialCreatibutor}\n                modalAction=\"edit\"\n                onCreatibutorChange={(selectedCreatibutor) => {\n                  replaceCreatibutor(index, selectedCreatibutor);\n                }}\n                parentFieldPath={parentFieldPath}\n                roleOptions={roleOptions}\n                schema={schema}\n              />\n            )}\n          </>\n        </Ref>\n      </List.Item>\n    </Ref>\n  );\n};\n\nCreatibutorsFieldItem.propTypes = {\n  compKey: PropTypes.string.isRequired,\n  identifiersError: PropTypes.array,\n  index: PropTypes.number.isRequired,\n  replaceCreatibutor: PropTypes.func.isRequired,\n  removeCreatibutor: PropTypes.func.isRequired,\n  moveCreatibutor: PropTypes.func.isRequired,\n  addLabel: PropTypes.node,\n  editLabel: PropTypes.node,\n  initialCreatibutor: PropTypes.object.isRequired,\n  displayName: PropTypes.string,\n  roleOptions: PropTypes.array.isRequired,\n  schema: PropTypes.string.isRequired,\n  autocompleteNames: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nexport { CreatibutorsFieldItem };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn, FieldArray, useFormikContext } from \"formik\";\nimport { Button, Form, Label, List, Icon } from \"semantic-ui-react\";\nimport _get from \"lodash/get\";\nimport { FieldLabel } from \"react-invenio-forms\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import { DndProvider } from \"react-dnd\";\n\nimport { CreatibutorsItemForm } from \"./CreatibutorsModal\";\nimport { CreatibutorsFieldItem } from \"./CreatibutorsFieldItem\";\nimport { CREATIBUTOR_TYPE } from \"./types\";\n// import { GlobalDndContext } from \"./GlobalDndContext\";\n// import { sortOptions } from \"../../utils\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\n/**\n * Sort a list of string values (options).\n * @param {list} options\n * @returns\n */\nfunction sortOptions(options) {\n  return options.sort((o1, o2) => o1.text.localeCompare(o2.text));\n}\n\nconst moveCommonRolesToTop = (roleArray) => {\n  let newRoleArray = [...roleArray];\n  let commonRoles = [\n    \"projectOrTeamLeader\",\n    \"projectOrTeamMember\",\n    \"collaborator\",\n    \"translator\",\n    \"editor\",\n    \"author\",\n  ];\n  for (const role of commonRoles) {\n    const index = newRoleArray.findIndex(({ value }) => value === role);\n    newRoleArray.unshift(...newRoleArray.splice(index, 1));\n  }\n  newRoleArray.push(\n    ...newRoleArray.splice(\n      newRoleArray.findIndex(({ value }) => value === \"other\"),\n      1\n    )\n  );\n  return newRoleArray;\n};\n\n// FIXME: Merge creator and contributor roles vocabs to avoid merging here\n// FIXME: Memoize this function\nconst orderOptions = (optionList, contribsOptionList) => {\n  let newOptionList = optionList.concat(\n    contribsOptionList.filter(\n      (item) =>\n        !optionList.some(\n          (item2) => item2.text.toLowerCase() === item.text.toLowerCase()\n        )\n    )\n  );\n  return moveCommonRolesToTop(sortOptions(newOptionList));\n};\n\nconst creatibutorNameDisplay = (value) => {\n  const creatibutorType = _get(\n    value,\n    \"person_or_org.type\",\n    CREATIBUTOR_TYPE.PERSON\n  );\n  const isPerson = creatibutorType === CREATIBUTOR_TYPE.PERSON;\n\n  const familyName = _get(value, \"person_or_org.family_name\", \"\");\n  const givenName = _get(value, \"person_or_org.given_name\", \"\");\n  const affiliationName = _get(value, `affiliations[0].name`, \"\");\n  const name = _get(value, `person_or_org.name`);\n\n  const affiliation = affiliationName ? ` (${affiliationName})` : \"\";\n\n  if (isPerson) {\n    const givenNameSuffix = givenName ? `, ${givenName}` : \"\";\n    return `${familyName}${givenNameSuffix}${affiliation}`;\n  }\n\n  return `${name}${affiliation}`;\n};\n\nconst CreatibutorsFieldForm = ({\n  addButtonLabel = i18next.t(\"Add creator\"),\n  addingSelf,\n  setAddingSelf,\n  autocompleteNames = \"search\",\n  config,\n  currentUserprofile,\n  description,\n  id,\n  form: { values, errors, initialErrors, initialValues, touched },\n  label = i18next.t(\"Creators\"),\n  labelIcon = \"user\",\n  modal = {\n    addLabel: i18next.t(\"Add creator\"),\n    editLabel: i18next.t(\"Edit creator\"),\n  },\n  modalOpen,\n  move: formikArrayMove,\n  name: fieldPath,\n  push: formikArrayPush,\n  remove: formikArrayRemove,\n  replace: formikArrayReplace,\n  roleOptions,\n  schema,\n  setCreatibutorsTouched,\n  setModalOpen,\n  showEditForms,\n  setShowEditForms,\n}) => {\n  const creatibutorsList = getIn(values, fieldPath, []);\n  const formikInitialValues = getIn(initialValues, fieldPath, []);\n\n  const error = getIn(errors, fieldPath, null);\n  const initialError = getIn(initialErrors, fieldPath, null);\n  const creatibutorsTouched = getIn(touched, fieldPath, null);\n  const creatibutorsError =\n    (error && creatibutorsTouched) ||\n    (creatibutorsList === formikInitialValues && initialError);\n  const orderedRoleOptions = orderOptions(\n    roleOptions,\n    config.vocabularies.contributors.role\n  );\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n    setCreatibutorsTouched(true);\n  };\n\n  const handleModalClose = () => {\n    setCreatibutorsTouched(true);\n    setModalOpen(false);\n    setAddingSelf(false);\n    focusAddButtonHandler();\n  };\n\n  const handleOnContributorChange = (selectedCreatibutor, action) => {\n    console.log(\"handleOnContributorChange\");\n    setAddingSelf(false);\n    formikArrayPush(selectedCreatibutor);\n    setModalOpen(action === \"saveAndContinue\" ? true : false);\n  };\n\n  const focusAddButtonHandler = () => {\n    setTimeout(() => {\n      document.getElementById(`${fieldPath}.add-button`).focus();\n    }, 100);\n  };\n\n  const creatibutorUp = (currentIndex) => {\n    if (currentIndex > 0) {\n      formikArrayMove(currentIndex, currentIndex - 1);\n    }\n  };\n\n  const creatibutorDown = (currentIndex) => {\n    if (currentIndex < creatibutorsList.length - 1) {\n      formikArrayMove(currentIndex, currentIndex + 1);\n    }\n  };\n\n  const myAffiliations =\n    typeof currentUserprofile.affiliations === \"string\" &&\n    currentUserprofile.affiliations !== \"\"\n      ? [currentUserprofile.affiliations]\n      : currentUserprofile?.affiliations;\n  const selfCreatibutor = {\n    person_or_org: {\n      family_name: addingSelf\n        ? currentUserprofile?.family_name ||\n          currentUserprofile?.full_name ||\n          \"\"\n        : \"\",\n      given_name: addingSelf ? currentUserprofile?.given_name || \"\" : \"\",\n      name: addingSelf ? currentUserprofile?.full_name || \"\" : \"\",\n      type: \"personal\",\n    },\n    role: \"author\",\n    affiliations:\n      addingSelf && myAffiliations?.length > 0\n        ? myAffiliations.map((affiliation) => ({\n            text: affiliation,\n            key: affiliation,\n            value: affiliation,\n            name: affiliation,\n          }))\n        : [],\n  };\n\n  return (\n    <Form.Field\n      required={schema === \"creators\"}\n      className={creatibutorsError ? \"error\" : \"\"}\n    >\n      <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n      <List>\n        {creatibutorsList.map((value, index) => {\n          const key = `${fieldPath}.${index}`;\n          // const key = `${fieldPath}.${value.person_or_org.name}`;\n          const displayName = creatibutorNameDisplay(value);\n          console.log(\"key is\", key);\n\n          return (\n            <CreatibutorsFieldItem\n              key={key}\n              creatibutorsLength={creatibutorsList.length}\n              creatibutorDown={creatibutorDown}\n              creatibutorUp={creatibutorUp}\n              itemError={creatibutorsError ? error[index] : null}\n              {...{\n                displayName,\n                index,\n                roleOptions: orderedRoleOptions,\n                schema,\n                compKey: key,\n                initialCreatibutor: value,\n                removeCreatibutor: formikArrayRemove,\n                replaceCreatibutor: formikArrayReplace,\n                moveCreatibutor: formikArrayMove,\n                addLabel: modal.addLabel,\n                editLabel: modal.editLabel,\n                autocompleteNames: autocompleteNames,\n              }}\n              focusAddButtonHandler={focusAddButtonHandler}\n              modalOpen={modalOpen}\n              handleModalClose={handleModalClose}\n              handleModalOpen={handleModalOpen}\n              parentFieldPath={fieldPath}\n              setModalOpen={setModalOpen}\n              showEditForms={showEditForms}\n              setShowEditForms={setShowEditForms}\n            />\n          );\n        })}\n      </List>\n      {!modalOpen && (\n        <div>\n          <Button\n            type=\"button\"\n            icon\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-button`}\n            className=\"add-button\"\n            aria-labelledby={`${fieldPath}-field-description`}\n            onClick={() => setModalOpen(true)}\n            //  ref={this.adderRef}\n          >\n            <Icon name=\"add\" />\n            {addButtonLabel}\n          </Button>\n          <Button\n            type=\"button\"\n            icon\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-button`}\n            className=\"add-button\"\n            aria-labelledby={`${fieldPath}-field-description`}\n            onClick={() => {\n              setAddingSelf(true);\n              setTimeout(() => {\n                setModalOpen(true);\n              }, 100);\n            }}\n          >\n            <Icon name=\"add\" />\n            {\"Add myself\"}\n          </Button>\n        </div>\n      )}\n\n      {(modalOpen ||\n        (creatibutorsError && typeof creatibutorsError == \"string\")) && (\n        <CreatibutorsItemForm\n          onCreatibutorChange={handleOnContributorChange}\n          addLabel={modal.addLabel}\n          editLabel={modal.editLabel}\n          roleOptions={orderedRoleOptions}\n          schema={schema}\n          autocompleteNames={autocompleteNames}\n          focusAddButtonHandler={focusAddButtonHandler}\n          parentFieldPath={fieldPath}\n          modalOpen={modalOpen}\n          handleModalClose={handleModalClose}\n          handleModalOpen={handleModalOpen}\n          initialCreatibutor={selfCreatibutor}\n          modalAction=\"add\"\n        />\n      )}\n      {creatibutorsError && typeof error === \"string\" && (\n        <Label pointing=\"above\" prompt>\n          {error}\n        </Label>\n      )}\n      <span id={`${fieldPath}-field-description`} className=\"helptext\">\n        {description}\n      </span>\n    </Form.Field>\n  );\n};\n\nconst CreatibutorsField = ({\n  addButtonLabel = i18next.t(\"Add creator\"),\n  autocompleteNames = \"search\",\n  currentUserprofile,\n  fieldPath,\n  label = undefined,\n  labelIcon = undefined,\n  modal = {\n    addLabel: i18next.t(\"Add creator\"),\n    editLabel: i18next.t(\"Edit creator\"),\n  },\n  roleOptions = undefined,\n  schema = \"creators\",\n  ...otherProps\n}) => {\n  console.log(\n    \"CreatibutorsField called\",\n    fieldPath,\n    label,\n    labelIcon,\n    modal,\n    roleOptions,\n    schema,\n    otherProps\n  );\n  // FIXME: This state has to be managed here because the whole fieldarray is reredered and loses state on any state change; seems related to react-dnd\n  const [modalOpen, setModalOpen] = useState(false);\n  const [addingSelf, setAddingSelf] = useState(false);\n  const [showEditForms, setShowEditForms] = useState([]);\n  const [creatibutorsTouched, setCreatibutorsTouched] = useState(false);\n  const { setFieldTouched } = useFormikContext();\n\n  useEffect(() => {\n    console.log(\"useEffect creatibutorsTouched\", creatibutorsTouched);\n    // if (creatibutorsTouched) {\n    //   setFieldTouched(\"metadata.creators\", true);\n    // }\n  }, [creatibutorsTouched]);\n\n  return (\n    <FieldArray\n      name={fieldPath}\n      component={(formikProps) => (\n        <CreatibutorsFieldForm\n          {...formikProps}\n          {...otherProps}\n          {...{\n            addButtonLabel,\n            addingSelf,\n            autocompleteNames,\n            currentUserprofile,\n            fieldPath,\n            label,\n            labelIcon,\n            modalOpen,\n            roleOptions,\n            modal,\n            schema,\n            setAddingSelf,\n            setCreatibutorsTouched,\n            setModalOpen,\n            showEditForms,\n            setShowEditForms,\n          }}\n        />\n      )}\n    />\n  );\n};\n\nCreatibutorsFieldForm.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  addButtonLabel: PropTypes.string,\n  modal: PropTypes.shape({\n    addLabel: PropTypes.string.isRequired,\n    editLabel: PropTypes.string.isRequired,\n  }),\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  roleOptions: PropTypes.array.isRequired,\n  form: PropTypes.object.isRequired,\n  remove: PropTypes.func.isRequired,\n  replace: PropTypes.func.isRequired,\n  move: PropTypes.func.isRequired,\n  push: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nCreatibutorsField.propTypes = {\n  addButtonLabel: PropTypes.string,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  modal: PropTypes.shape({\n    addLabel: PropTypes.string.isRequired,\n    editLabel: PropTypes.string.isRequired,\n  }),\n  roleOptions: PropTypes.array,\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n};\n\nCreatibutorsField.defaultProps = {};\n\nexport { CreatibutorsField, CreatibutorsFieldForm, sortOptions };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021      Graz University of Technology.\n// Copyright (C) 2022      TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useState, useLayoutEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\n\nimport { SelectField } from \"react-invenio-forms\";\n// import { emptyAdditionalDescription } from \"./initialValues\";\nimport { LanguagesField } from \"@js/invenio_rdm_records\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n// import { sortOptions } from \"../../../utils\";\nimport { FieldArray, useFormikContext } from \"formik\";\nimport { TextArea } from \"@js/invenio_modular_deposit_form/replacement_components/TextArea\";\n\nconst emptyAdditionalDescription = {\n  lang: \"\",\n  description: \"\",\n  type: \"\",\n};\n\n/**\n * Sort a list of string values (options).\n * @param {list} options\n * @returns\n */\nfunction sortOptions(options) {\n  return options.sort((o1, o2) => o1.text.localeCompare(o2.text));\n}\n\nconst AdditionalDescriptionsField = ({\n  fieldPath,\n  options,\n  recordUI = {},\n  editorConfig = undefined,\n}) => {\n  const { values } = useFormikContext();\n  const [descriptionsLength, setDescriptionsLength] = useState(-1);\n  const [haveChangedNumber, setHaveChangedNumber] = useState(false);\n  const fieldPathSanitized = fieldPath.replace(/\\./g, \"-\");\n  const textFieldRef = React.createRef();\n\n  useLayoutEffect(() => {\n    if (!!haveChangedNumber) {\n      if (descriptionsLength < 0) {\n        document.getElementById(`${fieldPath}.add-button`)?.focus();\n      } else {\n        window.setTimeout(() => {\n          const nodes = document.querySelectorAll(\n            \".additional-description-item-row textarea\"\n          );\n          nodes[nodes.length - 1].focus();\n        }, 100);\n      }\n    }\n  }, [descriptionsLength]);\n\n  const handleAddNew = (arrayHelpers, newItem) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.push(newItem);\n    setDescriptionsLength(descriptionsLength + 1);\n  };\n\n  const handleRemove = (arrayHelpers, index) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.remove(index);\n    setDescriptionsLength(descriptionsLength - 1);\n  };\n\n  return (\n    <FieldArray\n      addButtonLabel={i18next.t(\"Add another description\")}\n      defaultNewValue={emptyAdditionalDescription}\n      name={fieldPath}\n      className=\"additional-descriptions\"\n      render={(arrayHelpers) => (\n        <>\n          {values.metadata.additional_descriptions.map((value, index) => {\n            const fieldPathPrefix = `${fieldPath}.${index}`;\n            const fieldPathPrefixSanitized = `${fieldPathSanitized}-${index}`;\n\n            return (\n              <div key={index} className=\"additional-description-wrapper\">\n                <Form.Group className=\"additional-description-item-row sixteen wide\">\n                  <TextArea\n                    fieldPath={`${fieldPathPrefix}.description`}\n                    id={`${fieldPathPrefix}.description`}\n                    label={i18next.t(\"Additional description\")}\n                    editorConfig={editorConfig}\n                    optimized\n                    required\n                    classnames={`fourteen wide tablet sixteen wide mobile twelve wide computer ${fieldPathPrefixSanitized}-description`}\n                    ref={textFieldRef}\n                  />\n                  <Form.Field className=\"mobile hidden two wide\">\n                    <Button\n                      aria-label={i18next.t(\"remove field\")}\n                      className=\"close-btn\"\n                      floated=\"right\"\n                      icon\n                      onClick={() => handleRemove(arrayHelpers, index)}\n                    >\n                      <Icon name=\"close\" />\n                    </Button>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group className=\"sixteen wide equal widths\">\n                  <SelectField\n                    fieldPath={`${fieldPathPrefix}.type`}\n                    id={`${fieldPathPrefix}.type`}\n                    label={i18next.t(\"Type of description\")}\n                    options={sortOptions(options.type)}\n                    required\n                    optimized\n                    search={true}\n                  />\n                  <LanguagesField\n                    serializeSuggestions={(suggestions) =>\n                      suggestions.map((item) => ({\n                        text: item.title_l10n,\n                        value: item.id,\n                        fieldPathPrefix: item.id,\n                      }))\n                    }\n                    initialOptions={\n                      recordUI?.additional_descriptions &&\n                      recordUI.additional_descriptions[index]?.lang\n                        ? [recordUI.additional_descriptions[index].lang]\n                        : []\n                    }\n                    fieldPath={`${fieldPathPrefix}.lang`}\n                    id={`${fieldPathPrefix}.lang`}\n                    label={i18next.t(\"Language\")}\n                    multiple={false}\n                    placeholder={i18next.t(\"select language\")}\n                    labelIcon=\"\"\n                    clearable\n                    selectOnBlur={false}\n                  />\n                  <Form.Field\n                    tablet={2}\n                    computer={2}\n                    mobile={0}\n                    className=\"tablet computer only two wide\"\n                  />\n                  <Form.Field\n                    tablet={0}\n                    computer={0}\n                    mobile={2}\n                    className=\"mobile only two wide\"\n                  >\n                    <Button\n                      aria-label={i18next.t(\"remove field\")}\n                      className=\"close-btn\"\n                      floated=\"right\"\n                      icon\n                      onClick={() => handleRemove(arrayHelpers, index)}\n                    >\n                      <Icon name=\"close\" />\n                    </Button>\n                  </Form.Field>\n                </Form.Group>\n              </div>\n            );\n          })}\n          <Button\n            type=\"button\"\n            onClick={() =>\n              handleAddNew(arrayHelpers, emptyAdditionalDescription)\n            }\n            icon\n            className=\"align-self-end add-btn\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-button`}\n          >\n            <Icon name=\"add\" />\n            Add another description\n          </Button>\n        </>\n      )}\n    />\n  );\n};\n\nAdditionalDescriptionsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n  recordUI: PropTypes.object,\n  editorConfig: PropTypes.object,\n};\n\nexport { AdditionalDescriptionsField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { AdditionalDescriptionsField } from \"./AdditionalDescriptionsField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { TextArea } from \"@js/invenio_modular_deposit_form/replacement_components/TextArea\";\n\nconst DescriptionsField = ({\n  classnames,\n  fieldPath,\n  label = i18next.t(\"Description\"),\n  labelIcon = \"pencil\",\n  options,\n  editorConfig = undefined,\n  recordUI = undefined,\n}) => {\n  return (\n    <>\n      <TextArea\n        className={`description-field rel-mb-1 ${classnames}`}\n        fieldPath={fieldPath}\n        editorConfig={editorConfig}\n        label={\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n        }\n        optimized\n      />\n      <AdditionalDescriptionsField\n        recordUI={recordUI}\n        options={options}\n        editorConfig={editorConfig}\n        fieldPath=\"metadata.additional_descriptions\"\n      />\n    </>\n  );\n};\n\nDescriptionsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  labelIcon: PropTypes.string,\n  editorConfig: PropTypes.object,\n  recordUI: PropTypes.object,\n  options: PropTypes.object.isRequired,\n};\n\nexport { DescriptionsField };\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _get from \"lodash/get\";\nimport { Item, Header, Radio, Label, Icon } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { FastField } from \"formik\";\n\nexport const AwardResults = withState(\n  ({\n    currentResultsState: results,\n    deserializeAward,\n    deserializeFunder,\n    computeFundingContents,\n  }) => {\n    return (\n      <FastField name=\"selectedFunding\">\n        {({ form: { values, setFieldValue } }) => {\n          return (\n            <Item.Group>\n              {results.data.hits.map((award) => {\n                let funder = award?.funder;\n                const deserializedAward = deserializeAward(award);\n                const deserializedFunder = deserializeFunder(funder);\n                const funding = {\n                  award: deserializedAward,\n                  funder: deserializedFunder,\n                };\n                let { headerContent, descriptionContent, awardOrFunder } =\n                  computeFundingContents(funding);\n\n                return (\n                  <Item\n                    key={deserializedAward.id}\n                    onClick={() => setFieldValue(\"selectedFunding\", funding)}\n                    className=\"license-item\"\n                  >\n                    <Radio\n                      checked={\n                        _get(values, \"selectedFunding.award.id\") === funding.award.id\n                      }\n                      onChange={() => setFieldValue(\"selectedFunding\", funding)}\n                    />\n                    <Item.Content className=\"license-item-content\">\n                      <Header size=\"small\">\n                        {headerContent}\n                        {awardOrFunder === \"award\"\n                          ? award.number && (\n                              <Label basic size=\"mini\">\n                                {award.number}\n                              </Label>\n                            )\n                          : \"\"}\n                        {awardOrFunder === \"award\"\n                          ? award.url && (\n                              <a\n                                href={award.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <Icon\n                                  link\n                                  name=\"external alternate\"\n                                  className=\"spaced-left\"\n                                />\n                              </a>\n                            )\n                          : \"\"}\n                      </Header>\n                      <Item.Description className=\"license-item-description\">\n                        {descriptionContent}\n                      </Item.Description>\n                    </Item.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          );\n        }}\n      </FastField>\n    );\n  }\n);\n\nAwardResults.propTypes = {\n  deserializeAward: PropTypes.func.isRequired,\n  deserializeFunder: PropTypes.func.isRequired,\n  computeFundingContents: PropTypes.func.isRequired,\n};\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Form, Header } from \"semantic-ui-react\";\nimport { TextField, RemoteSelectField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nfunction CustomAwardForm({ deserializeFunder, selectedFunding }) {\n  function deserializeFunderToDropdown(funderItem) {\n    let funderName = null;\n    let funderPID = null;\n\n    if (funderItem.name) {\n      funderName = funderItem.name;\n    }\n\n    if (funderItem.pid) {\n      funderPID = funderItem.pid;\n    }\n\n    if (!funderName && !funderPID) {\n      return {};\n    }\n\n    return {\n      text: funderName || funderPID,\n      value: funderItem.id,\n      key: funderItem.id,\n      ...(funderName && { name: funderName }),\n      ...(funderPID && { pid: funderPID }),\n    };\n  }\n\n  function serializeFunderFromDropdown(funderDropObject) {\n    return {\n      id: funderDropObject.key,\n      ...(funderDropObject.name && { name: funderDropObject.name }),\n      ...(funderDropObject.pid && { pid: funderDropObject.pid }),\n    };\n  }\n\n  return (\n    <Form>\n      <RemoteSelectField\n        fieldPath=\"selectedFunding.funder.id\"\n        suggestionAPIUrl=\"/api/funders\"\n        suggestionAPIHeaders={{\n          Accept: \"application/vnd.inveniordm.v1+json\",\n        }}\n        placeholder={i18next.t(\"Search for a funder by name\")}\n        serializeSuggestions={(funders) => {\n          return funders.map((funder) =>\n            deserializeFunderToDropdown(deserializeFunder(funder))\n          );\n        }}\n        searchInput={{\n          autoFocus: _isEmpty(selectedFunding),\n        }}\n        label={i18next.t(\"Funder\")}\n        noQueryMessage={i18next.t(\"Search for funder...\")}\n        clearable\n        allowAdditions={false}\n        multiple={false}\n        selectOnBlur={false}\n        selectOnNavigation={false}\n        required\n        search={(options) => options}\n        onValueChange={({ formikProps }, selectedFundersArray) => {\n          if (selectedFundersArray.length === 1) {\n            const selectedFunder = selectedFundersArray[0];\n            if (selectedFunder) {\n              const deserializedFunder = serializeFunderFromDropdown(selectedFunder);\n              formikProps.form.setFieldValue(\n                \"selectedFunding.funder\",\n                deserializedFunder\n              );\n            }\n          }\n        }}\n      />\n\n      <Header as=\"h3\" size=\"small\">\n        {i18next.t(\"Award information\")} ({i18next.t(\"optional\")})\n      </Header>\n      <Form.Group widths=\"equal\">\n        <TextField\n          label={i18next.t(\"Number\")}\n          placeholder={i18next.t(\"Award number\")}\n          fieldPath=\"selectedFunding.award.number\"\n        />\n        <TextField\n          label={i18next.t(\"Title\")}\n          placeholder={i18next.t(\"Award Title\")}\n          fieldPath=\"selectedFunding.award.title\"\n        />\n        <TextField\n          label={i18next.t(\"URL\")}\n          placeholder={i18next.t(\"Award URL\")}\n          fieldPath=\"selectedFunding.award.url\"\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n\nCustomAwardForm.propTypes = {\n  deserializeFunder: PropTypes.func.isRequired,\n  selectedFunding: PropTypes.object,\n};\n\nCustomAwardForm.defaultProps = {\n  selectedFunding: undefined,\n};\n\nexport default CustomAwardForm;\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\n\nimport { Dropdown } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport const FunderDropdown = withState(\n  ({ currentResultsState: awardsList, updateQueryState, currentQueryState }) => {\n    const [fundersFromFacets] = useFundersFromFacets(awardsList);\n\n    /**\n     * Trigger on funder selection.\n     * Updated the query state to filter by the selected funder.\n     *\n     * @param {*} event\n     * @param {*} data\n     */\n    function onFunderSelect(event, data) {\n      let newFilter = [];\n\n      if (data && data.value !== \"\") {\n        newFilter = [\"funders\", data.value];\n      }\n      updateQueryState({ ...currentQueryState, filters: newFilter, page: 1 });\n    }\n\n    /**\n     * Custom hook, triggered when the awards list changes.\n     * It retrieves funders from new award's facets.\n     *\n     * @param {object} awards\n     *\n     * @returns {object[]} an array of objects, each representing a facetted funder.\n     */\n    function useFundersFromFacets(awards) {\n      const [result, setResult] = React.useState([]);\n      React.useEffect(() => {\n        /**\n         * Retrieves funders from awards facets and sets the result in state 'result'.\n         */\n        function getFundersFromAwardsFacet() {\n          if (awards.loading) {\n            setResult([]);\n            return;\n          }\n\n          const funders = awards.data.aggregations?.funders?.buckets.map((agg) => {\n            return {\n              key: agg.key,\n              value: agg.key,\n              text: agg.label,\n            };\n          });\n          setResult(funders);\n        }\n\n        getFundersFromAwardsFacet();\n      }, [awards]);\n\n      return [result];\n    }\n\n    return (\n      <Dropdown\n        placeholder={i18next.t(\"Funder\")}\n        search\n        selection\n        clearable\n        scrolling\n        multiple={false}\n        options={fundersFromFacets || []}\n        allowAdditions={false}\n        onChange={onFunderSelect}\n        fluid\n        selectOnBlur={false}\n        selectOnNavigation={false}\n      />\n    );\n  }\n);\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Segment } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport function NoAwardResults({ switchToCustom }) {\n  return (\n    <Segment\n      basic\n      content={\n        <p>\n          {i18next.t(\"Did not find your award? \")}\n          <a\n            href=\"/\"\n            onClick={(e) => {\n              e.preventDefault();\n              switchToCustom();\n            }}\n          >\n            {i18next.t(\"Add a custom award.\")}\n          </a>\n        </p>\n      }\n    />\n  );\n}\n\nNoAwardResults.propTypes = {\n  switchToCustom: PropTypes.func.isRequired,\n};\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport {\n  EmptyResults,\n  Error,\n  InvenioSearchApi,\n  Pagination,\n  ReactSearchKit,\n  ResultsLoader,\n  SearchBar,\n} from \"react-searchkit\";\nimport { Grid, Modal, Container, Button } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { AwardResults } from \"./AwardResults\";\nimport CustomAwardForm from \"./CustomAwardForm\";\nimport { FunderDropdown } from \"./FunderDropdown\";\nimport { NoAwardResults } from \"./NoAwardResults\";\n\nconst ModalTypes = {\n  STANDARD: \"standard\",\n  CUSTOM: \"custom\",\n};\n\nconst ModalActions = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst StandardSchema = Yup.object().shape({\n  selectedFunding: Yup.object().shape({\n    funder: Yup.object().shape({\n      id: Yup.string().required(),\n    }),\n    award: Yup.object().shape({\n      id: Yup.string().required(),\n    }),\n  }),\n});\n\nconst CustomFundingSchema = Yup.object().shape({\n  selectedFunding: Yup.object().shape({\n    funder: Yup.object().shape({\n      id: Yup.string().required(i18next.t(\"Funder is required.\")),\n    }),\n    award: Yup.object().shape({\n      title: Yup.string().test({\n        name: \"testTitle\",\n        message: i18next.t(\"Title must be set alongside number.\"),\n        test: function testTitle(value) {\n          const { number } = this.parent;\n\n          if (number && !value) {\n            return false;\n          }\n\n          return true;\n        },\n      }),\n      number: Yup.string().test({\n        name: \"testNumber\",\n        message: i18next.t(\"Number must be set alongside title.\"),\n        test: function testNumber(value) {\n          const { title } = this.parent;\n\n          if (title && !value) {\n            return false;\n          }\n\n          return true;\n        },\n      }),\n      url: Yup.string()\n        .url(i18next.t(\"URL must be valid.\"))\n        .test({\n          name: \"validateUrlDependencies\",\n          message: i18next.t(\"URL must be set alongside title and number.\"),\n          test: function testUrl(value) {\n            const { title, number } = this.parent;\n\n            if (value && value !== \"\" && !title && !number) {\n              return false;\n            }\n\n            return true;\n          },\n        }),\n    }),\n  }),\n});\n\nfunction FundingModal({\n  action,\n  mode: initialMode,\n  trigger,\n  onAwardChange,\n  searchConfig,\n  deserializeAward,\n  deserializeFunder,\n  computeFundingContents,\n  focusAddButtonHandler,\n  ...props\n}) {\n  const [open, setOpen] = useState(false);\n  const [mode, setMode] = useState(initialMode);\n  const openModal = () => setOpen(true);\n  const closeModal = () => {\n    setMode(initialMode);\n    setOpen(false);\n    focusAddButtonHandler();\n  };\n  const onSubmit = (values, formikBag) => {\n    formikBag.setSubmitting(false);\n    formikBag.resetForm();\n    setMode(initialMode);\n    closeModal();\n    onAwardChange(values.selectedFunding);\n    focusAddButtonHandler();\n  };\n\n  const searchApi = new InvenioSearchApi(searchConfig.searchApi);\n  const customObject = mode === ModalTypes.CUSTOM ? props.initialFunding : {};\n  const initialFunding = {\n    selectedFunding: action === ModalActions.EDIT ? customObject : {},\n  };\n\n  const FundingSchema =\n    mode === ModalTypes.CUSTOM ? CustomFundingSchema : StandardSchema;\n\n  return (\n    <Formik\n      initialValues={initialFunding}\n      onSubmit={onSubmit}\n      validationSchema={FundingSchema}\n      validateOnChange={false}\n      validateOnBlur={false}\n      enableReinitialize\n    >\n      {({ values, resetForm, handleSubmit }) => (\n        <Modal\n          role=\"dialog\"\n          centered={false}\n          onOpen={openModal}\n          open={open}\n          trigger={React.cloneElement(trigger, {\n            \"aria-expanded\": open,\n            \"aria-haspopup\": \"dialog\",\n          })}\n          onClose={closeModal}\n          closeIcon\n          closeOnDimmerClick={false}\n        >\n          <Modal.Header as=\"h2\" className=\"pt-10 pb-10\">\n            {mode === \"standard\"\n              ? i18next.t(\"Add standard award\")\n              : i18next.t(\"Add custom award\")}\n          </Modal.Header>\n          <Modal.Content>\n            {mode === ModalTypes.STANDARD && (\n              <ReactSearchKit\n                searchApi={searchApi}\n                appName=\"awards\"\n                urlHandlerApi={{ enabled: false }}\n                initialQueryState={searchConfig.initialQueryState}\n              >\n                <Grid className=\"m-0\">\n                  <Grid.Row>\n                    <Grid.Column width={11} floated=\"left\" verticalAlign=\"middle\">\n                      <SearchBar\n                        placeholder={i18next.t(\"Search for awards\")}\n                        autofocus\n                        actionProps={{\n                          icon: \"search\",\n                          content: null,\n                          className: \"search\",\n                        }}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={5} floated=\"right\" textAlign=\"right\">\n                      <FunderDropdown />\n                    </Grid.Column>\n                  </Grid.Row>\n\n                  <Grid.Column width={16} className=\"pb-0\">\n                    <ResultsLoader>\n                      <EmptyResults />\n                      <Error />\n                      <AwardResults\n                        deserializeAward={deserializeAward}\n                        deserializeFunder={deserializeFunder}\n                        computeFundingContents={computeFundingContents}\n                      />\n                    </ResultsLoader>\n                    <Container textAlign=\"center\" className=\"rel-mb-1\">\n                      <Pagination />\n                    </Container>\n                  </Grid.Column>\n\n                  <Grid.Column width={16} textAlign=\"center\" className=\"pt-0 pb-0\">\n                    <NoAwardResults\n                      switchToCustom={() => {\n                        resetForm();\n                        setMode(ModalTypes.CUSTOM);\n                      }}\n                    />\n                  </Grid.Column>\n                </Grid>\n              </ReactSearchKit>\n            )}\n            {mode === ModalTypes.CUSTOM && (\n              <CustomAwardForm\n                deserializeFunder={deserializeFunder}\n                selectedFunding={values.selectedFunding}\n              />\n            )}\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={() => {\n                resetForm();\n                closeModal();\n              }}\n              icon=\"remove\"\n              content={i18next.t(\"Cancel\")}\n              floated=\"left\"\n            />\n            <Button\n              onClick={(event) => handleSubmit(event)}\n              primary\n              icon=\"checkmark\"\n              content={\n                action === ModalActions.ADD\n                  ? i18next.t(\"Add award\")\n                  : i18next.t(\"Change award\")\n              }\n            />\n          </Modal.Actions>\n        </Modal>\n      )}\n    </Formik>\n  );\n}\n\nFundingModal.propTypes = {\n  mode: PropTypes.oneOf([\"standard\", \"custom\"]).isRequired,\n  action: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  trigger: PropTypes.object.isRequired,\n  onAwardChange: PropTypes.func.isRequired,\n  searchConfig: PropTypes.shape({\n    searchApi: PropTypes.shape({\n      axios: PropTypes.shape({\n        headers: PropTypes.object,\n      }),\n    }).isRequired,\n    initialQueryState: PropTypes.object.isRequired,\n  }).isRequired,\n  deserializeAward: PropTypes.func.isRequired,\n  deserializeFunder: PropTypes.func.isRequired,\n  computeFundingContents: PropTypes.func.isRequired,\n  initialFunding: PropTypes.object,\n};\n\nFundingModal.defaultProps = {\n  initialFunding: undefined,\n};\n\nexport default FundingModal;\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Button, Icon, Label, List, Ref } from \"semantic-ui-react\";\n\nimport FundingModal from \"./FundingModal\";\nimport PropTypes from \"prop-types\";\n\nexport const FundingFieldItem = ({\n  compKey,\n  index,\n  fundingItem,\n  awardType,\n  moveFunding,\n  replaceFunding,\n  removeFunding,\n  searchConfig,\n  deserializeAward,\n  deserializeFunder,\n  computeFundingContents,\n}) => {\n  const dropRef = React.useRef(null);\n  // eslint-disable-next-line no-unused-vars\n  const [_, drag, preview] = useDrag({\n    item: { index, type: \"award\" },\n  });\n  const [{ hidden }, drop] = useDrop({\n    accept: \"award\",\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      if (monitor.isOver({ shallow: true })) {\n        moveFunding(dragIndex, hoverIndex);\n        item.index = hoverIndex;\n      }\n    },\n    collect: (monitor) => ({\n      hidden: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  let { headerContent, descriptionContent, awardOrFunder } =\n    computeFundingContents(fundingItem);\n\n  // Initialize the ref explicitely\n  drop(dropRef);\n  return (\n    <Ref innerRef={dropRef} key={compKey}>\n      <List.Item\n        key={compKey}\n        className={hidden ? \"deposit-drag-listitem hidden\" : \"deposit-drag-listitem\"}\n      >\n        <List.Content floated=\"right\">\n          <FundingModal\n            searchConfig={searchConfig}\n            onAwardChange={(selectedFunding) => {\n              replaceFunding(index, selectedFunding);\n            }}\n            mode={awardType}\n            action=\"edit\"\n            trigger={\n              <Button size=\"mini\" primary type=\"button\">\n                {i18next.t(\"Edit\")}\n              </Button>\n            }\n            deserializeAward={deserializeAward}\n            deserializeFunder={deserializeFunder}\n            computeFundingContents={computeFundingContents}\n            initialFunding={fundingItem}\n          />\n          <Button size=\"mini\" type=\"button\" onClick={() => removeFunding(index)}>\n            {i18next.t(\"Remove\")}\n          </Button>\n        </List.Content>\n\n        <Ref innerRef={drag}>\n          <List.Icon name=\"bars\" className=\"drag-anchor\" />\n        </Ref>\n        <Ref innerRef={preview}>\n          <List.Content>\n            <List.Header>\n              <>\n                <span className=\"mr-5\">{headerContent}</span>\n\n                {awardOrFunder === \"award\"\n                  ? fundingItem?.award?.number && (\n                      <Label basic size=\"mini\" className=\"mr-5\">\n                        {fundingItem.award.number}\n                      </Label>\n                    )\n                  : \"\"}\n                {awardOrFunder === \"award\"\n                  ? fundingItem?.award?.url && (\n                      <a\n                        href={fundingItem.award.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        aria-label={i18next.t(\"Open external link\")}\n                      >\n                        <Icon link name=\"external alternate\" />\n                      </a>\n                    )\n                  : \"\"}\n              </>\n            </List.Header>\n            <List.Description>\n              {descriptionContent ? descriptionContent : <br />}\n            </List.Description>\n          </List.Content>\n        </Ref>\n      </List.Item>\n    </Ref>\n  );\n};\n\nFundingFieldItem.propTypes = {\n  compKey: PropTypes.any,\n  index: PropTypes.number,\n  fundingItem: PropTypes.object,\n  awardType: PropTypes.string,\n  moveFunding: PropTypes.func.isRequired,\n  replaceFunding: PropTypes.func.isRequired,\n  removeFunding: PropTypes.func.isRequired,\n  searchConfig: PropTypes.object.isRequired,\n  deserializeAward: PropTypes.func.isRequired,\n  deserializeFunder: PropTypes.func.isRequired,\n  computeFundingContents: PropTypes.func.isRequired,\n};\n\nFundingFieldItem.defaultProps = {\n  compKey: undefined,\n  index: undefined,\n  fundingItem: undefined,\n  awardType: undefined,\n};\n","// This file is part of InvenioVocabularies\n// Copyright (C) 2021-2023 CERN.\n// Copyright (C) 2021 Northwestern University.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldArray, getIn } from \"formik\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import { DndProvider } from \"react-dnd\";\nimport { Button, Form, Icon, List } from \"semantic-ui-react\";\nimport { FieldLabel } from \"react-invenio-forms\";\n// import { GlobalDndContext } from \"./GlobalDndContext\";\n\nimport { FundingFieldItem } from \"./FundingFieldItem\";\nimport FundingModal from \"./FundingModal\";\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nfunction FundingFieldForm(props) {\n  const {\n    label,\n    labelIcon,\n    fieldPath,\n    form: { values },\n    move: formikArrayMove,\n    push: formikArrayPush,\n    remove: formikArrayRemove,\n    replace: formikArrayReplace,\n    required,\n    deserializeAward: deserializeAwardFunc,\n    deserializeFunder: deserializeFunderFunc,\n    computeFundingContents: computeFundingContentsFunc,\n    searchConfig,\n  } = props;\n\n  const focusAddButtonHandler = () => {\n    document.getElementById(`${fieldPath}.add-button`).focus();\n  }\n\n  const deserializeAward = deserializeAwardFunc\n    ? deserializeAwardFunc\n    : (award) => ({\n        title: award?.title_l10n,\n        number: award.number,\n        funder: award.funder ?? \"\",\n        id: award.id,\n        ...(award.identifiers && { identifiers: award.identifiers }),\n        ...(award.acronym && { acronym: award.acronym }),\n      });\n\n  const deserializeFunder = deserializeFunderFunc\n    ? deserializeFunderFunc\n    : (funder) => ({\n        id: funder.id,\n        name: funder.name,\n        ...(funder.pid && { pid: funder.pid }),\n        ...(funder.country && { country: funder.country }),\n        ...(funder.identifiers && { identifiers: funder.identifiers }),\n      });\n\n  const computeFundingContents = computeFundingContentsFunc\n    ? computeFundingContentsFunc\n    : (funding) => {\n        let headerContent,\n          descriptionContent = \"\";\n        let awardOrFunder = \"award\";\n        if (funding.award) {\n          headerContent = funding.award.title;\n        }\n\n        if (funding.funder) {\n          const funderName =\n            funding?.funder?.name ?? funding.funder?.title ?? funding?.funder?.id ?? \"\";\n          descriptionContent = funderName;\n          if (!headerContent) {\n            awardOrFunder = \"funder\";\n            headerContent = funderName;\n            descriptionContent = \"\";\n          }\n        }\n\n        return { headerContent, descriptionContent, awardOrFunder };\n      };\n  return (\n    // <DndProvider backend={HTML5Backend}>\n    // <GlobalDndContext>\n      <Form.Field required={required}>\n        <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n        <List>\n          {getIn(values, fieldPath, []).map((value, index) => {\n            const key = `${fieldPath}.${index}`;\n            // if award does not exist or has no id, it's a custom one\n            const awardType = value?.award?.id ? \"standard\" : \"custom\";\n            return (\n              <FundingFieldItem\n                key={key}\n                {...{\n                  index,\n                  compKey: key,\n                  fundingItem: value,\n                  awardType,\n                  moveFunding: formikArrayMove,\n                  replaceFunding: formikArrayReplace,\n                  removeFunding: formikArrayRemove,\n                  searchConfig: searchConfig,\n                  computeFundingContents: computeFundingContents,\n                  deserializeAward: deserializeAward,\n                  deserializeFunder: deserializeFunder,\n                }}\n              />\n            );\n          })}\n          <FundingModal\n            searchConfig={searchConfig}\n            trigger={\n              <Button\n                type=\"button\"\n                key=\"custom\"\n                id={`${fieldPath}.add-button`}\n                icon\n                labelPosition=\"left\"\n                className=\"mb-5 add-button\"\n              >\n                <Icon name=\"add\" />\n                {i18next.t(\"Add award from list\")}\n              </Button>\n            }\n            onAwardChange={(selectedFunding) => {\n              formikArrayPush(selectedFunding);\n            }}\n            mode=\"standard\"\n            action=\"add\"\n            deserializeAward={deserializeAward}\n            deserializeFunder={deserializeFunder}\n            computeFundingContents={computeFundingContents}\n            focusAddButtonHandler={focusAddButtonHandler}\n          />\n          <FundingModal\n            searchConfig={searchConfig}\n            trigger={\n              <Button type=\"button\" key=\"custom\" icon\n               className=\"add-button\"\n               labelPosition=\"left\"\n              >\n                <Icon name=\"add\" />\n                {i18next.t(\"Add custom\")}\n              </Button>\n            }\n            onAwardChange={(selectedFunding) => {\n              formikArrayPush(selectedFunding);\n            }}\n            mode=\"custom\"\n            action=\"add\"\n            deserializeAward={deserializeAward}\n            deserializeFunder={deserializeFunder}\n            computeFundingContents={computeFundingContents}\n            focusAddButtonHandler={focusAddButtonHandler}\n          />\n        </List>\n      </Form.Field>\n    // {/* </DndProvider> */}\n    // {/* </GlobalDndContext> */}\n  );\n}\n\nFundingFieldForm.propTypes = {\n  label: PropTypes.node,\n  labelIcon: PropTypes.node,\n  fieldPath: PropTypes.string.isRequired,\n  form: PropTypes.object,\n  move: PropTypes.func,\n  push: PropTypes.func,\n  remove: PropTypes.func,\n  replace: PropTypes.func,\n  required: PropTypes.bool,\n  deserializeAward: PropTypes.func,\n  deserializeFunder: PropTypes.func,\n  computeFundingContents: PropTypes.func,\n  searchConfig: PropTypes.object,\n};\n\nFundingFieldForm.defaultProps = {\n  label: undefined,\n  labelIcon: undefined,\n  form: undefined,\n  move: undefined,\n  push: undefined,\n  remove: undefined,\n  replace: undefined,\n  required: undefined,\n  deserializeAward: undefined,\n  deserializeFunder: undefined,\n  computeFundingContents: undefined,\n  searchConfig: undefined,\n};\n\nexport function FundingField(props) {\n  const { fieldPath } = props;\n  return (\n    <FieldArray\n      name={fieldPath}\n      component={(formikProps) => <FundingFieldForm {...formikProps} {...props} />}\n    />\n  );\n}\n\nFundingField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  searchConfig: PropTypes.object.isRequired,\n  required: PropTypes.bool,\n  deserializeAward: PropTypes.func,\n  deserializeFunder: PropTypes.func,\n  computeFundingContents: PropTypes.func,\n};\n\nFundingField.defaultProps = {\n  label: \"Awards\",\n  labelIcon: \"money bill alternate outline\",\n  required: false,\n  deserializeAward: undefined,\n  deserializeFunder: undefined,\n  computeFundingContents: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { ArrayField, FieldLabel, GroupField } from \"react-invenio-forms\";\nimport { Button, Form, Grid, Icon } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n// import { emptyIdentifier } from \"./initialValues\";\nimport { FieldArray, Field, useFormikContext } from \"formik\";\nimport { TextField } from \"@js/invenio_modular_deposit_form/replacement_components/TextField\";\nimport { SelectField } from \"@js/invenio_modular_deposit_form/replacement_components/SelectField\";\n\nconst emptyIdentifier = {\n  scheme: \"\",\n  identifier: \"\",\n};\n\nconst emptyURL = {\n  scheme: \"url\",\n  identifier: \"\",\n};\n\n/** Identifiers array component */\nexport const IdentifiersField = ({\n  fieldPath,\n  description,\n  placeholder,\n  label = i18next.t(\"Identifiers\"),\n  labelIcon = \"barcode\",\n  required = false,\n  schemeOptions = undefined,\n  showEmptyValue = false,\n}) => {\n  const { values, setFieldValue } = useFormikContext();\n  const [identifiersLength, setIdentifiersLength] = useState(0);\n  const [haveChangedNumber, setHaveChangedNumber] = useState(false);\n  const addButtonLabel = i18next.t(\"Add identifier\");\n\n  useEffect(() => {\n    if (!!haveChangedNumber) {\n      if (identifiersLength < 0) {\n        document.getElementById(`${fieldPath}.add-url-button`)?.focus();\n      } else {\n        document\n          .getElementById(`${fieldPath}.${identifiersLength}.identifier`)\n          ?.focus();\n      }\n    }\n  }, [identifiersLength]);\n\n  // useEffect(() => {\n  //   if (values.metadata.identifiers.length < 1) {\n  //     setFieldValue(fieldPath, [emptyURL]);\n  //   }\n  // }, []);\n\n  const handleAddNew = (arrayHelpers, newItem) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.push(newItem);\n    setIdentifiersLength(identifiersLength + 1);\n  };\n\n  const handleRemove = (arrayHelpers, index) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.remove(index);\n    setIdentifiersLength(identifiersLength - 1);\n  };\n\n  const filterEmptyIdentifiers = (e) => {\n    // Get the parent element\n    const parentElement = e.target.closest(\".fields\");\n\n    // Get all sibling elements\n    const siblingElements = Array.from(parentElement.querySelectorAll(\"*\"));\n\n    // Check if any sibling elements have focus\n    // wait for the focus to reach the sibling element\n    setTimeout(() => {\n      const siblingHasFocus = siblingElements.some(\n        (element) =>\n          element.firstElementChild === document.activeElement ||\n          (document.activeElement.id &&\n            element.id.includes(document.activeElement.id))\n      );\n      if (values.metadata.identifiers.length && !siblingHasFocus) {\n        let filteredIdentifiers = values.metadata.identifiers.reduce(\n          (newList, item) => {\n            if (item.identifier !== \"\" && item.scheme !== \"\")\n              newList.push(item);\n            return newList;\n          },\n          []\n        );\n        setIdentifiersLength(filteredIdentifiers.length - 1);\n        setFieldValue(\"metadata.identifiers\", filteredIdentifiers);\n      }\n    }, 10);\n  };\n\n  return (\n    <FieldArray\n      name={fieldPath}\n      id={fieldPath}\n      className=\"invenio-array-field\"\n      showEmptyValue={showEmptyValue}\n      render={(arrayHelpers) => (\n        <>\n          <Form.Field required={required}>\n            <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          </Form.Field>\n\n          {values.metadata.identifiers.map(({ scheme, identifier }, index) => {\n            const fieldPathPrefix = `${fieldPath}.${index}`;\n            const isUrl = scheme === \"url\";\n            const hasText = !!identifier || identifier !== \"\";\n            const hasScheme = !!scheme || scheme !== \"\";\n            return (\n              <Form.Group\n                id={`${fieldPath}.${index}`}\n                key={index}\n                className=\"identifier-item-row\"\n                onBlur={(e) => {\n                  filterEmptyIdentifiers(e);\n                }}\n              >\n                {/* <GroupField key={index} inline> */}\n                <TextField\n                  fieldPath={`${fieldPathPrefix}.identifier`}\n                  label={\n                    <label>\n                      <Icon name={!isUrl ? labelIcon : \"linkify\"} />\n                      {i18next.t(!isUrl ? \"Identifier\" : \"URL\")}\n                    </label>\n                  }\n                  required={!isUrl && hasScheme}\n                  id={`${fieldPathPrefix}.identifier`}\n                  width={!!isUrl ? 14 : 9}\n                  fluid={false}\n                  onBlur={(e) => {\n                    filterEmptyIdentifiers(e);\n                  }}\n                />\n                {schemeOptions && !isUrl && (\n                  <SelectField\n                    fieldPath={`${fieldPathPrefix}.scheme`}\n                    id={`${fieldPathPrefix}.scheme`}\n                    label={i18next.t(\"Scheme\")}\n                    options={schemeOptions}\n                    optimized\n                    required={!isUrl && hasText}\n                    width={5}\n                  />\n                )}\n                {!schemeOptions && (\n                  <TextField\n                    fieldPath={`${fieldPathPrefix}.scheme`}\n                    id={`${fieldPathPrefix}.scheme`}\n                    label={i18next.t(\"Scheme\")}\n                    required\n                    width={5}\n                    fluid={false}\n                  />\n                )}\n                <Form.Field width={2}>\n                  <Button\n                    aria-label={i18next.t(\"Remove field\")}\n                    className=\"close-btn\"\n                    icon=\"close\"\n                    onClick={() => handleRemove(arrayHelpers, index)}\n                  />\n                </Form.Field>\n                {description && (\n                  <label className=\"helptext mb-0\">{description}</label>\n                )}\n              </Form.Group>\n            );\n          })}\n          <Button\n            type=\"button\"\n            onClick={() => handleAddNew(arrayHelpers, emptyURL)}\n            icon\n            className=\"align-self-end add-button\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-url-button`}\n          >\n            <Icon name=\"add\" />\n            Add URL\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => handleAddNew(arrayHelpers, emptyIdentifier)}\n            icon\n            className=\"align-self-end add-button\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-id-button`}\n          >\n            <Icon name=\"add\" />\n            Add another identifier\n          </Button>\n        </>\n      )}\n    />\n  );\n};\n\nIdentifiersField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  schemeOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  showEmptyValue: PropTypes.bool,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Menu } from \"semantic-ui-react\";\n\nexport const LicenseFilter = ({\n  updateQueryFilters,\n  userSelectionFilters,\n  filterValue,\n  label,\n  title,\n}) => {\n  const _isChecked = (userSelectionFilters) => {\n    const isFilterActive =\n      userSelectionFilters.filter((filter) => filter[1] === filterValue[1]).length > 0;\n    return isFilterActive;\n  };\n\n  const onToggleClicked = () => {\n    updateQueryFilters(userSelectionFilters.concat([filterValue]));\n  };\n\n  const isChecked = _isChecked(userSelectionFilters);\n  return isChecked ? (\n    <Menu.Item name={label} active as={Button} primary onClick={onToggleClicked}>\n      {title}\n    </Menu.Item>\n  ) : (\n    <Menu.Item name={label} onClick={onToggleClicked}>\n      {title}\n    </Menu.Item>\n  );\n};\n\nLicenseFilter.propTypes = {\n  updateQueryFilters: PropTypes.func.isRequired,\n  userSelectionFilters: PropTypes.array.isRequired,\n  filterValue: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport { Item, Header, Radio } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport _get from \"lodash/get\";\nimport { FastField } from \"formik\";\n\nexport const LicenseResults = withState(\n  ({ currentResultsState: results, serializeLicenses }) => {\n    const serializeLicenseResult = serializeLicenses\n      ? serializeLicenses\n      : (result) => ({\n          title: result.title_l10n,\n          description: result.description_l10n,\n          id: result.id,\n        });\n    return (\n      <FastField name=\"selectedLicense\">\n        {({ form: { values, setFieldValue } }) => (\n          <Item.Group>\n            {results.data.hits.map((result) => {\n              const title = result[\"title_l10n\"];\n              const description = result[\"description_l10n\"];\n              return (\n                <Item\n                  key={title}\n                  onClick={() =>\n                    setFieldValue(\"selectedLicense\", serializeLicenseResult(result))\n                  }\n                  className=\"license-item mb-15\"\n                >\n                  <Radio\n                    checked={_get(values, \"selectedLicense.title\") === title}\n                    onChange={() =>\n                      setFieldValue(\"selectedLicense\", serializeLicenseResult(result))\n                    }\n                    {...(!description && { className: \"mt-0\" })}\n                  />\n                  <Item.Content className=\"license-item-content\">\n                    <Header size=\"small\" className=\"mt-0\">\n                      {title}\n                    </Header>\n                    {description && (\n                      <Item.Description className=\"license-item-description\">\n                        {description}\n                      </Item.Description>\n                    )}\n                  </Item.Content>\n                </Item>\n              );\n            })}\n          </Item.Group>\n        )}\n      </FastField>\n    );\n  }\n);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { TextAreaField, TextField } from \"react-invenio-forms\";\nimport { OverridableContext } from \"react-overridable\";\nimport {\n  EmptyResults,\n  Error,\n  InvenioSearchApi,\n  ReactSearchKit,\n  ResultsLoader,\n  SearchBar,\n  Toggle,\n} from \"react-searchkit\";\nimport { Button, Form, Grid, Header, Menu, Modal } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { LicenseFilter } from \"./LicenseFilter\";\nimport { LicenseResults } from \"./LicenseResults\";\n\nconst overriddenComponents = {\n  \"SearchFilters.Toggle\": LicenseFilter,\n};\n\nconst ModalTypes = {\n  STANDARD: \"standard\",\n  CUSTOM: \"custom\",\n};\n\nconst ModalActions = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst LicenseSchema = Yup.object().shape({\n  selectedLicense: Yup.object().shape({\n    title: Yup.string().required(i18next.t(\"Title is a required field.\")),\n    link: Yup.string().url(i18next.t(\"Link must be a valid URL\")),\n  }),\n});\n\nexport class LicenseModal extends Component {\n  state = {\n    open: false,\n  };\n\n  openModal = () => {\n    this.setState({ open: true });\n  };\n\n  closeModal = () => {\n    this.setState({ open: false });\n    this.props.focusAddButtonHandler(this.props.mode);\n  };\n\n  onSubmit = (values) => {\n    // We have to close the modal first because onLicenseChange and passing\n    // license as an object makes React get rid of this component. Otherwise\n    // we get a memory leak warning.\n    const { onLicenseChange } = this.props;\n    this.closeModal();\n    onLicenseChange(values.selectedLicense);\n  };\n\n  render() {\n    const {\n      mode,\n      trigger,\n      action,\n      searchConfig,\n      serializeLicenses,\n      initialLicense: initialLicenseProp,\n    } = this.props;\n    const { open } = this.state;\n\n    const initialLicense = initialLicenseProp || {\n      title: \"\",\n      description: \"\",\n      id: null,\n      link: \"\",\n    };\n\n    const searchApi = new InvenioSearchApi(searchConfig.searchApi);\n    return (\n      <Formik\n        initialValues={{\n          selectedLicense: initialLicense,\n        }}\n        onSubmit={this.onSubmit}\n        validationSchema={LicenseSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ handleSubmit, resetForm }) => (\n          <Modal\n            onOpen={() => this.openModal()}\n            open={open}\n            trigger={trigger}\n            onClose={this.closeModal}\n            closeIcon\n            closeOnDimmerClick={false}\n          >\n            <Modal.Header as=\"h6\" className=\"pt-10 pb-10\">\n              <Grid>\n                <Grid.Column floated=\"left\">\n                  <Header as=\"h2\">\n                    {action === ModalActions.ADD\n                      ? i18next.t(`Add {{mode}} license`, {\n                          mode: mode,\n                        })\n                      : i18next.t(`Change {{mode}} license`, {\n                          mode: mode,\n                        })}\n                  </Header>\n                </Grid.Column>\n              </Grid>\n            </Modal.Header>\n            <Modal.Content scrolling>\n              {mode === ModalTypes.STANDARD && (\n                <OverridableContext.Provider value={overriddenComponents}>\n                  <ReactSearchKit\n                    searchApi={searchApi}\n                    appName=\"licenses\"\n                    urlHandlerApi={{ enabled: false }}\n                    initialQueryState={searchConfig.initialQueryState}\n                  >\n                    <Grid>\n                      <Grid.Row>\n                        <Grid.Column width={8} floated=\"left\" verticalAlign=\"middle\">\n                          <SearchBar\n                            placeholder={i18next.t(\"Search\")}\n                            autofocus\n                            actionProps={{\n                              icon: \"search\",\n                              content: null,\n                              className: \"search\",\n                            }}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={8} textAlign=\"right\" floated=\"right\">\n                          <Menu compact>\n                            <Toggle\n                              title={i18next.t(\"Recommended\")}\n                              label=\"recommended\"\n                              filterValue={[\"tags\", \"recommended\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"All\")}\n                              label=\"all\"\n                              filterValue={[\"tags\", \"all\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"Data\")}\n                              label=\"data\"\n                              filterValue={[\"tags\", \"data\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"Software\")}\n                              label=\"software\"\n                              filterValue={[\"tags\", \"software\"]}\n                            />\n                          </Menu>\n                        </Grid.Column>\n                      </Grid.Row>\n                      <Grid.Row verticalAlign=\"middle\">\n                        <Grid.Column>\n                          <ResultsLoader>\n                            <EmptyResults />\n                            <Error />\n                            <LicenseResults\n                              {...(serializeLicenses && {\n                                serializeLicenses,\n                              })}\n                            />\n                          </ResultsLoader>\n                        </Grid.Column>\n                      </Grid.Row>\n                    </Grid>\n                  </ReactSearchKit>\n                </OverridableContext.Provider>\n              )}\n              {mode === ModalTypes.CUSTOM && (\n                <Form>\n                  <TextField\n                    label={i18next.t(\"Title\")}\n                    placeholder={i18next.t(\"License title\")}\n                    fieldPath=\"selectedLicense.title\"\n                    required\n                  />\n                  <TextAreaField\n                    fieldPath=\"selectedLicense.description\"\n                    label={i18next.t(\"Description\")}\n                  />\n                  <TextField\n                    label={i18next.t(\"Link\")}\n                    placeholder={i18next.t(\"License link\")}\n                    fieldPath=\"selectedLicense.link\"\n                  />\n                </Form>\n              )}\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                name=\"cancel\"\n                onClick={() => {\n                  resetForm();\n                  this.closeModal();\n                }}\n                icon=\"remove\"\n                labelPosition=\"left\"\n                content={i18next.t(\"Cancel\")}\n                floated=\"left\"\n              />\n              <Button\n                name=\"submit\"\n                onClick={(event) => handleSubmit(event)}\n                primary\n                icon=\"checkmark\"\n                labelPosition=\"left\"\n                content={\n                  action === ModalActions.ADD\n                    ? i18next.t(\"Add license\")\n                    : i18next.t(\"Change license\")\n                }\n              />\n            </Modal.Actions>\n          </Modal>\n        )}\n      </Formik>\n    );\n  }\n}\n\nLicenseModal.propTypes = {\n  mode: PropTypes.oneOf([\"standard\", \"custom\"]).isRequired,\n  action: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  initialLicense: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n  }),\n  trigger: PropTypes.object.isRequired,\n  onLicenseChange: PropTypes.func.isRequired,\n  searchConfig: PropTypes.shape({\n    searchApi: PropTypes.shape({\n      axios: PropTypes.shape({\n        headers: PropTypes.object,\n      }),\n    }).isRequired,\n    initialQueryState: PropTypes.shape({\n      filters: PropTypes.arrayOf(PropTypes.array),\n    }).isRequired,\n  }).isRequired,\n  serializeLicenses: PropTypes.func,\n  focusAddButtonHandler: PropTypes.func,\n};\n\nLicenseModal.defaultProps = {\n  initialLicense: undefined,\n  serializeLicenses: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Button, List, Ref } from \"semantic-ui-react\";\nimport _truncate from \"lodash/truncate\";\nimport { LicenseModal } from \"./LicenseModal\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\n\nexport const LicenseFieldItem = ({\n  license,\n  moveLicense,\n  replaceLicense,\n  removeLicense,\n  searchConfig,\n  serializeLicenses,\n}) => {\n  const dropRef = React.useRef(null);\n\n  const [, drag, preview] = useDrag({\n    item: { index: license.index, type: \"license\" },\n  });\n  const [{ hidden }, drop] = useDrop({\n    accept: \"license\",\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = license.index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      if (monitor.isOver({ shallow: true })) {\n        moveLicense(dragIndex, hoverIndex);\n        item.index = hoverIndex;\n      }\n    },\n    collect: (monitor) => ({\n      hidden: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  // Initialize the ref explicitely\n  drop(dropRef);\n  return (\n    <Ref innerRef={dropRef} key={license.key}>\n      <List.Item\n        key={license.key}\n        className={\n          hidden ? \"deposit-drag-listitem hidden\" : \"deposit-drag-listitem\"\n        }\n      >\n        <List.Content floated=\"right\">\n          <LicenseModal\n            searchConfig={searchConfig}\n            onLicenseChange={(selectedLicense) => {\n              replaceLicense(license.index, selectedLicense);\n            }}\n            mode={license.type}\n            initialLicense={license.initial}\n            action=\"edit\"\n            trigger={\n              <Button size=\"mini\" primary type=\"button\">\n                {i18next.t(\"Change\")}\n              </Button>\n            }\n            serializeLicenses={serializeLicenses}\n          />\n          <Button\n            size=\"mini\"\n            type=\"button\"\n            icon=\"close\"\n            onClick={() => {\n              removeLicense(license.index);\n            }}\n            aria-label={i18next.t(\"Remove\")}\n            negative\n          />\n        </List.Content>\n        <Ref innerRef={drag}>\n          <List.Icon name=\"bars\" className=\"drag-anchor\" />\n        </Ref>\n        <Ref innerRef={preview}>\n          <List.Content>\n            <List.Header>{license.title}</List.Header>\n            {license.description && (\n              <List.Description>\n                {_truncate(license.description, { length: 300 })}\n              </List.Description>\n            )}\n            {license.link && (\n              <span>\n                <a\n                  href={license.link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"license-read-more\"\n                >\n                  {license.description && i18next.t(\"Read more\")}\n                </a>\n              </span>\n            )}\n          </List.Content>\n        </Ref>\n      </List.Item>\n    </Ref>\n  );\n};\n\nLicenseFieldItem.propTypes = {\n  license: PropTypes.object.isRequired,\n  moveLicense: PropTypes.func.isRequired,\n  replaceLicense: PropTypes.func.isRequired,\n  removeLicense: PropTypes.func.isRequired,\n  searchConfig: PropTypes.object.isRequired,\n  serializeLicenses: PropTypes.func,\n};\n\nLicenseFieldItem.defaultProps = {\n  serializeLicenses: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _find from \"lodash/find\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn, FieldArray } from \"formik\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { Button, Form, Icon, List } from \"semantic-ui-react\";\n\nimport { LicenseModal } from \"./license_field_components/LicenseModal\";\nimport { LicenseFieldItem } from \"./license_field_components/LicenseFieldItem\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\n/**\n * The user-facing license.\n *\n */\nclass VisibleLicense {\n  /**\n   * Constructor.\n   *\n   * @param {array} uiRights\n   * @param {object} right\n   * @param {int} index\n   */\n  constructor(uiRights, right, index) {\n    this.index = index;\n    this.type = right.id ? \"standard\" : \"custom\";\n    this.key = right.id || right.title;\n    this.initial = this.type === \"custom\" ? right : null;\n\n    let uiRight =\n      _find(\n        uiRights,\n        right.id ? (o) => o.id === right.id : (o) => o.title === right.title\n      ) || {};\n\n    this.description = uiRight.description_l10n || right.description || \"\";\n    this.title = uiRight.title_l10n || right.title || \"\";\n    this.link =\n      (uiRight.props && uiRight.props.url) ||\n      uiRight.link ||\n      (right.props && right.props.url) ||\n      right.link ||\n      \"\";\n  }\n}\n\nclass LicenseFieldForm extends Component {\n  render() {\n    const {\n      label,\n      labelIcon,\n      fieldPath,\n      uiFieldPath,\n      form: { values },\n      move: formikArrayMove,\n      push: formikArrayPush,\n      remove: formikArrayRemove,\n      replace: formikArrayReplace,\n      required,\n      searchConfig,\n      serializeLicenses,\n    } = this.props;\n\n    const uiRights = getIn(values, uiFieldPath, []);\n\n    const focusAddButtonHandler = (mode) => {\n        document.getElementById(`${fieldPath}.add-${mode}-button`).focus();\n    }\n\n    return (\n        <Form.Field required={required}>\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          <List>\n            {getIn(values, fieldPath, []).map((value, index) => {\n              const license = new VisibleLicense(uiRights, value, index);\n              return (\n                <LicenseFieldItem\n                  key={license.key}\n                  license={license}\n                  moveLicense={formikArrayMove}\n                  replaceLicense={formikArrayReplace}\n                  removeLicense={formikArrayRemove}\n                  searchConfig={searchConfig}\n                  serializeLicenses={serializeLicenses}\n                />\n              );\n            })}\n            <LicenseModal\n              searchConfig={searchConfig}\n              trigger={\n                <Button type=\"button\"\n                  id={`${fieldPath}.add-standard-button`}\n                  key=\"standard\" icon labelPosition=\"left\" className=\"add-btn\"\n                >\n                  <Icon name=\"add\" />\n                  {i18next.t(\"Add standard\")}\n                </Button>\n              }\n              onLicenseChange={(selectedLicense) => {\n                formikArrayPush(selectedLicense);\n              }}\n              mode=\"standard\"\n              action=\"add\"\n              serializeLicenses={serializeLicenses}\n              focusAddButtonHandler={focusAddButtonHandler}\n            />\n            <LicenseModal\n              searchConfig={searchConfig}\n              trigger={\n                <Button type=\"button\"\n                  id={`${fieldPath}.add-custom-button`}\n                  key=\"custom\"\n                  className=\"add-btn\"\n                  icon\n                  labelPosition=\"left\"\n                >\n                  <Icon name=\"add\" />\n                  {i18next.t(\"Add custom\")}\n                </Button>\n              }\n              onLicenseChange={(selectedLicense) => {\n                formikArrayPush(selectedLicense);\n              }}\n              mode=\"custom\"\n              action=\"add\"\n              focusAddButtonHandler={focusAddButtonHandler}\n            />\n          </List>\n        </Form.Field>\n    );\n  }\n}\n\nLicenseFieldForm.propTypes = {\n  label: PropTypes.node.isRequired,\n  labelIcon: PropTypes.node,\n  fieldPath: PropTypes.string.isRequired,\n  uiFieldPath: PropTypes.string,\n  form: PropTypes.object.isRequired,\n  move: PropTypes.func.isRequired,\n  push: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  replace: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  searchConfig: PropTypes.object.isRequired,\n  serializeLicenses: PropTypes.func,\n};\n\nLicenseFieldForm.defaultProps = {\n  labelIcon: undefined,\n  uiFieldPath: undefined,\n  serializeLicenses: undefined,\n};\n\nexport class LicenseField extends Component {\n  render() {\n    const { fieldPath } = this.props;\n    return (\n      <FieldArray\n        name={fieldPath}\n        component={(formikProps) => (\n          <LicenseFieldForm {...formikProps} {...this.props} />\n        )}\n      />\n    );\n  }\n}\n\nLicenseField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  searchConfig: PropTypes.object.isRequired,\n  required: PropTypes.bool,\n  serializeLicenses: PropTypes.func,\n  uiFieldPath: PropTypes.string,\n};\n\nLicenseField.defaultProps = {\n  label: i18next.t(\"Licenses\"),\n  uiFieldPath: \"ui.rights\",\n  labelIcon: \"drivers license\",\n  required: false,\n  serializeLicenses: undefined,\n};\n","// This file is part of the Knowledge Commons Repository\n// a customized deployment of InvenioRDM\n// Copyright (C) 2023 MESH Research.\n// InvenioRDM Copyright (C) 2023 CERN.\n//\n// Invenio App RDM and the Knowledge Commons Repository are free software;\n// you can redistribute them and/or modify them\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { useFormikContext } from \"formik\";\nimport PropTypes from \"prop-types\";\n\n\nconst MetadataOnlyToggle = (props) => {\nconst { filesEnabled } = props;\nconst { setFieldValue } = useFormikContext();\n\nconst handleOnChangeMetadataOnly = () => {\n    setFieldValue(\"files.enabled\", !filesEnabled);\n    setFieldValue(\"access.files\", \"public\");\n};\n\nreturn (\n    <Checkbox\n    toggle\n    label=\"Metadata-only record\"\n    onChange={handleOnChangeMetadataOnly}\n    />\n);\n};\n\nMetadataOnlyToggle.propTypes = {\n    filesEnabled: PropTypes.bool.isRequired,\n};\n\nexport { MetadataOnlyToggle };","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useFormikContext } from \"formik\";\nimport { object } from \"yup\";\n\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport {\n  Checkbox,\n  Dropdown,\n  Form,\n  Label,\n  Icon,\n  Message,\n} from \"semantic-ui-react\";\n\n//   original helpText:\n//     \"In case your upload was already published elsewhere, please use the date of the first publication. Format: YYYY-MM-DD, YYYY-MM, or YYYY. For intervals use DATE/DATE, e.g. 1939/1945.\"\n\nconst DateDropdown = ({\n  name,\n  unit,\n  value,\n  options,\n  position,\n  useRange,\n  fieldPath,\n  handleDropdownChange,\n  error,\n}) => {\n  return (\n    <Form.Field>\n      <FieldLabel\n        htmlFor={`${fieldPath}.inputs.${name}`}\n        label={`${useRange ? i18next.t(position) + \" \" : \"\"}${i18next.t(\n          unit\n        )}`}\n        id={`${fieldPath}.${name}.label`}\n      />\n      <Dropdown\n        search\n        selection\n        id={`${fieldPath}.inputs.${name}`}\n        name={name}\n        options={options}\n        value={value}\n        onChange={handleDropdownChange}\n        error={error}\n      />\n    </Form.Field>\n  );\n};\n\nconst PublicationDateField = ({\n  fieldPath,\n  label = i18next.t(\"Publication Date\"),\n  labelIcon = \"calendar\",\n  required = true,\n}) => {\n  const helpText =\n    \"If this work is already published elsewhere, please use the date of the first publication.\";\n  const { setFieldValue, values, touched, setFieldTouched } =\n    useFormikContext();\n  const currentDate = new Date();\n  const currentYear = String(currentDate.getFullYear());\n  const currentDay = String(currentDate.getDate()).padStart(2, \"0\");\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based in JavaScript\n  const [yearValue, setYearValue] = useState(currentYear);\n  const [monthValue, setMonthValue] = useState(currentMonth);\n  const [dayValue, setDayValue] = useState(currentDay);\n  const [endYearValue, setEndYearValue] = useState(null);\n  const [endMonthValue, setEndMonthValue] = useState(null);\n  const [endDayValue, setEndDayValue] = useState(null);\n  const [dateValue, setDateValue] = useState(\n    [yearValue, monthValue, dayValue].join(\"-\")\n  );\n  const [useRange, setUseRange] = useState(false);\n\n  useEffect(() => {\n    const publicationDate = values.metadata.publication_date;\n    if (publicationDate) {\n      const setDates = (year, month, day) => {\n        setYearValue(year ? year : null);\n        setMonthValue(month ? month : null);\n        setDayValue(day ? day : null);\n      };\n      if (publicationDate.includes(\"/\")) {\n        const [start, end] = publicationDate.split(\"/\");\n        const [startYear, startMonth, startDay] = start.split(\"-\");\n        const [endYear, endMonth, endDay] = end.split(\"-\");\n        setDates(startYear, startMonth, startDay);\n        setEndDayValue(endDay);\n        setEndMonthValue(endMonth);\n        setEndYearValue(endYear);\n      } else {\n        const [year, month, day] = publicationDate.split(\"-\");\n        setDates(year, month, day);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    let newDateValue = [yearValue, monthValue, dayValue]\n      .filter((v) => !!v)\n      .join(\"-\");\n    if (!!endYearValue) {\n      newDateValue +=\n        \"/\" +\n        [endYearValue, endMonthValue, endDayValue]\n          .filter((v) => !!v)\n          .join(\"-\");\n    }\n    setDateValue(newDateValue);\n    setFieldValue(fieldPath, newDateValue);\n    setFieldTouched(fieldPath, true);\n  }, [\n    yearValue,\n    monthValue,\n    dayValue,\n    endYearValue,\n    endMonthValue,\n    endDayValue,\n  ]);\n\n  useEffect(() => {\n    if (!useRange) {\n      setEndYearValue(null);\n      setEndMonthValue(null);\n      setEndDayValue(null);\n    }\n  }, [useRange]);\n\n  const years = Array.from({ length: currentYear - 1600 + 1 }, (_, i) =>\n    (1600 + i).toString()\n  );\n  let yearOptions = years\n    .map((year) => {\n      return { key: year, value: year, text: year };\n    })\n    .reverse();\n  yearOptions.unshift({ key: \"None\", value: null, text: \"None\" });\n  const monthOptions = [\n    { key: \"None\", value: null, text: \"None\", days: 31 },\n    { key: \"January\", value: \"01\", text: \"January\", days: 31 },\n    { key: \"February\", value: \"02\", text: \"February\", days: 29 },\n    { key: \"March\", value: \"03\", text: \"March\", days: 31 },\n    { key: \"April\", value: \"04\", text: \"April\", days: 30 },\n    { key: \"May\", value: \"05\", text: \"May\", days: 31 },\n    { key: \"June\", value: \"06\", text: \"June\", days: 30 },\n    { key: \"July\", value: \"07\", text: \"July\", days: 31 },\n    { key: \"August\", value: \"08\", text: \"August\", days: 31 },\n    { key: \"September\", value: \"09\", text: \"September\", days: 30 },\n    { key: \"October\", value: \"10\", text: \"October\", days: 31 },\n    { key: \"November\", value: \"11\", text: \"November\", days: 30 },\n    { key: \"December\", value: \"12\", text: \"December\", days: 31 },\n  ];\n  const days = Array.from({ length: 31 }, (_, i) => (i + 1).toString());\n  let dayOptions = days.map((day) => {\n    return {\n      key: day.padStart(2, \"0\"),\n      value: day.padStart(2, \"0\"),\n      text: day,\n    };\n  });\n  dayOptions.unshift({ key: \"None\", value: null, text: \"None\" });\n  const selectedMonth = monthOptions.find(\n    (month) => month.value === monthValue\n  );\n  const daysInSelectedMonth = selectedMonth ? selectedMonth.days : 31;\n  const slicedDayOptions = dayOptions.slice(0, daysInSelectedMonth + 1);\n\n  const handleDropdownChange = (e, { name, value }) => {\n    const setters = {\n      startYear: setYearValue,\n      startMonth: setMonthValue,\n      startDay: setDayValue,\n      endYear: setEndYearValue,\n      endMonth: setEndMonthValue,\n      endDay: setEndDayValue,\n    };\n    setters[name](value);\n    if (name === \"startDay\" && !monthValue) {\n      setMonthValue(\"01\");\n    }\n    if (name === \"endDay\" && !endMonthValue) {\n      setEndMonthValue(\"01\");\n    }\n    if (name === \"startMonth\" && value === null) {\n      setDayValue(null);\n    }\n    if (name === \"endMonth\" && value === null) {\n      setEndDayValue(null);\n    }\n    if (name === \"startYear\" && value === null) {\n      setMonthValue(null);\n      setDayValue(null);\n    }\n    if (name === \"endYear\" && value === null) {\n      setEndMonthValue(null);\n      setEndDayValue(null);\n    }\n  };\n\n  const startDropdowns = [\n    {\n      name: \"startYear\",\n      unit: \"Year\",\n      value: yearValue,\n      options: yearOptions,\n    },\n    {\n      name: \"startMonth\",\n      unit: \"Month\",\n      value: monthValue,\n      options: monthOptions,\n    },\n    {\n      name: \"startDay\",\n      unit: \"Day\",\n      value: dayValue,\n      options: slicedDayOptions,\n    },\n  ];\n  const endDropdowns = [\n    {\n      name: \"endYear\",\n      unit: \"Year\",\n      value: endYearValue,\n      options: yearOptions,\n    },\n    {\n      name: \"endMonth\",\n      unit: \"Month\",\n      value: endMonthValue,\n      options: monthOptions,\n    },\n    {\n      name: \"endDay\",\n      unit: \"Day\",\n      value: endDayValue,\n      options: slicedDayOptions,\n    },\n  ];\n  return (\n    <>\n      <Field name={fieldPath} id={fieldPath}>\n        {({\n          field, // { name, value, onChange, onBlur }\n          form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n          meta,\n        }) => (\n          <Form.Field required={!!required} error={!!meta.error}>\n            <FieldLabel\n              htmlFor={fieldPath}\n              icon={labelIcon}\n              label={label}\n              id={`${fieldPath}.label`}\n            />\n            <Form.Group>\n              {startDropdowns.map((dropdown, idx) => (\n                <DateDropdown\n                  key={idx}\n                  {...dropdown}\n                  position={\"Start\"}\n                  useRange={useRange}\n                  fieldPath={fieldPath}\n                  handleDropdownChange={handleDropdownChange}\n                  error={!!meta.error}\n                  aria-describedby={`${fieldPath}.help-text`}\n                />\n              ))}\n              <div>\n                <Checkbox\n                  label={`${!useRange ? \"add\" : \"include\"} end date`}\n                  id=\"metadata.publication_date.controls.useRange\"\n                  onChange={(e, data) => setUseRange(data.checked)}\n                  checked={useRange}\n                />\n              </div>\n            </Form.Group>\n            {!!useRange && (\n              <Form.Group>\n                {endDropdowns.map((dropdown, idx) => (\n                  <DateDropdown\n                    key={idx}\n                    {...dropdown}\n                    position={\"End\"}\n                    useRange={useRange}\n                    fieldPath={fieldPath}\n                    handleDropdownChange={handleDropdownChange}\n                    error={!!meta.error}\n                    aria-describedby={`${fieldPath}.help-text`}\n                  />\n                ))}\n              </Form.Group>\n            )}\n            {meta.error && (\n              <Label className=\"prompt error\" pointing>\n                {meta.error}\n              </Label>\n            )}\n            {helpText && (\n              <div id={`${fieldPath}.helptext`} className=\"helptext\">\n                {helpText}\n              </div>\n            )}\n          </Form.Field>\n        )}\n      </Field>\n    </>\n  );\n};\n\nPublicationDateField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  helpText: PropTypes.string,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nexport { PublicationDateField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { TextField } from \"@js/invenio_modular_deposit_form/replacement_components/TextField\";\n\nconst PublisherField = ({\n  fieldPath,\n  disabled,\n  label = i18next.t(\"Publisher\"),\n  labelIcon = \"building outline\",\n  placeholder = i18next.t(\"Publisher\"),\n  helpText,\n  required = false,\n  ...extraProps\n}) => {\n  return (\n    <TextField\n      fieldPath={fieldPath}\n      label={label}\n      labelIcon={labelIcon}\n      inputIcon={true}\n      placeholder={placeholder}\n      helpText={helpText}\n      required={required}\n      fluid={true}\n      {...extraProps}\n    />\n  );\n};\n\nPublisherField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nPublisherField.defaultProps = {};\n\nexport { PublisherField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  TextField,\n  GroupField,\n  ArrayField,\n  FieldLabel,\n  SelectField,\n} from \"react-invenio-forms\";\nimport { Button, Form, Grid, Icon, Segment } from \"semantic-ui-react\";\n\n// import { emptyRelatedWork } from \"./initialValues\";\nimport { ResourceTypeField } from \"@js/invenio_rdm_records\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { FieldArray, useFormikContext } from \"formik\";\n\nexport const emptyRelatedWork = {\n  scheme: \"\",\n  identifier: \"\",\n  resource_type: \"\",\n  relation_type: \"\",\n};\n\nconst RelatedWorksField = ({\n  fieldPath,\n  label = i18next.t(\"Related works\"),\n  labelIcon = \"sitemap\",\n  required = false,\n  options,\n  showEmptyValue = false,\n}) => {\n  const { values, setFieldValue } = useFormikContext();\n  const [relatedWorksLength, setRelatedWorksLength] = useState(-1);\n  const [haveChangedNumber, setHaveChangedNumber] = useState(false);\n\n  useEffect(() => {\n    if (!!haveChangedNumber) {\n      if (relatedWorksLength < 0) {\n        document.getElementById(`${fieldPath}.add-button`)?.focus();\n      } else {\n        document\n          .getElementById(`${fieldPath}.${relatedWorksLength}.relation_type`)\n          ?.focus();\n      }\n    }\n  }, [relatedWorksLength]);\n\n  const handleAddNew = (arrayHelpers, newItem) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.push(newItem);\n    setRelatedWorksLength(relatedWorksLength + 1);\n  };\n\n  const handleRemove = (arrayHelpers, index) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.remove(index);\n    setRelatedWorksLength(relatedWorksLength - 1);\n  };\n\n  return (\n    <FieldArray\n      addButtonLabel={i18next.t(\"Add related work\")}\n      name={fieldPath}\n      label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n      required={required}\n      render={(arrayHelpers) => (\n        <>\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          {values.metadata.related_identifiers.map(\n            ({ relation_type, identifier, scheme, resource_type }, index) => {\n              const fieldPathPrefix = `${fieldPath}.${index}`;\n              return (\n                <Segment\n                  key={index}\n                  fluid\n                  className=\"additional-identifiers-item-row\"\n                >\n                  <Form.Group>\n                    <SelectField\n                      clearable\n                      fieldPath={`${fieldPathPrefix}.relation_type`}\n                      label={i18next.t(\"Relation\")}\n                      optimized\n                      options={options.relations}\n                      placeholder={i18next.t(\"Select relation...\")}\n                      required\n                      width={6}\n                    />\n                    <TextField\n                      fieldPath={`${fieldPathPrefix}.identifier`}\n                      label={i18next.t(\"Identifier\")}\n                      required\n                      width={8}\n                    />\n                    <Form.Field>\n                      <Button\n                        aria-label={i18next.t(\"Remove field\")}\n                        className=\"close-btn\"\n                        icon\n                        onClick={() => handleRemove(arrayHelpers, index)}\n                        width={2}\n                      >\n                        <Icon name=\"close\" />\n                      </Button>\n                    </Form.Field>\n                  </Form.Group>\n                  <Form.Group>\n                    <SelectField\n                      clearable\n                      fieldPath={`${fieldPathPrefix}.scheme`}\n                      label={i18next.t(\"Scheme\")}\n                      optimized\n                      options={options.scheme}\n                      required\n                      width={8}\n                    />\n                    <ResourceTypeField\n                      clearable\n                      fieldPath={`${fieldPathPrefix}.resource_type`}\n                      labelIcon=\"\" // Otherwise breaks alignment\n                      options={options.resource_type}\n                      labelclassname=\"small field-label-class\"\n                      width={8}\n                    />\n                  </Form.Group>\n                </Segment>\n              );\n            }\n          )}\n          <Button\n            type=\"button\"\n            onClick={() => handleAddNew(arrayHelpers, emptyRelatedWork)}\n            icon\n            className=\"align-self-end add-btn\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-button`}\n          >\n            <Icon name=\"add\" />\n            Add related work\n          </Button>\n          <label className=\"helptext\" style={{ marginBottom: \"10px\" }}>\n            {/* {i18next.t(\n              \"Specify identifiers of related works. Supported identifiers include DOI, Handle, ARK, PURL, ISSN, ISBN, PubMed ID, PubMed Central ID, ADS Bibliographic Code, arXiv, Life Science Identifiers (LSID), EAN-13, ISTC, URNs, and URLs.\"\n            )} */}\n          </label>\n        </>\n      )}\n    />\n  );\n};\n\nRelatedWorksField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  options: PropTypes.object.isRequired,\n  showEmptyValue: PropTypes.bool,\n};\n\nexport { RelatedWorksField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FieldLabel,\n  GroupField,\n  Icon,\n  Label,\n  RemoteSelectField,\n} from \"react-invenio-forms\";\nimport { Form } from \"semantic-ui-react\";\nimport { Field, getIn } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class SubjectsField extends Component {\n  state = {\n    limitTo: \"all\",\n  };\n\n  serializeSubjects = (subjects) =>\n    subjects.map((subject) => {\n      const scheme = subject.scheme ? `(${subject.scheme}) ` : \"\";\n      return {\n        text: scheme + subject.subject,\n        value: subject.subject,\n        key: subject.subject,\n        ...(subject.id ? { id: subject.id } : {}),\n        subject: subject.subject,\n      };\n    });\n\n  prepareSuggest = (searchQuery) => {\n    const { limitTo } = this.state;\n\n    const prefix = limitTo === \"all\" ? \"\" : `${limitTo}:`;\n    return `${prefix}${searchQuery}`;\n  };\n\n  render() {\n    const {\n      fieldPath,\n      label,\n      labelIcon,\n      required,\n      multiple,\n      placeholder,\n      clearable,\n      limitToOptions,\n      description,\n    } = this.props;\n    return (\n      <>\n        <GroupField className=\"main-group-field\">\n          <Form.Field className=\"subjects-field-inner\" width={16}>\n            <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n            <GroupField fluid>\n              {/* <Form.Field\n              width={4}\n              style={{ marginBottom: \"auto\", marginTop: \"auto\" }}\n              className=\"\"\n            >\n              {i18next.t(\"Suggest from\")}\n            </Form.Field> */}\n              <Field name={fieldPath} width={10}>\n                {({ form: { values } }) => {\n                  return (\n                    <RemoteSelectField\n                      clearable={clearable}\n                      fieldPath={fieldPath}\n                      initialSuggestions={getIn(values, fieldPath, [])}\n                      multiple={multiple}\n                      noQueryMessage={i18next.t(\"Search subjects...\")}\n                      placeholder={placeholder}\n                      preSearchChange={this.prepareSuggest}\n                      suggestionAPIQueryParams={{ type: \"best_fields\" }}\n                      required={required}\n                      serializeSuggestions={this.serializeSubjects}\n                      serializeAddedValue={(value) => ({\n                        text: value,\n                        value: value,\n                        key: value,\n                        subject: value,\n                      })}\n                      suggestionAPIUrl=\"/api/subjects\"\n                      onValueChange={({ formikProps }, selectedSuggestions) => {\n                        formikProps.form.setFieldValue(\n                          fieldPath,\n                          // save the suggestion objects so we can extract information\n                          // about which value added by the user\n                          selectedSuggestions\n                        );\n                      }}\n                      value={getIn(values, fieldPath, []).map(\n                        (val) => val.subject\n                      )}\n                      label={\n                        <>\n                          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                          <label className=\"mobile-hidden\">&nbsp;</label>\n                        </>\n                      } /** For alignment purposes */\n                      allowAdditions={false}\n                      width={11}\n                      aria-describedby={`${fieldPath}-helpt-text`}\n                      helptext={description}\n                    />\n                  );\n                }}\n                {/* <div\n                  id={`${fieldPath}-helpt-text`}\n                  className=\"helptext ui label\"\n                >\n                  {description}\n                </div> */}\n              </Field>\n              <Form.Dropdown\n                defaultValue={limitToOptions[0].value}\n                fluid\n                onChange={(event, data) =>\n                  this.setState({ limitTo: data.value })\n                }\n                options={limitToOptions}\n                selection\n                width={6}\n                label={i18next.t(\"From subject category...\")}\n              />\n            </GroupField>\n          </Form.Field>\n        </GroupField>\n      </>\n    );\n  }\n}\n\nSubjectsField.propTypes = {\n  limitToOptions: PropTypes.array.isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  multiple: PropTypes.bool,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  description: PropTypes.string,\n};\n\nSubjectsField.defaultProps = {\n  required: false,\n  label: i18next.t(\"Keywords and subjects\"),\n  labelIcon: \"tag\",\n  multiple: true,\n  clearable: true,\n  placeholder: i18next.t(\n    \"Search for a subject by name. (Press the 'enter' key to select)\"\n  ),\n  description: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\n\nimport {\n  ArrayField,\n  GroupField,\n  SelectField,\n  TextField,\n} from \"react-invenio-forms\";\n// import { emptyAdditionalTitle } from \"./initialValues\";\nimport { LanguagesField } from \"@js/invenio_rdm_records\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { FieldArray, useFormikContext } from \"formik\";\n\nconst emptyAlternateTitle = {\n  lang: \"\",\n  title: \"\",\n  type: \"alternative-title\",\n};\n\nconst emptyTranslatedTitle = {\n  lang: \"\",\n  title: \"\",\n  type: \"translated-title\",\n};\n\nconst AdditionalTitlesField = ({ fieldPath, options, recordUI }) => {\n  const { values } = useFormikContext();\n  const [titlesLength, setTitlesLength] = useState(-1);\n  const [haveChangedNumber, setHaveChangedNumber] = useState(false);\n\n  useEffect(() => {\n    if (!!haveChangedNumber) {\n      if (titlesLength < 0) {\n        document.getElementById(`${fieldPath}.add-translated-button`)?.focus();\n      } else {\n        document.getElementById(`${fieldPath}.${titlesLength}.title`)?.focus();\n      }\n    }\n  }, [titlesLength]);\n\n  const handleAddNew = (arrayHelpers, newItem) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.push(newItem);\n    setTitlesLength(titlesLength + 1);\n  };\n\n  const handleRemove = (arrayHelpers, index) => {\n    setHaveChangedNumber(true);\n    arrayHelpers.remove(index);\n    setTitlesLength(titlesLength - 1);\n  };\n\n  return (\n    <FieldArray\n      addButtonLabel={i18next.t(\"Add other titles\")}\n      name={fieldPath}\n      className=\"additional-titles\"\n      render={(arrayHelpers) => (\n        <>\n          {values.metadata.additional_titles.map((value, index) => {\n            const fieldPathPrefix = `${fieldPath}.${index}`;\n            let titleWord =\n              value.type === \"translated-title\" ? \"Translated\" : \"Additional\";\n            titleWord =\n              value.type === \"alternative-title\" ? \"Alternative\" : titleWord;\n\n            return (\n              <Form.Group key={index} className=\"additional-titles-item-row\">\n                <TextField\n                  fieldPath={`${fieldPathPrefix}.title`}\n                  label={`${titleWord} title`}\n                  id={`${fieldPathPrefix}.title`}\n                  required\n                  width={7}\n                />\n                <SelectField\n                  fieldPath={`${fieldPathPrefix}.type`}\n                  label=\"Type\"\n                  id={`${fieldPathPrefix}.type`}\n                  optimized\n                  options={options.type}\n                  required\n                  width={4}\n                />\n                <LanguagesField\n                  serializeSuggestions={(suggestions) =>\n                    suggestions.map((item) => ({\n                      text: item.title_l10n,\n                      value: item.id,\n                      fieldPathPrefix: item.id,\n                    }))\n                  }\n                  initialOptions={\n                    recordUI?.additional_titles &&\n                    recordUI.additional_titles[index]?.lang\n                      ? [recordUI.additional_titles[index].lang]\n                      : []\n                  }\n                  fieldPath={`${fieldPathPrefix}.lang`}\n                  id={`${fieldPathPrefix}.lang`}\n                  label=\"Language\"\n                  multiple={false}\n                  placeholder=\"\"\n                  labelIcon={null}\n                  clearable\n                  selectOnBlur={true}\n                  width={4}\n                />\n                <Form.Field>\n                  <Button\n                    aria-label={i18next.t(\"Remove item\")}\n                    className=\"close-btn\"\n                    icon\n                    onClick={() => handleRemove(arrayHelpers, index)}\n                  >\n                    <Icon name=\"close\" />\n                  </Button>\n                </Form.Field>\n              </Form.Group>\n            );\n          })}\n          <Button\n            type=\"button\"\n            onClick={() => handleAddNew(arrayHelpers, emptyTranslatedTitle)}\n            icon\n            className=\"align-self-end add-btn\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-translated-button`}\n          >\n            <Icon name=\"add\" />\n            Add translated title\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => handleAddNew(arrayHelpers, emptyAlternateTitle)}\n            icon\n            className=\"align-self-end add-btn\"\n            labelPosition=\"left\"\n            id={`${fieldPath}.add-alternate-button`}\n          >\n            <Icon name=\"add\" />\n            Add alternative title\n          </Button>\n        </>\n      )}\n    />\n  );\n};\n\nAdditionalTitlesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }),\n  recordUI: PropTypes.object,\n};\n\nAdditionalTitlesField.defaultProps = {\n  options: undefined,\n  recordUI: undefined,\n};\n\nexport { AdditionalTitlesField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { AdditionalTitlesField } from \"./AdditionalTitlesField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Form } from \"semantic-ui-react\";\nimport { Field } from \"formik\";\n\nimport { TextField } from \"@js/invenio_modular_deposit_form/replacement_components/TextField\";\n\nconst TitlesField = ({\n  fieldPath = \"metadata.title\",\n  options,\n  label = i18next.t(\"Title\"),\n  required = false,\n  recordUI = undefined,\n  disabled = false,\n  ...extraProps\n}) => {\n  return (\n    <>\n      <TextField\n        fieldPath={fieldPath}\n        label={label}\n        required={required}\n        classnames=\"title-field\"\n        showLabel={true}\n        labelIcon=\"book\"\n        disabled={disabled}\n        {...extraProps}\n      />\n      <AdditionalTitlesField\n        options={options}\n        recordUI={recordUI}\n        fieldPath=\"metadata.additional_titles\"\n      />\n    </>\n  );\n};\n\nTitlesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n  required: PropTypes.bool,\n  recordUI: PropTypes.object,\n};\n\nexport { TitlesField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\nimport { TextField } from \"@js/invenio_modular_deposit_form/replacement_components/TextField\";\n\nconst myHelpText = (\n  <span>\n    <Trans>\n      Mostly relevant for software and dataset uploads. A semantic version\n      string is preferred see\n      <a href=\"https://semver.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {\" \"}\n        semver.org\n      </a>\n      , but any version string is accepted.\n    </Trans>\n  </span>\n);\n\nconst VersionField = ({\n  fieldPath,\n  label = i18next.t(\"Version\"),\n  labelIcon = \"code branch\",\n  placeholder = \"\",\n  ...extraProps\n}) => {\n  return (\n    <TextField\n      fieldPath={fieldPath}\n      label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n      placeholder={placeholder}\n      {...extraProps}\n    />\n  );\n};\n\nVersionField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport { VersionField };\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\n// import {\n//   DRAFT_FETCHED,\n//   FILE_DELETED_SUCCESS,\n//   FILE_DELETE_FAILED,\n//   FILE_IMPORT_FAILED,\n//   FILE_IMPORT_STARTED,\n//   FILE_IMPORT_SUCCESS,\n//   FILE_UPLOAD_SAVE_DRAFT_FAILED,\n// } from \"../types\";\n// import { saveDraftWithUrlUpdate } from \"./deposit\";\n\nexport const DRAFT_FETCHED = \"DRAFT_FETCHED\";\nexport const FILE_DELETED_SUCCESS = \"FILE_DELETED_SUCCESS\";\nexport const FILE_DELETE_FAILED = \"FILE_DELETE_FAILED\";\nexport const FILE_IMPORT_STARTED = \"FILE_IMPORT_STARTED\";\nexport const FILE_IMPORT_SUCCESS = \"FILE_IMPORT_SUCCESS\";\nexport const FILE_IMPORT_FAILED = \"FILE_IMPORT_FAILED\";\nexport const FILE_UPLOAD_SAVE_DRAFT_FAILED = \"FILE_UPLOAD_SAVE_DRAFT_FAILED\";\n\nasync function changeURLAfterCreation(draftURL) {\n  window.history.replaceState(undefined, \"\", draftURL);\n}\n\nexport const saveDraftWithUrlUpdate = async (draft, draftsService) => {\n  const hasAlreadyId = !!draft.id;\n  const response = await draftsService.save(draft);\n  if (!hasAlreadyId) {\n    // draft was created, change URL to add the draft PID\n    const draftURL = response.data.links.self_html;\n    changeURLAfterCreation(draftURL);\n  }\n  return response;\n};\n\n\nexport const uploadFiles = (draft, files) => {\n  return async (dispatch, _, config) => {\n    console.log('config');\n    console.log(config);\n    let response;\n    try {\n      response = await saveDraftWithUrlUpdate(draft, config.service.drafts);\n      // update state with created draft\n      dispatch({\n        type: DRAFT_FETCHED,\n        payload: { data: response.data },\n      });\n\n      // upload files\n      const uploadFileUrl = response.data.links.files;\n      for (const file of files) {\n        config.service.files.upload(uploadFileUrl, file);\n      }\n    } catch (error) {\n      dispatch({\n        type: FILE_UPLOAD_SAVE_DRAFT_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\nexport const deleteFile = (file) => {\n  return async (dispatch, _, config) => {\n    try {\n      const fileLinks = file.links;\n      await config.service.files.delete(fileLinks);\n\n      dispatch({\n        type: FILE_DELETED_SUCCESS,\n        payload: {\n          filename: file.name,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: FILE_DELETE_FAILED });\n      throw error;\n    }\n  };\n};\n\nexport const importParentFiles = () => {\n  return async (dispatch, getState, config) => {\n    const draft = getState().deposit.record;\n    if (!draft.id) return;\n\n    dispatch({ type: FILE_IMPORT_STARTED });\n\n    try {\n      const draftLinks = draft.links;\n      const files = await config.service.files.importParentRecordFiles(draftLinks);\n      dispatch({\n        type: FILE_IMPORT_SUCCESS,\n        payload: { files: files },\n      });\n    } catch (error) {\n      dispatch({ type: FILE_IMPORT_FAILED });\n      throw error;\n    }\n  };\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021-2022 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { useFormikContext } from \"formik\";\nimport _get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport React, { Component, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Popup,\n  Progress,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\n\nconst FileTableHeader = ({ isDraftRecord }) => (\n  <Table.Header>\n    <Table.Row>\n      <Table.HeaderCell>\n        {i18next.t(\"Set as preview\")}{\" \"}\n        <Popup\n          content=\"Choose the file to be previewed by default on the record detail page.\"\n          trigger={<Icon fitted name=\"help circle\" size=\"small\" />}\n        />\n      </Table.HeaderCell>\n      <Table.HeaderCell>{i18next.t(\"Filename\")}</Table.HeaderCell>\n      <Table.HeaderCell>{i18next.t(\"Size\")}</Table.HeaderCell>\n      {isDraftRecord && (\n        <Table.HeaderCell textAlign=\"center\">\n          {i18next.t(\"Progress\")}\n        </Table.HeaderCell>\n      )}\n      {isDraftRecord && <Table.HeaderCell />}\n    </Table.Row>\n  </Table.Header>\n);\n\nFileTableHeader.propTypes = {\n  isDraftRecord: PropTypes.bool,\n};\n\nFileTableHeader.defaultProps = {\n  isDraftRecord: false,\n};\n\nconst FileTableRow = ({\n  isDraftRecord,\n  file,\n  deleteFile,\n  defaultPreview,\n  setDefaultPreview,\n  decimalSizeDisplay,\n}) => {\n  const [isCancelling, setIsCancelling] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const isDefaultPreview = defaultPreview === file.name;\n\n  const handleDelete = async (file) => {\n    setIsDeleting(true);\n    try {\n      await deleteFile(file);\n      if (isDefaultPreview) {\n        setDefaultPreview(\"\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCancelUpload = (file) => {\n    setIsCancelling(true);\n    file.cancelUploadFn();\n  };\n\n  return (\n    <Table.Row key={file.name}>\n      <Table.Cell data-label={i18next.t(\"Default preview\")} width={2}>\n        {/* TODO: Investigate if react-deposit-forms optimized Checkbox field\n                  would be more performant */}\n        <Checkbox\n          checked={isDefaultPreview}\n          onChange={() => setDefaultPreview(isDefaultPreview ? \"\" : file.name)}\n        />\n      </Table.Cell>\n      <Table.Cell data-label={i18next.t(\"Filename\")} width={10}>\n        <div>\n          {file.uploadState.isPending ? (\n            file.name\n          ) : (\n            <a\n              href={_get(file, \"links.content\", \"\")}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"mr-5\"\n            >\n              {file.name}\n            </a>\n          )}\n          <br />\n          {file.checksum && (\n            <div className=\"ui text-muted\">\n              <span style={{ fontSize: \"10px\" }}>{file.checksum}</span>{\" \"}\n              <Popup\n                content={i18next.t(\n                  \"This is the file fingerprint (MD5 checksum), which can be used to verify the file integrity.\"\n                )}\n                trigger={<Icon fitted name=\"help circle\" size=\"small\" />}\n                position=\"top center\"\n              />\n            </div>\n          )}\n        </div>\n      </Table.Cell>\n      <Table.Cell data-label={i18next.t(\"Size\")} width={2}>\n        {file.size ? humanReadableBytes(file.size, decimalSizeDisplay) : \"\"}\n      </Table.Cell>\n      {isDraftRecord && (\n        <Table.Cell\n          className=\"file-upload-pending\"\n          data-label={i18next.t(\"Progress\")}\n          width={2}\n        >\n          {!file.uploadState?.isPending && (\n            <Progress\n              className=\"file-upload-progress primary\"\n              percent={file.progressPercentage}\n              error={file.uploadState.isFailed}\n              size=\"medium\"\n              progress\n              autoSuccess\n              active\n            />\n          )}\n          {file.uploadState?.isPending && <span>{i18next.t(\"Pending\")}</span>}\n        </Table.Cell>\n      )}\n      {isDraftRecord && (\n        <Table.Cell textAlign=\"right\" width={2}>\n          {(file.uploadState?.isFinished || file.uploadState?.isFailed) &&\n            (isDeleting ? (\n              <Icon loading name=\"spinner\" />\n            ) : (\n              <Icon\n                link\n                className=\"action primary\"\n                name=\"trash alternate outline\"\n                disabled={isDeleting}\n                onClick={() => handleDelete(file)}\n                aria-label={i18next.t(\"Delete file\")}\n                title={i18next.t(\"Delete file\")}\n              />\n            ))}\n          {file.uploadState?.isUploading && (\n            <Button\n              compact\n              type=\"button\"\n              negative\n              size=\"tiny\"\n              disabled={isCancelling}\n              onClick={() => handleCancelUpload(file)}\n            >\n              {isCancelling ? (\n                <Icon loading name=\"spinner\" />\n              ) : (\n                i18next.t(\"Cancel\")\n              )}\n            </Button>\n          )}\n        </Table.Cell>\n      )}\n    </Table.Row>\n  );\n};\n\nFileTableRow.propTypes = {\n  isDraftRecord: PropTypes.bool,\n  file: PropTypes.object,\n  deleteFile: PropTypes.func.isRequired,\n  defaultPreview: PropTypes.string,\n  setDefaultPreview: PropTypes.func.isRequired,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFileTableRow.defaultProps = {\n  isDraftRecord: false,\n  file: undefined,\n  defaultPreview: undefined,\n  decimalSizeDisplay: false,\n};\n\nconst FileUploadBox = ({\n  isDraftRecord,\n  filesList,\n  dragText,\n  uploadButtonIcon,\n  uploadButtonText,\n  openFileDialog,\n}) =>\n  isDraftRecord && (\n    <Segment\n      basic\n      padded=\"very\"\n      className={\n        filesList.length ? \"file-upload-area\" : \"file-upload-area no-files\"\n      }\n    >\n      <Grid columns={3} textAlign=\"center\">\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column mobile={16} tablet={7} computer={7}>\n            <Header size=\"small\">{dragText}</Header>\n          </Grid.Column>\n\n          <Grid.Column\n            className=\"mt-10 mb-10\"\n            mobile={16}\n            tablet={2}\n            computer={2}\n          >\n            - {i18next.t(\"or\")} -\n          </Grid.Column>\n\n          <Grid.Column mobile={16} tablet={7} computer={7}>\n            <Button\n              type=\"button\"\n              primary\n              labelPosition=\"left\"\n              icon={uploadButtonIcon}\n              content={uploadButtonText}\n              onClick={() => openFileDialog()}\n              disabled={openFileDialog === null}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n\nFileUploadBox.propTypes = {\n  isDraftRecord: PropTypes.bool.isRequired,\n  filesList: PropTypes.array,\n  dragText: PropTypes.string,\n  uploadButtonIcon: PropTypes.node,\n  uploadButtonText: PropTypes.string,\n  openFileDialog: PropTypes.func,\n};\n\nFileUploadBox.defaultProps = {\n  filesList: undefined,\n  dragText: undefined,\n  uploadButtonIcon: undefined,\n  uploadButtonText: undefined,\n  openFileDialog: null,\n};\n\nconst FilesListTable = ({\n  isDraftRecord,\n  filesList,\n  deleteFile,\n  decimalSizeDisplay,\n}) => {\n  const { setFieldValue, values: formikDraft } = useFormikContext();\n  const defaultPreview = _get(formikDraft, \"files.default_preview\", \"\");\n  return (\n    <Table>\n      <FileTableHeader isDraftRecord={isDraftRecord} />\n      <Table.Body>\n        {filesList.map((file) => {\n          return (\n            <FileTableRow\n              key={file.name}\n              isDraftRecord={isDraftRecord}\n              file={file}\n              deleteFile={deleteFile}\n              defaultPreview={defaultPreview}\n              setDefaultPreview={(filename) =>\n                setFieldValue(\"files.default_preview\", filename)\n              }\n              decimalSizeDisplay={decimalSizeDisplay}\n            />\n          );\n        })}\n      </Table.Body>\n    </Table>\n  );\n};\n\nFilesListTable.propTypes = {\n  isDraftRecord: PropTypes.bool,\n  filesList: PropTypes.array,\n  deleteFile: PropTypes.func,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFilesListTable.defaultProps = {\n  isDraftRecord: undefined,\n  filesList: undefined,\n  deleteFile: undefined,\n  decimalSizeDisplay: undefined,\n};\n\nexport class FileUploaderArea extends Component {\n  render() {\n    const { filesEnabled, dropzoneParams, filesList, isDraftRecord } =\n      this.props;\n    return filesEnabled || isDraftRecord ? (\n      <Dropzone {...dropzoneParams}>\n        {({ getRootProps, getInputProps, open: openFileDialog }) => (\n          <Grid.Column width={16}>\n            <span {...getRootProps()}>\n              <input {...getInputProps()} />\n              {filesList.length !== 0 && (\n                <Grid.Column verticalAlign=\"middle\">\n                  <FilesListTable {...this.props} />\n                </Grid.Column>\n              )}\n              <FileUploadBox {...this.props} openFileDialog={openFileDialog} />\n            </span>\n          </Grid.Column>\n        )}\n      </Dropzone>\n    ) : (\n      <Grid.Column width={16}>\n        <Segment basic padded=\"very\" className=\"file-upload-area no-files\">\n          <Grid textAlign=\"center\">\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                <Header size=\"medium\">\n                  {i18next.t(\"This is a Metadata-only record.\")}\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Grid.Column>\n    );\n  }\n}\n\nFileUploaderArea.propTypes = {\n  deleteFile: PropTypes.func,\n  dragText: PropTypes.string,\n  dropzoneParams: PropTypes.object,\n  filesEnabled: PropTypes.bool.isRequired,\n  filesList: PropTypes.array,\n  isDraftRecord: PropTypes.bool,\n  links: PropTypes.object,\n  setDefaultPreviewFile: PropTypes.func,\n  uploadButtonIcon: PropTypes.string,\n  uploadButtonText: PropTypes.string,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFileUploaderArea.defaultProps = {\n  deleteFile: undefined,\n  dragText: undefined,\n  dropzoneParams: undefined,\n  filesList: undefined,\n  isDraftRecord: false,\n  links: undefined,\n  setDefaultPreviewFile: undefined,\n  uploadButtonIcon: undefined,\n  uploadButtonText: undefined,\n  decimalSizeDisplay: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2021 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\nimport {\n  Header,\n  Checkbox,\n  Grid,\n  Icon,\n  Label,\n  List,\n  Popup,\n} from \"semantic-ui-react\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\n\n// NOTE: This component has to be a function component to allow\n//       the `useFormikContext` hook.\nexport const FileUploaderToolbar = (props) => {\n  const {\n    filesList,\n    filesSize,\n    filesEnabled,\n    showMetadataOnlyToggle,\n    quota,\n    decimalSizeDisplay,\n  } = props;\n  const { setFieldValue } = useFormikContext();\n\n  const handleOnChangeMetadataOnly = () => {\n    setFieldValue(\"files.enabled\", !filesEnabled);\n    setFieldValue(\"access.files\", \"public\");\n  };\n\n  return (\n    <Overridable\n      id=\"ReactInvenioDeposit.FileUploaderToolbar.layout\"\n      filesList={filesList}\n      filesSize={filesSize}\n      filesEnabled={filesEnabled}\n      showMetadataOnlyToggle={showMetadataOnlyToggle}\n      quota={quota}\n      decimalSizeDisplay={decimalSizeDisplay}\n      handleOnChangeMetadataOnly={handleOnChangeMetadataOnly}\n    >\n      <>\n        {showMetadataOnlyToggle && (\n          <Grid.Column\n            verticalAlign=\"middle\"\n            floated=\"left\"\n            mobile={16}\n            tablet={6}\n            computer={6}\n          >\n            <Overridable\n              id=\"ReactInvenioDeposit.FileUploaderToolbar.MetadataOnlyToggle.container\"\n              filesList={filesList}\n              filesEnabled={filesEnabled}\n              showMetadataOnlyToggle={showMetadataOnlyToggle}\n              handleOnChangeMetadataOnly={handleOnChangeMetadataOnly}\n            >\n              <List horizontal>\n                <List.Item>\n                  <Checkbox\n                    label={i18next.t(\"Metadata-only record\")}\n                    onChange={handleOnChangeMetadataOnly}\n                    disabled={filesList.length > 0}\n                    checked={!filesEnabled}\n                  />\n                </List.Item>\n                <List.Item>\n                  <Popup\n                    trigger={\n                      <Icon\n                        name=\"question circle outline\"\n                        className=\"neutral\"\n                      />\n                    }\n                    content={i18next.t(\"Disable files for this record\")}\n                    position=\"top center\"\n                  />\n                </List.Item>\n              </List>\n            </Overridable>\n          </Grid.Column>\n        )}\n        <Overridable\n          id=\"ReactInvenioDeposit.FileUploaderToolbar.FileList.container\"\n          filesList={filesList}\n          filesSize={filesSize}\n          filesEnabled={filesEnabled}\n          quota={quota}\n          decimalSizeDisplay={decimalSizeDisplay}\n        >\n          {filesEnabled && (\n            <Grid.Column\n              mobile={16}\n              tablet={16}\n              computer={16}\n              className=\"storage-col\"\n            >\n              {/* <Header size=\"tiny\" className=\"mr-10\">\n                {i18next.t(\"Storage available\")}\n              </Header> */}\n              <List horizontal>\n                <List.Item>\n                  <Label\n                    {...(filesList.length === quota.maxFiles\n                      ? { color: \"orange\" }\n                      : { color: \"blue\" })}\n                    image\n                  >\n                    <Icon name=\"zip\" />\n                    {i18next.t(`{{remaining}} out of {{maxfiles}}`, {\n                      remaining: quota.maxFiles - filesList.length,\n                      maxfiles: quota.maxFiles,\n                    })}\n                    <Label.Detail>{i18next.t(`max files left`)}</Label.Detail>\n                  </Label>\n                </List.Item>\n                <List.Item>\n                  <Label\n                    image\n                    {...(humanReadableBytes(filesSize, decimalSizeDisplay) ===\n                    humanReadableBytes(quota.maxStorage, decimalSizeDisplay)\n                      ? { color: \"orange\" }\n                      : { color: \"teal\" })}\n                  >\n                    <Icon name=\"pie chart\" />\n                    {humanReadableBytes(\n                      quota.maxStorage - filesSize,\n                      decimalSizeDisplay\n                    )}{\" \"}\n                    {i18next.t(\"of\")}{\" \"}\n                    {humanReadableBytes(quota.maxStorage, decimalSizeDisplay)}\n                    <Label.Detail>{\" total storage left\"}</Label.Detail>\n                  </Label>\n                </List.Item>\n              </List>\n            </Grid.Column>\n          )}\n        </Overridable>\n      </>\n    </Overridable>\n  );\n};\n\nFileUploaderToolbar.propTypes = {\n  filesList: PropTypes.array,\n  filesSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  filesEnabled: PropTypes.bool.isRequired,\n  quota: PropTypes.object,\n  decimalSizeDisplay: PropTypes.bool,\n  showMetadataOnlyToggle: PropTypes.bool,\n};\n\nFileUploaderToolbar.defaultProps = {\n  filesList: undefined,\n  filesSize: undefined,\n  quota: undefined,\n  decimalSizeDisplay: false,\n  showMetadataOnlyToggle: true,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2022 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { useFormikContext } from \"formik\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _map from \"lodash/map\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Icon, Message, Modal } from \"semantic-ui-react\";\n// import { UploadState } from \"../../state/reducers/files\";\nimport { NewVersionButton } from \"@js/invenio_rdm_records\";\n// import { NewVersionButton } from \"../../controls/NewVersionButton\";\nimport { FileUploaderArea } from \"./FileUploaderArea\";\nimport { FileUploaderToolbar } from \"./FileUploaderToolbar\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\n\nexport const UploadState = {\n  // initial: 'initial', // no file or the initial file selected\n  uploading: \"uploading\", // currently uploading a file from the UI\n  error: \"error\", // upload failed\n  finished: \"finished\", // upload finished (uploaded file is the field's current file)\n  pending: \"pending\", // files retrieved from the backend are in pending state\n};\n\n// NOTE: This component has to be a function component to allow\n//       the `useFormikContext` hook.\nexport const FileUploaderComponent = ({\n  config,\n  fieldPath = \"files\",\n  files,\n  isDraftRecord,\n  hasParentRecord,\n  label = \"Upload files\",\n  labelIcon = \"upload\",\n  noFiles = false,\n  quota,\n  permissions,\n  record,\n  uploadFiles,\n  deleteFile,\n  importParentFiles,\n  importButtonIcon,\n  importButtonText,\n  isFileImportInProgress,\n  decimalSizeDisplay,\n  ...uiProps\n}) => {\n  console.log(\"FileUploaderComponent record\", record);\n  console.log(\"FileUploaderComponent isDraftRecord\", isDraftRecord);\n  console.log(\"FileUploaderComponent hasParentRecord\", hasParentRecord);\n  console.log(\"FileUploaderComponent uploadFiles\", uploadFiles);\n  console.log(\"FileUploaderComponent deleteFile\", deleteFile);\n  console.log(\"FileUploaderComponent importParentFiles\", importParentFiles);\n  console.log(\"FileUploaderComponent uiProps\", uiProps);\n  // We extract the working copy of the draft stored as `values` in formik\n  const { values: formikDraft, setFieldValue } = useFormikContext();\n  const filesEnabled = _get(formikDraft, \"files.enabled\", false);\n  console.log(\"FileUploaderComponent filesEnabled\", filesEnabled);\n  const [warningMsg, setWarningMsg] = useState();\n\n  const filesList = Object.values(files).map((fileState) => {\n    return {\n      name: fileState.name,\n      size: fileState.size,\n      checksum: fileState.checksum,\n      links: fileState.links,\n      uploadState: {\n        // initial: fileState.status === UploadState.initial,\n        isFailed: fileState.status === UploadState.error,\n        isUploading: fileState.status === UploadState.uploading,\n        isFinished: fileState.status === UploadState.finished,\n        isPending: fileState.status === UploadState.pending,\n      },\n      progressPercentage: fileState.progressPercentage,\n      cancelUploadFn: fileState.cancelUploadFn,\n    };\n  });\n\n  const filesSize = filesList.reduce(\n    (totalSize, file) => (totalSize += file.size),\n    0\n  );\n\n  const dropzoneParams = {\n    preventDropOnDocument: true,\n    onDropAccepted: (acceptedFiles) => {\n      const maxFileNumberReached =\n        filesList.length + acceptedFiles.length > quota.maxFiles;\n      const acceptedFilesSize = acceptedFiles.reduce(\n        (totalSize, file) => (totalSize += file.size),\n        0\n      );\n      const maxFileStorageReached =\n        filesSize + acceptedFilesSize > quota.maxStorage;\n\n      const filesNames = _map(filesList, \"name\");\n      const duplicateFiles = acceptedFiles.filter((acceptedFile) =>\n        filesNames.includes(acceptedFile.name)\n      );\n\n      if (maxFileNumberReached) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header=\"Could not upload files.\"\n              content={`Uploading the selected files would result in ${\n                filesList.length + acceptedFiles.length\n              } files (max.${quota.maxFiles})`}\n            />\n          </div>\n        );\n      } else if (maxFileStorageReached) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header=\"Could not upload files.\"\n              content={\n                <>\n                  {i18next.t(\"Uploading the selected files would result in\")}{\" \"}\n                  {humanReadableBytes(\n                    filesSize + acceptedFilesSize,\n                    decimalSizeDisplay\n                  )}\n                  {i18next.t(\"but the limit is\")}\n                  {humanReadableBytes(quota.maxStorage, decimalSizeDisplay)}.\n                </>\n              }\n            />\n          </div>\n        );\n      } else if (!_isEmpty(duplicateFiles)) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header={i18next.t(`The following files already exist`)}\n              list={_map(duplicateFiles, \"name\")}\n            />\n          </div>\n        );\n      } else {\n        wrappedUploadFiles(formikDraft, acceptedFiles);\n      }\n    },\n    multiple: true,\n    noClick: true,\n    noKeyboard: true,\n    disabled: false,\n  };\n\n  const filesLeft = filesList.length < quota.maxFiles;\n  if (!filesLeft) {\n    dropzoneParams[\"disabled\"] = true;\n  }\n\n  const displayImportBtn =\n    filesEnabled && isDraftRecord && hasParentRecord && !filesList.length;\n  console.log(\"FileUploaderComponent displayImportBtn\", displayImportBtn);\n\n  const wrappedUploadFiles = (formikDraft, acceptedFiles) => {\n    formikDraft.files.enabled = true;\n    setFieldValue(\"files.enabled\", true);\n    uploadFiles(formikDraft, acceptedFiles);\n  };\n\n  return (\n    <Overridable\n      id=\"ReactInvenioDeposit.FileUploader.layout\"\n      config={config}\n      files={files}\n      isDraftRecord={isDraftRecord}\n      hasParentRecord={hasParentRecord}\n      quota={quota}\n      label={label}\n      labelIcon={labelIcon}\n      permissions={permissions}\n      record={record}\n      uploadFiles={uploadFiles}\n      deleteFile={deleteFile}\n      importParentFiles={importParentFiles}\n      importButtonIcon={importButtonIcon}\n      importButtonText={importButtonText}\n      isFileImportInProgress={isFileImportInProgress}\n      decimalSizeDisplay={decimalSizeDisplay}\n      filesEnabled={filesEnabled}\n      filesList={filesList}\n      displayImportBtn={displayImportBtn}\n      filesSize={filesSize}\n      dropzoneParams={dropzoneParams}\n      warningMsg={warningMsg}\n      setWarningMsg={setWarningMsg}\n      {...uiProps}\n    >\n      <>\n        <label\n          htmlFor={fieldPath}\n          className=\"field-label-class invenio-field-label\"\n        >\n          {labelIcon && <i className={`${labelIcon} icon`} />}\n          {label}\n        </label>\n        <Grid>\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.ImportButton.container\"\n            importButtonIcon={importButtonIcon}\n            importButtonText={importButtonText}\n            importParentFiles={importParentFiles}\n            isFileImportInProgress={isFileImportInProgress}\n            displayImportBtn={displayImportBtn}\n            {...uiProps}\n          >\n            {displayImportBtn && (\n              <Grid.Row className=\"\">\n                <Grid.Column width={16}>\n                  <Message visible info>\n                    <div style={{ display: \"inline-block\", float: \"right\" }}>\n                      <Button\n                        type=\"button\"\n                        size=\"mini\"\n                        primary\n                        icon={importButtonIcon}\n                        content={importButtonText}\n                        onClick={() => importParentFiles()}\n                        disabled={isFileImportInProgress}\n                        loading={isFileImportInProgress}\n                      />\n                    </div>\n                    <p style={{ marginTop: \"5px\", display: \"inline-block\" }}>\n                      <Icon name=\"info circle\" />\n                      {i18next.t(\n                        \"You can import files from the previous version.\"\n                      )}\n                    </p>\n                  </Message>\n                </Grid.Column>\n              </Grid.Row>\n            )}\n          </Overridable>\n\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.FileUploaderArea.container\"\n            filesList={filesList}\n            dropzoneParams={dropzoneParams}\n            isDraftRecord={isDraftRecord}\n            filesEnabled={filesEnabled}\n            deleteFile={deleteFile}\n            decimalSizeDisplay={decimalSizeDisplay}\n            {...uiProps}\n          >\n            {(filesEnabled || isDraftRecord) && (\n              <Grid.Row className=\"pb-0\">\n                <FileUploaderArea\n                  {...uiProps}\n                  filesList={filesList}\n                  dropzoneParams={dropzoneParams}\n                  isDraftRecord={isDraftRecord}\n                  filesEnabled={filesEnabled}\n                  deleteFile={deleteFile}\n                  decimalSizeDisplay={decimalSizeDisplay}\n                />\n              </Grid.Row>\n            )}\n          </Overridable>\n\n          <Grid.Row className=\"pt-0 pb-5\">\n            {isDraftRecord && (\n              <FileUploaderToolbar\n                {...uiProps}\n                config={config}\n                filesEnabled={filesEnabled}\n                filesList={filesList}\n                filesSize={filesSize}\n                isDraftRecord={isDraftRecord}\n                quota={quota}\n                decimalSizeDisplay={decimalSizeDisplay}\n              />\n            )}\n          </Grid.Row>\n\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.NewVersionButton.container\"\n            isDraftRecord={isDraftRecord}\n            permissions={permissions}\n            record={record}\n            {...uiProps}\n          >\n            {isDraftRecord ? (\n              <Grid.Row className=\"file-upload-note\">\n                <Grid.Column width={16}>\n                  <Message visible warning>\n                    <p>\n                      <Icon name=\"warning sign\" />\n                      {i18next.t(\n                        \"File addition, removal or modification are not allowed after you have published your upload.\"\n                      )}\n                    </p>\n                  </Message>\n                </Grid.Column>\n              </Grid.Row>\n            ) : (\n              <Grid.Row className=\"file-upload-note pt-5\">\n                <Grid.Column width={16}>\n                  <Message info>\n                    <Icon name=\"info circle\" size=\"large\" />\n                    <p style={{ marginTop: \"5px\", display: \"inline-block\" }}>\n                      {noFiles && record.is_published && (\n                        <em>\n                          {i18next.t(\"This published record has no files. \")}\n                        </em>\n                      )}\n                      {i18next.t(\n                        \"You must create a new version to add, modify or delete files.\"\n                      )}\n                    </p>\n                    <NewVersionButton\n                      record={record}\n                      onError={() => {}}\n                      className=\"\"\n                      disabled={!permissions.can_new_version}\n                      style={{ float: \"right\" }}\n                    />\n                  </Message>\n                </Grid.Column>\n              </Grid.Row>\n            )}\n          </Overridable>\n        </Grid>\n        <Overridable\n          id=\"ReactInvenioDeposit.FileUploader.Modal.container\"\n          warningMsg={warningMsg}\n          setWarningMsg={setWarningMsg}\n          {...uiProps}\n        >\n          <Modal\n            open={!!warningMsg}\n            header=\"Warning!\"\n            content={warningMsg}\n            onClose={() => setWarningMsg()}\n            closeIcon\n          />\n        </Overridable>\n      </>\n    </Overridable>\n  );\n};\n\nconst fileDetailsShape = PropTypes.objectOf(\n  PropTypes.shape({\n    name: PropTypes.string,\n    size: PropTypes.number,\n    progressPercentage: PropTypes.number,\n    checksum: PropTypes.string,\n    links: PropTypes.object,\n    cancelUploadFn: PropTypes.func,\n    state: PropTypes.oneOf(Object.values(UploadState)),\n    enabled: PropTypes.bool,\n  })\n);\n\nFileUploaderComponent.propTypes = {\n  config: PropTypes.object,\n  dragText: PropTypes.string,\n  files: fileDetailsShape,\n  isDraftRecord: PropTypes.bool,\n  hasParentRecord: PropTypes.bool,\n  quota: PropTypes.shape({\n    maxStorage: PropTypes.number,\n    maxFiles: PropTypes.number,\n  }),\n  record: PropTypes.object,\n  uploadButtonIcon: PropTypes.string,\n  uploadButtonText: PropTypes.string,\n  importButtonIcon: PropTypes.string,\n  importButtonText: PropTypes.string,\n  isFileImportInProgress: PropTypes.bool,\n  importParentFiles: PropTypes.func.isRequired,\n  uploadFiles: PropTypes.func.isRequired,\n  deleteFile: PropTypes.func.isRequired,\n  decimalSizeDisplay: PropTypes.bool,\n  permissions: PropTypes.object,\n};\n\nFileUploaderComponent.defaultProps = {\n  permissions: undefined,\n  config: undefined,\n  files: undefined,\n  record: undefined,\n  isFileImportInProgress: false,\n  dragText: i18next.t(\"Drag and drop files\"),\n  isDraftRecord: true,\n  hasParentRecord: false,\n  quota: {\n    maxFiles: 5,\n    maxStorage: 10 ** 10,\n  },\n  uploadButtonIcon: \"upload\",\n  uploadButtonText: i18next.t(\"Choose files\"),\n  importButtonIcon: \"sync\",\n  importButtonText: i18next.t(\"Import files\"),\n  decimalSizeDisplay: true,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2023 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { overriddenComponents } from \"./mapping\";\n\nimport { overrideStore } from \"react-overridable\";\n\nfor (const [key, value] of Object.entries(overriddenComponents)) {\n  overrideStore.add(key, value);\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { connect } from \"react-redux\";\nimport { deleteFile, importParentFiles, uploadFiles } from \"./files\";\nimport { FileUploaderComponent } from \"./FileUploader\";\n\n// FIXME: Can we use this same redux context elsewhere?\nconst mapStateToProps = (state) => {\n  const { links, entries } = state.files;\n  return {\n    files: entries,\n    links,\n    record: state.deposit.record,\n    config: state.deposit.config,\n    permissions: state.deposit.permissions,\n    isFileImportInProgress: state.files.isFileImportInProgress,\n    hasParentRecord: Boolean(\n      state.deposit.record?.versions?.index &&\n        state.deposit.record?.versions?.index > 1\n    ),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  uploadFiles: (draft, files) => dispatch(uploadFiles(draft, files)),\n  importParentFiles: () => dispatch(importParentFiles()),\n  deleteFile: (file) => dispatch(deleteFile(file)),\n});\n\nexport const FileUploader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FileUploaderComponent);\n\nexport { FileUploaderArea } from \"./FileUploaderArea\";\nexport { FileUploaderToolbar } from \"./FileUploaderToolbar\";\n","// This file is part of InvenioRDM\n// Copyright (C) 2023 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { AccessRightField } from \"./fields/AccessRightField\";\nimport { CreatibutorsField } from \"./fields/CreatibutorsField\";\nimport { DescriptionsField } from \"./fields/DescriptionsField\";\nimport { FundingField } from \"./fields/FundingField\";\nimport { IdentifiersField } from \"./fields/IdentifiersField\";\nimport { LicenseField } from \"./fields/LicenseField\";\nimport { MetadataOnlyToggle } from \"./fields/MetadataOnlyToggle\";\nimport { PublicationDateField } from \"./fields/PublicationDateField\";\nimport { PublisherField } from \"./fields/PublisherField\";\nimport { RelatedWorksField } from \"./fields/RelatedWorksField\";\nimport { SubjectsField } from \"./fields/SubjectsField\";\nimport { TitlesField } from \"./fields/TitlesField\";\nimport { VersionField } from \"./fields/VersionField\";\nimport { FileUploader } from \"./fields/file_uploader_components/index\";\n\nconst MobileActionMenu = () => {\n  return (\n    <div className=\"col-12\">\n      <h1>HERE IT IS</h1>\n    </div>\n  );\n};\n\nexport const overriddenComponents = {\n  \"InvenioAppRdm.Deposit.AccessRightField.container\": AccessRightField,\n  \"InvenioAppRdm.Deposit.CreatorsField.container\": CreatibutorsField,\n  \"InvenioAppRdm.Deposit.ContributorsField.container\": CreatibutorsField,\n  \"InvenioAppRdm.Deposit.DescriptionsField.container\": DescriptionsField,\n  \"InvenioAppRdm.Deposit.FundingField.container\": FundingField,\n  \"InvenioAppRdm.Deposit.IdentifiersField.container\": IdentifiersField,\n  \"InvenioAppRdm.Deposit.LicenseField.container\": LicenseField,\n  \"ReactInvenioDeposit.MetadataOnlyToggle.layout\": MetadataOnlyToggle,\n  \"InvenioAppRdm.Deposit.PublicationDateField.container\": PublicationDateField,\n  \"InvenioAppRdm.Deposit.PublisherField.container\": PublisherField,\n  \"InvenioAppRdm.Deposit.RelatedWorksField.container\": RelatedWorksField,\n  \"InvenioAppRdm.Deposit.TitlesField.container\": TitlesField,\n  \"InvenioAppRdm.Deposit.VersionField.container\": VersionField,\n  \"InvenioAppRdm.Deposit.SubjectsField.container\": SubjectsField,\n  \"InvenioAppRdm.Deposit.FileUploader.container\": FileUploader,\n  \"InvenioModularDetailPage.MobileActionMenu.container\": MobileActionMenu,\n  // \"InvenioAppRdm.Deposit.ResourceTypeField.container\": ResourceTypeField\n};\n","import React from \"react\";\nimport { FastField, Field, useFormikContext } from \"formik\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport { Dropdown, Form } from \"semantic-ui-react\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { set } from \"lodash\";\n\nconst SelectField = ({\n  defaultValue = \"\",\n  error = undefined,\n  errorDirection = \"above\",\n  fieldPath,\n  label = \"\",\n  labelIcon = undefined,\n  onAddItem = undefined,\n  onChange = undefined,\n  optimized = false,\n  options,\n  multiple = false,\n  required = false,\n  selectOnBlur = false,\n  width = undefined,\n  ...otherProps\n}) => {\n  const FormikField = optimized ? FastField : Field;\n  const { setFieldValue } = useFormikContext();\n\n  const displayError = (meta) => {\n    let error = meta.error;\n    if (!Array.isArray(meta.value)) {\n      if (\n        !_isEmpty(options) &&\n        !options.find(function (o) {\n          return o.value === meta.value;\n        }) &&\n        !_isEmpty(meta.value)\n      ) {\n        error = 'The current value \"'.concat(\n          meta.value,\n          '\" is invalid, please select another value.'\n        );\n      }\n    }\n    return error\n      ? {\n          content: error,\n          pointing: errorDirection,\n        }\n      : null;\n  };\n\n  const handleChange = (e, { value }) => {\n    setFieldValue(fieldPath, value);\n  };\n\n  return (\n    <FormikField id={fieldPath} name={fieldPath} as=\"select\" {...otherProps}>\n      {({\n        field, // { name, value, onChange, onBlur }\n        form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, initialValues, initialErrors, etc.\n        meta,\n      }) => {\n        return (\n          <Form.Field\n            error={meta.error && meta.touched ? true : undefined}\n            width={width}\n          >\n            <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n            <Dropdown\n              className=\"invenio-select-field\"\n              error={meta.error && meta.touched ? true : undefined}\n              fluid={true}\n              id={fieldPath}\n              multiple={multiple}\n              name={fieldPath}\n              options={options}\n              selection={true}\n              selectOnBlur={selectOnBlur}\n              {...field}\n              {...otherProps}\n              onChange={handleChange}\n              onAddItem={onAddItem}\n              value={field.value || defaultValue}\n            />\n            {meta.error && meta.touched && (\n              <div\n                className={`ui pointing above ${errorDirection} prompt label `}\n                role=\"alert\"\n                aria-atomic=\"true\"\n              >\n                {meta.error}\n              </div>\n            )}\n          </Form.Field>\n        );\n      }}\n    </FormikField>\n  );\n};\n\nexport { SelectField };\n","import React from \"react\";\nimport { Field, FastField, getIn } from \"formik\";\nimport { Form } from \"semantic-ui-react\";\nimport { ErrorLabel, FieldLabel } from \"react-invenio-forms\";\nimport { getTouchedParent } from \"../utils\";\n\nconst TextArea = ({\n  classnames,\n  error,\n  fieldPath,\n  fluid = true,\n  helpText = \"\",\n  label,\n  onBlur,\n  optimized = false,\n  required = false,\n  rows = 3,\n  showLabel = true,\n  width,\n  ...extraProps\n}) => {\n  // FIXME: This is a hack to remove the extra props that are not used by the\n  // semantic-ui Form.Input component. We should probably remove these earlier\n  // FIXME: Implement the extraRequiredFields and defaultFieldValues props\n  const {\n    customFieldsUI,\n    currentResourceType,\n    currentUserprofile,\n    descriptionMods,\n    defaultFieldValue,\n    extraRequiredFields,\n    fieldComponents,\n    helpTextMods,\n    icon,\n    iconMods,\n    inputIcon,\n    labelIcon,\n    labelMods,\n    noFiles,\n    placeholderMods,\n    priorityFieldValues,\n    ...filteredProps\n  } = extraProps;\n\n  const FormikField = optimized ? FastField : Field;\n\n  return (\n    <FormikField\n      id={fieldPath}\n      key={fieldPath}\n      name={fieldPath}\n      fieldPath={fieldPath}\n      optimized={optimized}\n    >\n      {({\n        field, // { name, value, onChange, onBlur }\n        form: { touched, errors, values }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n        meta,\n      }) => {\n        const touchedAncestor = getTouchedParent(touched, fieldPath);\n        console.log(\"TextArea\", fieldPath, meta, touchedAncestor);\n\n        return (\n          <Form.Field\n            required={!!required}\n            error={\n              (!!meta.error && (!!meta.touched || touchedAncestor)) || !!error\n            }\n            // (!!meta.touched && !!meta.errors) ||\n            // (!meta.touched && meta.initialError)\n            className={`invenio-text-area-field ${classnames}`}\n            width={width}\n          >\n            {showLabel && (\n              <FieldLabel\n                htmlFor={fieldPath}\n                icon={labelIcon || icon}\n                label={label}\n              />\n            )}\n            <Form.TextArea\n              id={fieldPath}\n              name={fieldPath}\n              rows={rows}\n              {...(helpText\n                ? { \"aria-describedby\": `${fieldPath}.helptext` }\n                : {})}\n              {...field}\n              {...(onBlur && {\n                onBlur: (e) => {\n                  onBlur(e);\n                  field.onBlur(e);\n                },\n              })}\n              {...filteredProps}\n            />\n            {((!!meta.error && (!!meta.touched || touchedAncestor)) ||\n              !!error) && <ErrorLabel fieldPath={fieldPath} />}\n            {helpText && <label className=\"helptext\">{description}</label>}\n          </Form.Field>\n        );\n      }}\n    </FormikField>\n  );\n};\n\nexport { TextArea };\n","import React from \"react\";\nimport { FastField, Field } from \"formik\";\nimport { Form } from \"semantic-ui-react\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { getTouchedParent } from \"../utils\";\n\nconst TextField = ({\n  fieldPath,\n  label,\n  labelIcon: label_icon,\n  inputIcon: input_icon = true,\n  required,\n  disabled,\n  error,\n  helpText,\n  optimized,\n  classnames,\n  showLabel = true,\n  fluid = \"true\",\n  onBlur,\n  width,\n  ...extraProps\n}) => {\n  const FormikField = optimized ? FastField : Field;\n  // FIXME: This is a hack to remove the extra props that are not used by the\n  // semantic-ui Form.Input component. We should probably remove these earlier\n  // FIXME: Implement the extraRequiredFields and defaultFieldValues props\n  const {\n    customFieldsUI,\n    currentResourceType,\n    currentUserprofile,\n    descriptionMods,\n    defaultFieldValue,\n    extraRequiredFields,\n    fieldComponents,\n    helpTextMods,\n    icon,\n    iconMods,\n    inputIcon,\n    labelIcon,\n    labelMods,\n    noFiles,\n    placeholderMods,\n    priorityFieldValues,\n    ...filteredProps\n  } = extraProps;\n  return (\n    <FormikField id={fieldPath} name={fieldPath}>\n      {({\n        field, // { name, value, onChange, onBlur }\n        form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n        meta,\n      }) => {\n        const touchedAncestor = getTouchedParent(touched, fieldPath);\n\n        return (\n          <Form.Field\n            required={!!required}\n            error={\n              (!!meta.error && (!!meta.touched || touchedAncestor)) ||\n              !!error ||\n              (!meta.touched && meta.initialError)\n            }\n            // (!!meta.touched && !!meta.errors) ||\n            // (!meta.touched && meta.initialError)\n            className={`invenio-text-input-field ${classnames}`}\n            fluid={fluid}\n            width={width}\n          >\n            {showLabel && (\n              <FieldLabel htmlFor={fieldPath} icon={label_icon} label={label} />\n            )}\n            <Form.Input\n              error={\n                (meta.error && (meta.touched || touchedAncestor)) ||\n                (!meta.touched && meta.initialError)\n                  ? meta.error\n                  : undefined\n              }\n              disabled={disabled}\n              fluid={fluid}\n              icon={input_icon ? label_icon : undefined}\n              id={fieldPath}\n              name={fieldPath}\n              aria-describedby={`${fieldPath}.helptext`}\n              {...field}\n              {...(onBlur && {\n                onBlur: (e) => {\n                  onBlur(e);\n                  field.onBlur(e);\n                },\n              })}\n              {...filteredProps}\n            />\n            {helpText && (\n              <div className=\"helptext\" id={`${fieldPath}.helptext`}>\n                {i18next.t(helpText)}\n              </div>\n            )}\n          </Form.Field>\n        );\n      }}\n    </FormikField>\n  );\n};\n\nexport { TextField };\n","import { func } from \"prop-types\";\nimport { getIn } from \"formik\";\n\n/**\n * Scroll page to top\n */\nfunction scrollTop() {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: \"smooth\",\n  });\n}\n\nfunction moveToArrayStart(startingArray, moveTargets, keyLabel) {\n  let newArray = [...startingArray];\n  for (const target of moveTargets) {\n    const index = newArray.findIndex((item) => item[keyLabel] === target);\n    newArray.unshift(...newArray.splice(index, 1));\n  }\n  return newArray;\n}\n\nfunction pushToArrayEnd(startingArray, targetValue, keyLabel) {\n  let newArray = [...startingArray];\n  newArray.push(\n    ...newArray.splice(\n      newArray.findIndex((item) => item[keyLabel] === targetValue),\n      1\n    )\n  );\n  return newArray;\n}\n\nfunction flattenKeysDotJoined(val) {\n  const keysArray = Object.keys(val);\n  let newArray = [];\n  for (let i = 0; i < keysArray.length; i++) {\n    const myValue = val[keysArray[i]];\n    if (\n      typeof myValue === \"object\" &&\n      !Array.isArray(myValue) &&\n      myValue !== null\n    ) {\n      const childKeys = flattenKeysDotJoined(val[keysArray[i]]).map(\n        (k) => `${keysArray[i]}.${k}`\n      );\n      newArray = newArray.concat(childKeys);\n    } else {\n      newArray.push(keysArray[i]);\n    }\n  }\n  return newArray;\n}\n\nfunction flattenWrappers(page) {\n  let flattened = [];\n  if (page.subsections) {\n    for (const sub of page.subsections) {\n      if (sub.subsections) {\n        flattened = flattened.concat(flattenWrappers(sub));\n      } else {\n        flattened.push(sub);\n      }\n    }\n  } else {\n    flattened.push(page);\n  }\n  return flattened;\n}\n\nfunction getTouchedParent(touched, fieldPath) {\n  const fieldParts = fieldPath.split(\".\");\n  let touchedAncestor = false;\n\n  for (let i = fieldParts.length; i > 1; i--) {\n    let currentPath = fieldParts.slice(0, i).join(\".\");\n    if (getIn(touched, currentPath) === true) {\n      touchedAncestor = true;\n      break;\n    }\n  }\n  return touchedAncestor;\n}\n\n// Compares two objects deeply, ignoring the keys passed in the ignoreKeys array\n// Returns true if the objects are deeply equal, false otherwise\n// If ignoreKeys is not passed, it compares the objects deeply without ignoring any keys\n//\n// param obj1: first object to compare\n// param obj2: second object to compare\n// param ignoreKeys: array of keys to ignore when comparing the objects\n// returns: true if the objects are deeply equal, false otherwise\nfunction areDeeplyEqual(obj1, obj2, ignoreKeys) {\n  if (ignoreKeys) {\n    obj1 = excludeObjectKeys(obj1, ignoreKeys);\n    obj2 = excludeObjectKeys(obj2, ignoreKeys);\n  }\n  if (obj1 === obj2) return true;\n\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\n    if (obj1.length !== obj2.length) return false;\n\n    return obj1.every((elem, index) => {\n      return areDeeplyEqual(elem, obj2[index]);\n    });\n  }\n\n  if (\n    typeof obj1 === \"object\" &&\n    typeof obj2 === \"object\" &&\n    obj1 !== null &&\n    obj2 !== null\n  ) {\n    if (Array.isArray(obj1) || Array.isArray(obj2)) return false;\n\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n\n    if (\n      keys1.length !== keys2.length ||\n      !keys1.every((key) => keys2.includes(key))\n    )\n      return false;\n\n    for (let key in obj1) {\n      console.log(obj1[key], obj2[key]);\n      let isEqual = areDeeplyEqual(obj1[key], obj2[key]);\n      if (!isEqual) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction excludeObjectKeys(obj, keys) {\n  const newObj = {};\n  for (const key in obj) {\n    if (!keys.includes(key)) {\n      newObj[key] = obj[key];\n    }\n  }\n  return newObj;\n}\n\nexport {\n  areDeeplyEqual,\n  excludeObjectKeys,\n  getTouchedParent,\n  scrollTop,\n  moveToArrayStart,\n  pushToArrayEnd,\n  flattenKeysDotJoined,\n  flattenWrappers,\n};\n"],"names":["ProtectionButtonsComponent","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_this$props","props","formik","fieldPath","form","setFieldValue","active","_this$props2","_inherits","_createClass","key","value","_this$props3","this","disabled","_this$props4","publicColor","restrictedColor","React","Button","Group","widths","className","onClick","handlePublicButtonClick","i18next","t","handleRestrictionButtonClick","Component","propTypes","PropTypes","isRequired","defaultProps","ProtectionButtons","_Component2","_this2","FastField","name","component","formikProps","_extends","MetadataAccess","publicMetadata","recordAccess","publicCommunity","communityAccess","Overridable","id","Form","Field","htmlFor","Icon","FilesAccess","_ref","access","accessCommunity","metadataOnly","publicFiles","files","record","filesButtonsDisplayed","disable","EmbargoDateField","label","labelIcon","placeholder","required","helpText","TextField","FieldLabel","icon","EmbargoAccess","_access$embargo","_access$embargo2","_access$embargo3","useFormikContext","console","log","recordPublic","filesPublic","communityPublic","filesRestricted","embargoActive","embargo","embargoUntil","until","embargoReason","reason","embargoWasLifted","_isEmpty","embargoEnabled","fmtDate","DateTime","fromISO","toLocaleString","DATE_FULL","List","divided","relaxed","Content","Header","as","Description","Trans","Divider","hidden","TextAreaField","optimized","AccessMessage","fullyRestricted","fullyPublic","embargoedFiles","restrictedFiles","fullEmbargo","Message","positive","visible","warning","i18nKey","negative","defaults","values","date","components","bold","AccessRightFieldCmp","_this$props$label","showMetadataAccess","community","isGhostCommunity","is_ghost","visibility","isMetadataOnly","enabled","Grid","Row","Column","width","field","undefined","AccessRightFieldComponent","connect","state","deposit","editorState","selectedCommunity","AccessRightField","AffiliationsField","affiliations","map","affiliation","_objectSpread","text","acronym","selectRef","RemoteSelectField","suggestionAPIUrl","suggestionAPIHeaders","Accept","initialSuggestions","getIn","serializeSuggestions","serializeAffiliations","noQueryMessage","allowAdditions","clearable","multiple","onValueChange","_ref2","selectedSuggestions","val","ref","newIdentifier","scheme","identifier","idTypeData","orcid","isni","gnd","ror","CreatibutorsIdentifiers","_ref$label","_ref$idTypes","idTypes","_useState","useState","_useState2","_slicedToArray","identifiersLength","setIdentifiersLength","_useState3","_useState4","setHaveChangedNumber","FieldArray","addButtonLabel","render","arrayHelpers","_arrayHelpers$form$va","person_or_org","identifiers","option","index","fieldPathPrefix","inline","SelectField","options","selection","selectOnBlur","remove","handleRemove","type","newItem","push","handleAddNew","labelPosition","initialOptions","CREATIBUTOR_TYPE","creatibutors","showManualEntry","results","creatibutor","affNames","forEach","idx","idString","i","link","href","target","rel","Image","src","verticalAlign","makeIdEntry","extra","content","Subheader","textAlign","deserializeCreatibutor","initialCreatibutor","family_name","given_name","_get","role","serializeCreatibutor","submittedCreatibutor","submittedAffiliations","getCreatorSchema","isCreator","Yup","when","schema","of","shape","is","then","url","matches","disallowEmptyString","message","_","ModalActions","NamesAutocompleteOptions","CreatibutorsFormBody","_ref6","autocompleteNames","parentFieldPath","roleOptions","showPersonForm","personOrOrgPath","familyNameFieldPath","givenNameFieldPath","identifiersFieldPath","nameFieldPath","typeFieldPath","affiliationsRef","createRef","identifiersRef","inputRef","namesAutocompleteRef","surnameRef","RadioField","checked","onChange","_ref7","_ref8","current","focus","selectOnNavigation","searchInput","autoFocus","search","_ref9","setState","suggestions","chosen","Object","entries","_ref3","path","selectedOptions","valuesToOptions","affiliationsState","_ref4","searchQuery","error","open","window","setTimeout","document","getElementById","querySelectorAll","onPersonSearchChange","input","scrolling","CreatibutorsFormActionButtons","_ref10","action","resetForm","saveAndContinueLabel","setAction","setShowPersonForm","handleModalClose","handleSubmit","floated","primary","CreatibutorsItemForm","_ref11","addLabel","_ref11$autocompleteNa","editLabel","_ref11$initialCreatib","modalAction","onCreatibutorChange","_ref11$roleOptions","setSaveAndContinueLabel","_useState5","_useState6","CreatorSchema","Formik","initialValues","onSubmit","formikBag","setSubmitting","validationSchema","validateOnChange","validateOnBlur","_ref12","_ref13","_ref13$autocompleteNa","handleModalOpen","_ref13$initialCreatib","modalOpen","_ref13$roleOptions","trigger","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","enableReinitialize","_ref14","Modal","centered","onOpen","onClose","closeIcon","closeOnDimmerClick","Actions","CreatibutorsFieldItem","compKey","creatibutorDown","creatibutorUp","creatibutorsLength","itemError","replaceCreatibutor","removeCreatibutor","moveCreatibutor","displayName","showEditForms","setShowEditForms","dropRef","useRef","_useDrag","useDrag","item","_useDrag2","drag","preview","_useDrop","useDrop","accept","hover","monitor","dragIndex","hoverIndex","isOver","shallow","collect","_useDrop2","drop","handleFormClose","filter","elem","firstError","returnBottomError","_typeof","keys","find","includes","Ref","innerRef","Item","size","_toConsumableArray","some","alt","height","_roleOptions$find$tex","_roleOptions$find","friendlyRole","Label","renderRole","pointing","prompt","selectedCreatibutor","identifiersError","orderOptions","optionList","contribsOptionList","newOptionList","item2","toLowerCase","roleArray","newRoleArray","_loop","_commonRoles","_i","findIndex","unshift","apply","splice","moveCommonRolesToTop","sort","o1","o2","localeCompare","CreatibutorsFieldForm","_ref3$addButtonLabel","addingSelf","setAddingSelf","_ref3$autocompleteNam","config","currentUserprofile","description","_ref3$form","errors","initialErrors","touched","_ref3$label","_ref3$labelIcon","_ref3$modal","modal","formikArrayMove","move","formikArrayPush","formikArrayRemove","formikArrayReplace","replace","setCreatibutorsTouched","setModalOpen","creatibutorsList","formikInitialValues","initialError","creatibutorsTouched","creatibutorsError","orderedRoleOptions","vocabularies","contributors","focusAddButtonHandler","currentIndex","myAffiliations","selfCreatibutor","full_name","isPerson","familyName","givenName","affiliationName","givenNameSuffix","creatibutorNameDisplay","CreatibutorsField","_ref4$addButtonLabel","_ref4$autocompleteNam","_ref4$label","_ref4$labelIcon","_ref4$modal","_ref4$roleOptions","_ref4$schema","otherProps","_objectWithoutProperties","_excluded","setFieldTouched","useEffect","emptyAdditionalDescription","lang","sortOptions","AdditionalDescriptionsField","_ref$recordUI","recordUI","_ref$editorConfig","editorConfig","descriptionsLength","setDescriptionsLength","haveChangedNumber","fieldPathSanitized","textFieldRef","useLayoutEffect","_document$getElementB","nodes","defaultNewValue","metadata","additional_descriptions","_recordUI$additional_","fieldPathPrefixSanitized","TextArea","classnames","LanguagesField","title_l10n","tablet","computer","mobile","DescriptionsField","_ref$labelIcon","AwardResults","withState","currentResultsState","deserializeAward","deserializeFunder","computeFundingContents","_ref2$form","data","hits","award","funder","deserializedAward","funding","_computeFundingConten","headerContent","descriptionContent","awardOrFunder","Radio","number","basic","CustomAwardForm","selectedFunding","funders","funderItem","funderName","funderPID","pid","deserializeFunderToDropdown","selectedFundersArray","funderDropObject","selectedFunder","deserializedFunder","FunderDropdown","awardsList","updateQueryState","currentQueryState","_useFundersFromFacets","awards","_React$useState","_React$useState2","result","setResult","_awards$data$aggregat","loading","aggregations","buckets","agg","getFundersFromAwardsFacet","useFundersFromFacets","fundersFromFacets","Dropdown","event","newFilter","filters","page","fluid","NoAwardResults","switchToCustom","Segment","e","preventDefault","ModalTypes","StandardSchema","CustomFundingSchema","title","test","parent","_this$parent","FundingModal","initialMode","mode","onAwardChange","searchConfig","setOpen","setMode","openModal","closeModal","searchApi","InvenioSearchApi","customObject","initialFunding","FundingSchema","ReactSearchKit","appName","urlHandlerApi","initialQueryState","SearchBar","autofocus","actionProps","ResultsLoader","EmptyResults","Error","Container","Pagination","axios","headers","FundingFieldItem","_fundingItem$award","_fundingItem$award2","fundingItem","awardType","moveFunding","replaceFunding","removeFunding","FundingFieldForm","deserializeAwardFunc","deserializeFunderFunc","computeFundingContentsFunc","_award$funder","country","_funding$funder$name","_funding$funder","_funding$funder2","_funding$funder3","_value$award","FundingField","emptyIdentifier","emptyURL","IdentifiersField","_ref$required","_ref$schemeOptions","schemeOptions","_ref$showEmptyValue","showEmptyValue","_useFormikContext","_document$getElementB2","filterEmptyIdentifiers","parentElement","closest","siblingElements","from","siblingHasFocus","element","firstElementChild","activeElement","filteredIdentifiers","reduce","newList","isUrl","hasText","hasScheme","onBlur","LicenseFilter","updateQueryFilters","userSelectionFilters","filterValue","onToggleClicked","isChecked","_isChecked","Menu","LicenseResults","serializeLicenses","serializeLicenseResult","description_l10n","overriddenComponents","LicenseSchema","selectedLicense","LicenseModal","onLicenseChange","initialLicenseProp","initialLicense","OverridableContext","Provider","compact","Toggle","LicenseFieldItem","license","moveLicense","replaceLicense","removeLicense","initial","_truncate","VisibleLicense","uiRights","right","uiRight","_find","o","LicenseFieldForm","uiFieldPath","LicenseField","MetadataOnlyToggle","filesEnabled","Checkbox","toggle","DateDropdown","unit","position","useRange","handleDropdownChange","PublicationDateField","_ref2$label","_ref2$labelIcon","_ref2$required","currentDate","Date","currentYear","String","getFullYear","currentDay","getDate","padStart","currentMonth","getMonth","yearValue","setYearValue","monthValue","setMonthValue","dayValue","setDayValue","endYearValue","setEndYearValue","endMonthValue","setEndMonthValue","endDayValue","setEndDayValue","_useState13","join","_useState14","setDateValue","_useState15","_useState16","setUseRange","publicationDate","publication_date","setDates","year","month","day","_publicationDate$spli","split","_publicationDate$spli2","start","end","_start$split","_start$split2","startYear","startMonth","startDay","_end$split","_end$split2","endYear","endMonth","endDay","_publicationDate$spli3","_publicationDate$spli4","newDateValue","v","yearOptions","toString","reverse","monthOptions","days","dayOptions","selectedMonth","daysInSelectedMonth","slicedDayOptions","slice","startDropdowns","endDropdowns","_ref4$form","meta","dropdown","PublisherField","_ref$placeholder","extraProps","inputIcon","emptyRelatedWork","resource_type","relation_type","RelatedWorksField","relatedWorksLength","setRelatedWorksLength","related_identifiers","relations","ResourceTypeField","labelclassname","style","marginBottom","SubjectsField","limitTo","subjects","subject","prefix","limitToOptions","GroupField","preSearchChange","prepareSuggest","suggestionAPIQueryParams","serializeSubjects","serializeAddedValue","helptext","defaultValue","emptyAlternateTitle","emptyTranslatedTitle","AdditionalTitlesField","titlesLength","setTitlesLength","additional_titles","titleWord","TitlesField","_ref$fieldPath","_ref$disabled","showLabel","VersionField","changeURLAfterCreation","_x","_changeURLAfterCreation","_asyncToGenerator","_regeneratorRuntime","_callee5","draftURL","_context5","prev","next","history","replaceState","stop","saveDraftWithUrlUpdate","_callee","draft","draftsService","hasAlreadyId","response","_context","save","sent","links","self_html","abrupt","_x2","_x3","FileTableHeader","isDraftRecord","Table","HeaderCell","Popup","fitted","FileTableRow","_file$uploadState","_file$uploadState2","_file$uploadState3","_file$uploadState4","_file$uploadState5","file","deleteFile","defaultPreview","setDefaultPreview","decimalSizeDisplay","isCancelling","setIsCancelling","isDeleting","setIsDeleting","isDefaultPreview","handleDelete","t0","Cell","uploadState","isPending","checksum","fontSize","humanReadableBytes","Progress","percent","progressPercentage","isFailed","progress","autoSuccess","isFinished","isUploading","cancelUploadFn","handleCancelUpload","FileUploadBox","filesList","dragText","uploadButtonIcon","uploadButtonText","openFileDialog","padded","columns","FilesListTable","_ref5","formikDraft","Body","filename","FileUploaderArea","dropzoneParams","Dropzone","getRootProps","getInputProps","setDefaultPreviewFile","FileUploaderToolbar","filesSize","showMetadataOnlyToggle","quota","handleOnChangeMetadataOnly","horizontal","maxFiles","color","image","remaining","maxfiles","Detail","maxStorage","UploadState","uploading","finished","pending","FileUploaderComponent","hasParentRecord","_ref$noFiles","noFiles","permissions","uploadFiles","importParentFiles","importButtonIcon","importButtonText","isFileImportInProgress","uiProps","warningMsg","setWarningMsg","fileState","status","totalSize","preventDropOnDocument","onDropAccepted","acceptedFiles","maxFileNumberReached","acceptedFilesSize","maxFileStorageReached","filesNames","_map","duplicateFiles","acceptedFile","header","wrappedUploadFiles","list","noClick","noKeyboard","displayImportBtn","info","display","float","marginTop","is_published","NewVersionButton","onError","can_new_version","fileDetailsShape","Math","pow","_state$deposit$record","_state$deposit$record2","_state$files","Boolean","versions","dispatch","_callee2","uploadFileUrl","_iterator","_step","_context2","service","drafts","payload","_createForOfIteratorHelper","s","n","done","upload","err","f","_x4","_x5","_x6","_callee4","getState","draftLinks","_context4","importParentRecordFiles","_x10","_x11","_x12","_callee3","fileLinks","_context3","_x7","_x8","_x9","createElement","_Object$entries","_Object$entries$_i","overrideStore","add","_ref$defaultValue","_ref$errorDirection","errorDirection","_ref$onAddItem","onAddItem","_ref$optimized","_ref$multiple","_ref$selectOnBlur","_ref$width","FormikField","handleChange","_ref$helpText","_ref$rows","rows","_ref$showLabel","customFieldsUI","currentResourceType","descriptionMods","defaultFieldValue","extraRequiredFields","fieldComponents","helpTextMods","iconMods","filteredProps","labelMods","placeholderMods","priorityFieldValues","_excluded2","touchedAncestor","getTouchedParent","ErrorLabel","label_icon","_ref$inputIcon","input_icon","_ref$fluid","Input","scrollTop","scrollTo","top","left","behavior","moveToArrayStart","startingArray","moveTargets","keyLabel","newArray","pushToArrayEnd","targetValue","flattenKeysDotJoined","keysArray","_loop2","myValue","isArray","childKeys","k","flattenWrappers","flattened","subsections","_step2","_iterator2","sub","fieldParts","currentPath","areDeeplyEqual","obj1","obj2","ignoreKeys","excludeObjectKeys","every","keys1","keys2","obj","newObj"],"sourceRoot":""}