{"version":3,"file":"js/invenio-oai-pmh-details.7dffc6f0e424a519d37f.js","mappings":"ylBAUoE,IAE9DA,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,EAAAA,EAAAA,GAAA,KAAAF,GAAAG,EAAA,KAAAH,EAAAI,UAAA,QAAAC,EAAAA,EAAAA,GAAAL,EAAAC,IAAAK,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,IAAA,SAAAC,MACpB,WACE,IAAAC,EAAqCC,KAAKC,MAAlCC,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAAQC,EAAUL,EAAVK,WAEtB,OACEC,EAAAA,cAACC,EAAAA,gBAAe,CACdJ,KAAMA,EACNC,OAAQ,WACNA,EAAOD,EACT,GAEAG,EAAAA,cAACE,EAAAA,EAAM,CACLC,QAAQ,QACRC,OAAK,EACLC,KAAK,OACL,aAAYC,EAAAA,EAAQC,EAAE,qBACtBC,aAAcT,EACdU,aAAcV,IAItB,IAAC,CArBmB,CAASC,EAAAA,WAwB/Bf,EAAiByB,UAAY,CAC3Bb,KAAMc,IAAAA,OAAiBC,WACvBd,OAAQa,IAAAA,KAAeC,WACvBb,WAAYY,IAAAA,MAGd1B,EAAiB4B,aAAe,CAC9Bd,WAAY,MACZ,IAEmBe,EAAU,SAAAC,GAC7B,SAAAD,EAAYlB,GAAO,IAAAoB,EAQe,OARf7B,EAAAA,EAAAA,GAAA,KAAA2B,GACjBE,EAAA5B,EAAA,KAAA0B,EAAA,CAAMlB,KAAOqB,EAAAA,EAAAA,GAAAD,EAAA,UAgBN,WACPA,EAAKE,UAAS,iBAAO,CACnBC,yBAAyB,EACzBC,qBAAsBd,EAAAA,EAAQC,EAAE,WACjC,IAEDS,EAAKK,iBACP,KAACJ,EAAAA,EAAAA,GAAAD,EAAA,mBAEiB,WAChB,IAAIM,EAAaC,YAAW,WAC1BP,EAAKE,SAASF,EAAKQ,cACrB,GAAG,MAEHR,EAAKE,SAAS,CAAEI,WAAAA,GAClB,KAACL,EAAAA,EAAAA,GAAAD,EAAA,qBAEmB,SAACS,GACnBA,EAAMC,UACa,eAAfD,EAAME,MAAuBX,EAAKE,SAAS,CAAEU,kBAAkB,IAChD,eAAfH,EAAME,MAAuBX,EAAKE,SAAS,CAAEU,kBAAkB,GACrE,IApCEZ,EAAKQ,cAAgB,CACnBL,yBAAyB,EACzBC,qBAAsB,GACtBQ,kBAAkB,EAClBN,WAAY,MAEdN,EAAKa,MAAQb,EAAKQ,cAAcR,CAClC,CAAC,OAAA1B,EAAAA,EAAAA,GAAAwB,EAAAC,IAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,EAAAtB,IAAA,uBAAAC,MAED,WACE,IAAQ6B,EAAe3B,KAAKkC,MAApBP,WAEJA,GAAYQ,aAAaR,EAC/B,GAAC,CAAA9B,IAAA,SAAAC,MAyBD,WACE,IAAAsC,EAAgCpC,KAAKC,MAA7BC,EAAIkC,EAAJlC,KAAMmC,EAAaD,EAAbC,cACdC,EACEtC,KAAKkC,MADCT,EAAoBa,EAApBb,qBAAsBD,EAAuBc,EAAvBd,wBAAyBS,EAAgBK,EAAhBL,iBAGvD,OACE/B,GACEG,EAAAA,cAACkC,EAAAA,EAAK,CACJC,KAAK,QACLC,KAAMR,GAAoBT,EAC1BkB,QAASjB,GAAwBd,EAAAA,EAAQC,EAAE,qBAC3C+B,WAAYlB,EACZmB,SAAUP,EACVQ,KAAK,OACLC,QACEzC,EAAAA,cAACf,EAAgB,CACfY,KAAMA,EACNC,OAAQH,KAAKG,OACbC,WAAYJ,KAAK+C,qBAM7B,IAAC,CAjE4B,CAASC,EAAAA,WAoExC7B,EAAWJ,UAAY,CACrBsB,cAAerB,IAAAA,OACfd,KAAMc,IAAAA,QAGRG,EAAWD,aAAe,CACxBmB,cAAe,eACfnC,KAAM,I,wWCvGR,IAAM+C,EAAe,CACnBC,OAAQ,kBACRC,SAAU,WACVC,aAAc,eACdC,YAAa,cACbC,SAAU,eAGNC,EAAU,SAAAnC,GACd,SAAAmC,EAAYtD,GAAO,IAAAoB,GAAA7B,EAAAA,EAAAA,GAAA,KAAA+D,GACjBlC,EAAA5B,EAAA,KAAA8D,EAAA,CAAMtD,KAAOqB,EAAAA,EAAAA,GAAAD,EAAA,gBAAAmC,EAAAA,EAAAA,GAAAC,IAAAA,MAaA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAA,MAAA,SAAAO,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC8D,OAArEP,GAA0BQ,EAAAA,EAAAA,YAAWC,EAAAA,KAAKC,IAAI,wBAAuBL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGlDP,EAAwBW,QAAO,OAAhDT,EAAQG,EAAAO,KAERT,EAAuB,QAAhBF,EAAGC,EAASW,YAAI,IAAAZ,GAAM,QAANA,EAAbA,EAAea,YAAI,IAAAb,OAAA,EAAnBA,EAAqBa,KAEhCC,IAASZ,KACNC,EAAaD,EAAQa,KAAI,SAACC,GAAK,IAAAC,EAAA,MAAM,CACzChF,IAAK+E,EAAME,GACXhF,MAAO8E,EAAME,GACb5E,KAA4B,QAAxB2E,EAAE5B,EAAa2B,EAAME,WAAG,IAAAD,EAAAA,EAAIxD,EAAK0D,gBAAgBH,EAAME,IAC5D,IAEDzD,EAAKE,SAAS,CACZuC,QAASC,KAEZC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgB,GAAAhB,EAAA,SAEDiB,QAAQC,MAAKlB,EAAAgB,IAEb3D,EAAKE,SAAS,CACZ2D,MAAO,CACLC,OAAQxE,EAAAA,EAAQC,EAAE,eAClB8B,QAAS/B,EAAAA,EAAQC,EAAE,mCACnBkE,GAAId,EAAAgB,GAAMI,QAEX,yBAAApB,EAAAqB,OAAA,GAAA3B,EAAA,oBAQPpC,EAAAA,EAAAA,GAAAD,EAAA,qBAIoB,SAACiE,EAAMC,GACzB,IAAMC,EAAYnE,EAAKoE,kBAAkBH,GACzC,OAAIE,EACKF,EAAKI,QAAQF,EAAWD,GAE1BD,CACT,KAEAhE,EAAAA,EAAAA,GAAAD,EAAA,qBAKoB,SAACiE,GACnB,GAAIZ,IAASY,GAAO,OAAO,KAK3B,OAHe,IAAIK,gBAAgBL,GACbjB,IAFF,mBAIH,IACnB,KAEA/C,EAAAA,EAAAA,GAAAD,EAAA,mBAMkB,SAACuE,GACjB,IAAMC,EAAcD,EAAUF,QAAQ,IAAK,KAC3C,OAAOI,EAAAA,EAAAA,YAAWD,EACpB,KAEAvE,EAAAA,EAAAA,GAAAD,EAAA,kBAKiB,SAACS,EAAO0C,GACvB,IAAMuB,EAAYvB,EAAK1E,MACvBwC,EAA2BjB,EAAKa,MAAxB4B,EAAOxB,EAAPwB,QAASkC,EAAK1D,EAAL0D,MAEjB,GAAIlC,EAAQmC,MAAK,SAACC,GAAG,OAAKA,EAAIrG,MAAQkG,CAAS,IAAG,CAChD,IAAMI,EAAW,CAAC,EAClBC,OAAOC,KAAKL,GAAOrB,KAAI,SAAC9E,GACtB,IAAMyF,EAAOU,EAAMnG,GACnBsG,EAAStG,GAAOwB,EAAKiF,kBAAkBhB,EAAMS,EAC/C,IACA1E,EAAKE,SAAS,CAAEyE,MAAOG,EAAUI,cAAeR,GAClD,CACF,KAACzE,EAAAA,EAAAA,GAAAD,EAAA,mBAEiB,WAChBA,EAAKE,SAAS,CAAE2D,WAAOsB,GACzB,IA1GE,IAAeC,EAAgBxG,EAAMuE,KAA7BwB,MAEFU,EAAgBrF,EAAKoE,kBAAkBgB,EAAY,oBAOvD,OALFpF,EAAKa,MAAQ,CACX8D,MAAOS,GAAe,GACtB3C,QAAS,GACTyC,cAA4B,OAAbG,QAAa,IAAbA,EAAAA,EAAiB,SAChCxB,WAAOsB,GACPnF,CACJ,CAAC,OAAA1B,EAAAA,EAAAA,GAAA4D,EAAAnC,IAAAxB,EAAAA,EAAAA,GAAA2D,EAAA,EAAA1D,IAAA,oBAAAC,MAkCD,WACEE,KAAK2G,cACP,GAAC,CAAA9G,IAAA,SAAAC,MA8DD,WACE,IAAA8G,EAAiD5G,KAAKkC,MAA9C8D,EAAKY,EAALZ,MAAOlC,EAAO8C,EAAP9C,QAASoB,EAAK0B,EAAL1B,MAAOqB,EAAaK,EAAbL,cACzBM,EAAcb,EAAM,mBACpBc,EAAkBd,EAAM,uBAE9B,OACE3F,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0G,EAAAA,EAAI,KACH1G,EAAAA,cAAC0G,EAAAA,EAAKC,IAAG,MACT3G,EAAAA,cAAC0G,EAAAA,EAAKC,IAAG,KACP3G,EAAAA,cAAC0G,EAAAA,EAAKE,OAAM,CAACC,MAAO,GAClB7G,EAAAA,cAAC8G,EAAAA,EAAM,CAACC,GAAG,MAAMzG,EAAAA,EAAQC,EAAE,WAE7BP,EAAAA,cAAC0G,EAAAA,EAAKE,OAAM,CAACC,MAAO,GAAIG,UAAU,SAChChH,EAAAA,cAAA,QAAMiH,UAAU,SAAS3G,EAAAA,EAAQC,EAAE,WACnCP,EAAAA,cAACkH,EAAAA,EAAQ,CACPC,QAAS1D,EACT2D,UAAQ,EACRC,WAAS,EACTC,aAAcpB,EACdqB,oBAAoB,EACpBC,SAAU7H,KAAK8H,oBAKvBzH,EAAAA,cAAC0H,EAAAA,EAAK,CAACC,aAAW,GAChB3H,EAAAA,cAAC0H,EAAAA,EAAME,KAAI,KACT5H,EAAAA,cAAC0H,EAAAA,EAAMf,IAAG,CAACnH,IAAI,gBACbQ,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,GACjB7G,EAAAA,cAAA,SAAIM,EAAAA,EAAQC,EAAE,kBAEhBP,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,GAAIG,UAAU,QAC/BhH,EAAAA,cAAA,KACE8H,KAAMtB,EACNuB,OAAO,SACPC,MAAO1H,EAAAA,EAAQC,EAAE,oBACjB0H,IAAI,cAEHzB,IAGLxG,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,EAAGG,UAAU,SAC9BhH,EAAAA,cAACc,EAAU,CAACjB,KAAM2G,MAGtBxG,EAAAA,cAAC0H,EAAAA,EAAMf,IAAG,CAACnH,IAAI,oBACbQ,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,GACjB7G,EAAAA,cAAA,SAAIM,EAAAA,EAAQC,EAAE,sBAEhBP,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,GAAIG,UAAU,QAC/BhH,EAAAA,cAAA,KACE8H,KAAMrB,EACNsB,OAAO,SACPC,MAAO1H,EAAAA,EAAQC,EAAE,oBACjB0H,IAAI,cAEHxB,IAGLzG,EAAAA,cAAC0H,EAAAA,EAAMG,KAAI,CAAChB,MAAO,EAAGG,UAAU,SAC9BhH,EAAAA,cAACc,EAAU,CAACjB,KAAM4G,SAKxBpC,IAASQ,IACT7E,EAAAA,cAACkI,EAAAA,IAAYC,EAAAA,EAAAA,GAAA,GAAKtD,EAAK,CAAEuD,mBAAoBzI,KAAK0I,mBAI1D,IAAC,CAtLa,CAAS1F,EAAAA,WAyLzBO,EAAWxC,UAAY,CACrByD,KAAMxD,IAAAA,OAAiBC,YAGzB,UCzMA,IAAM0H,EAAeC,SAASC,eAAe,0BACvCR,EAAQM,EAAaG,QAAQT,MAC7BU,EAASC,KAAKC,MAAMN,EAAaG,QAAQC,QACzCG,EAAWF,KAAKC,MAAMN,EAAaG,QAAQK,KAC3CC,EAAeJ,KAAKC,MAAMN,EAAaG,QAAQM,cAC/CC,EAAcL,KAAKC,MAAMN,EAAaG,QAAQO,aAC9CC,EAAgBN,KAAKC,MAAMN,EAAaG,QAAQQ,eAChDC,EAAUP,KAAKC,MAAMN,EAAaG,QAAQS,SAC1CC,EAAcC,IAAKd,EAAaG,QAAS,eACzCY,EAAYV,KAAKC,MAAMQ,IAAKd,EAAaG,QAAS,UAAW,QAC7Da,EAAiBhB,EAAaG,QAAQc,aACtCC,EAAiBb,KAAKC,MAAMN,EAAaG,QAAQe,gBACjDC,GAAWd,KAAKC,MAAMN,EAAaG,QAAQiB,UAE3CC,GAAkB,SAACxF,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMyF,cAAc,EAEhDC,GAAsB,CAC1B,oCAAoCC,EAAAA,EAAAA,aAAYC,EAAAA,GAAM,CACpDC,QAASL,GACTM,gBAAiB3J,EAAAA,EAAQC,EACvB,+DAGJ,sCAAsCuJ,EAAAA,EAAAA,aAAYI,EAAAA,GAAQ,CACxDF,QAASL,GACTM,gBAAiB3J,EAAAA,EAAQC,EACvB,iEAKN+H,GACE6B,EAAAA,OACEnK,EAAAA,cAACoK,EAAAA,mBAAmBC,SAAQ,CAAC5K,MAAOoK,IAClC7J,EAAAA,cAACsK,EAAAA,GAAgB,CACftC,MAAOA,EACPkB,QAASA,EACTC,YAAaA,EACboB,QAAS7B,EACTM,YAAaA,EACbC,cAAeA,EACfH,IAAKD,EACLQ,UAAWA,EACXN,aAAcA,EACdO,eAAgBA,EAChBE,eAAgBA,EAChBC,SAAUA,IAEVzJ,EAAAA,cAACkD,EAAU,QAGfoF,E,6lDC7DG,IAAMkC,EAAe,CAC1BC,GAAI,CAAEC,Y,4kBACNC,GAAI,CAAED,YAAaE,GACnBC,GAAI,CAAEH,YAAaI,I,WCKf3D,EAAU,CACd4D,YAAa,KACbC,mBAAmB,EACnBC,OAAOC,EACPC,UAAWX,EACXY,cAAc,EACdC,aAAa,EAEbC,UAAW,CACTC,MAAO,CAAC,WAERC,OAAQ,IAEVC,MAAO,CAILC,2BAA4B,KAI1BpL,EAAUqL,EAAAA,EAAKC,iBACrBtL,EAAQuL,IAAIC,EAAAA,GAAkBD,IAAIE,EAAAA,IAAkBC,KAAK7E,E,kBClCzD,IAAI8E,EAAY,EAAQ,OACpBC,EAAa,EAAQ,OACrBC,EAAgB,EAAQ,OACxBC,EAAW,EAAQ,OA6BvBC,EAAOC,QApBP,SAAyBC,GACvB,OAAO,SAASC,GACdA,EAASJ,EAASI,GAElB,IAAIC,EAAaP,EAAWM,GACxBL,EAAcK,QACdrG,EAEAuG,EAAMD,EACNA,EAAW,GACXD,EAAOG,OAAO,GAEdC,EAAWH,EACXR,EAAUQ,EAAY,GAAGI,KAAK,IAC9BL,EAAOM,MAAM,GAEjB,OAAOJ,EAAIH,KAAgBK,CAC7B,CACF,C,kBC9BA,IAAIR,EAAW,EAAQ,OACnBW,EAAa,EAAQ,OAqBzBV,EAAOC,QAJP,SAAoBE,GAClB,OAAOO,EAAWX,EAASI,GAAQQ,cACrC,C,kBCpBA,IAAIC,EAAkB,EAAQ,OAC1BC,EAAa,EAAQ,OACrBC,EAAe,EAAQ,OAwC3Bd,EAAOC,QAVP,SAAmBc,EAAQC,GACzB,IAAIC,EAAS,CAAC,EAMd,OALAD,EAAWF,EAAaE,EAAU,GAElCH,EAAWE,GAAQ,SAAS3N,EAAOD,EAAK4N,GACtCH,EAAgBK,EAAQ9N,EAAK6N,EAAS5N,EAAOD,EAAK4N,GACpD,IACOE,CACT,C,kBCxCA,IAAIC,EAAU,EAAQ,OAkCtBlB,EAAOC,QAJP,SAAac,EAAQI,EAAM/N,GACzB,OAAiB,MAAV2N,EAAiBA,EAASG,EAAQH,EAAQI,EAAM/N,EACzD,C,kBChCA,IAmBIsN,EAnBkB,EAAQ,MAmBbU,CAAgB,eAEjCpB,EAAOC,QAAUS,C","sources":["webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/details/CopyButton.js","webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/details/LinksTable.js","webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/details/index.js","webpack://invenio-assets/./translations/invenio_rdm_records/messages/index.js","webpack://invenio-assets/./translations/invenio_rdm_records/i18next.js","webpack://invenio-assets/./node_modules/lodash/_createCaseFirst.js","webpack://invenio-assets/./node_modules/lodash/capitalize.js","webpack://invenio-assets/./node_modules/lodash/mapValues.js","webpack://invenio-assets/./node_modules/lodash/set.js","webpack://invenio-assets/./node_modules/lodash/upperFirst.js"],"sourcesContent":["// This file is part of InvenioRDM\n// Copyright (C) 2021 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Popup } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nclass SimpleCopyButton extends React.Component {\n  render() {\n    const { text, onCopy, hoverState } = this.props;\n\n    return (\n      <CopyToClipboard\n        text={text}\n        onCopy={() => {\n          onCopy(text);\n        }}\n      >\n        <Button\n          floated=\"right\"\n          basic\n          icon=\"copy\"\n          aria-label={i18next.t(\"Copy to clipboard\")}\n          onMouseEnter={hoverState}\n          onMouseLeave={hoverState}\n        />\n      </CopyToClipboard>\n    );\n  }\n}\n\nSimpleCopyButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  hoverState: PropTypes.func,\n};\n\nSimpleCopyButton.defaultProps = {\n  hoverState: null,\n};\n\nexport default class CopyButton extends Component {\n  constructor(props) {\n    super(props);\n    this.INITIAL_STATE = {\n      confirmationPopupIsOpen: false,\n      confirmationPopupMsg: \"\",\n      hoverPopupIsOpen: false,\n      stateReset: null,\n    };\n    this.state = this.INITIAL_STATE;\n  }\n\n  componentWillUnmount() {\n    const { stateReset } = this.state;\n    // Avoid state update after component is unmounted:\n    if (stateReset) clearTimeout(stateReset);\n  }\n\n  onCopy = () => {\n    this.setState(() => ({\n      confirmationPopupIsOpen: true,\n      confirmationPopupMsg: i18next.t(\"Copied!\"),\n    }));\n\n    this.delayClosePopup();\n  };\n\n  delayClosePopup = () => {\n    let stateReset = setTimeout(() => {\n      this.setState(this.INITIAL_STATE);\n    }, 1500);\n\n    this.setState({ stateReset });\n  };\n\n  hoverStateHandler = (event) => {\n    event.persist();\n    if (event.type === \"mouseenter\") this.setState({ hoverPopupIsOpen: true });\n    if (event.type === \"mouseleave\") this.setState({ hoverPopupIsOpen: false });\n  };\n\n  render() {\n    const { text, popUpPosition } = this.props;\n    const { confirmationPopupMsg, confirmationPopupIsOpen, hoverPopupIsOpen } =\n      this.state;\n\n    return (\n      text && (\n        <Popup\n          role=\"alert\"\n          open={hoverPopupIsOpen || confirmationPopupIsOpen}\n          content={confirmationPopupMsg || i18next.t(\"Copy to clipboard\")}\n          inverted={!!confirmationPopupMsg}\n          position={popUpPosition}\n          size=\"mini\"\n          trigger={\n            <SimpleCopyButton\n              text={text}\n              onCopy={this.onCopy}\n              hoverState={this.hoverStateHandler}\n            />\n          }\n        />\n      )\n    );\n  }\n}\n\nCopyButton.propTypes = {\n  popUpPosition: PropTypes.string,\n  text: PropTypes.string,\n};\n\nCopyButton.defaultProps = {\n  popUpPosition: \"right center\",\n  text: \"\",\n};\n","// This file is part of InvenioRdmRecords\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport CopyButton from \"./CopyButton\";\nimport { Table, Header, Dropdown, Grid } from \"semantic-ui-react\";\nimport { ErrorMessage } from \"@js/invenio_administration\";\nimport { withCancel } from \"react-invenio-forms\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { http } from \"react-invenio-forms\";\nimport { capitalize } from \"lodash\";\n\n/** Map of known formats and their name. */\nconst knownFormats = {\n  oai_dc: \"OAI Dublin Core\",\n  datacite: \"DataCite\",\n  oai_datacite: \"OAI DataCite\",\n  oai_marcxml: \"OAI MARCXML\",\n  oai_dcat: \"OAI DCAT-AP\",\n};\n\nclass LinksTable extends Component {\n  constructor(props) {\n    super(props);\n    const { links: passedLinks } = props.data;\n\n    const currentPrefix = this.getPrefixFromLink(passedLinks[\"oai-listrecords\"]);\n\n    this.state = {\n      links: passedLinks || [],\n      formats: [],\n      currentFormat: currentPrefix ?? \"oai_dc\",\n      error: undefined,\n    };\n  }\n\n  fetchFormats = async () => {\n    const cancellableFetchFormats = withCancel(http.get(\"/api/oaipmh/formats\"));\n\n    try {\n      const response = await cancellableFetchFormats.promise;\n\n      const formats = response.data?.hits?.hits;\n\n      if (!_isEmpty(formats)) {\n        const serialized = formats.map((formt) => ({\n          key: formt.id,\n          value: formt.id,\n          text: knownFormats[formt.id] ?? this.formatKeyToName(formt.id),\n        }));\n\n        this.setState({\n          formats: serialized,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n\n      this.setState({\n        error: {\n          header: i18next.t(\"Fetch error\"),\n          content: i18next.t(\"Error fetching OAI set formats.\"),\n          id: error.code,\n        },\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.fetchFormats();\n  }\n\n  /**\n   * Replaces the metadata prefix in the link.\n   * Used to update links when the metadata prefix is changed.\n   */\n  replaceLinkPrefix = (link, newPrefix) => {\n    const oldPrefix = this.getPrefixFromLink(link);\n    if (oldPrefix) {\n      return link.replace(oldPrefix, newPrefix);\n    }\n    return link;\n  };\n\n  /**\n   * Retrieves metadata prefix from a link.\n   *\n   * Returns null if parameter not found.\n   */\n  getPrefixFromLink = (link) => {\n    if (_isEmpty(link)) return null;\n    const prefixParam = \"metadataPrefix\";\n    const params = new URLSearchParams(link);\n    const prefix = params.get(prefixParam);\n\n    return prefix || null;\n  };\n\n  /**\n   * Transforms a key into a readable name.\n   * @example\n   *  // returns Oai Datacite\n   *  formateKeytoName('oai_datacite')\n   */\n  formatKeyToName = (formatKey) => {\n    const whiteSpaced = formatKey.replace(\"_\", \" \");\n    return capitalize(whiteSpaced);\n  };\n\n  /**\n   * Dropdown's on change handler.\n   * This method will update the following states if the new prefix is known:\n   * - 'links', each link with its prefix replaced by the new prefix.\n   */\n  prefixOnChange = (event, data) => {\n    const newFormat = data.value;\n    const { formats, links } = this.state;\n\n    if (formats.some((obj) => obj.key === newFormat)) {\n      const newLinks = {};\n      Object.keys(links).map((key) => {\n        const link = links[key];\n        newLinks[key] = this.replaceLinkPrefix(link, newFormat);\n      });\n      this.setState({ links: newLinks, currentFormat: newFormat });\n    }\n  };\n\n  resetErrorState = () => {\n    this.setState({ error: undefined });\n  };\n\n  render() {\n    const { links, formats, error, currentFormat } = this.state;\n    const listRecords = links[\"oai-listrecords\"];\n    const listIdentifiers = links[\"oai-listidentifiers\"];\n\n    return (\n      <>\n        <Grid>\n          <Grid.Row />\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header as=\"h2\">{i18next.t(\"Links\")}</Header>\n            </Grid.Column>\n            <Grid.Column width={13} textAlign=\"right\">\n              <span className=\"mr-10\">{i18next.t(\"Format\")}</span>\n              <Dropdown\n                options={formats}\n                floating\n                selection\n                defaultValue={currentFormat}\n                selectOnNavigation={false}\n                onChange={this.prefixOnChange}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Table unstackable>\n          <Table.Body>\n            <Table.Row key=\"list-records\">\n              <Table.Cell width={3}>\n                <b>{i18next.t(\"List records\")}</b>\n              </Table.Cell>\n              <Table.Cell width={10} textAlign=\"left\">\n                <a\n                  href={listRecords}\n                  target=\"_blank\"\n                  title={i18next.t(\"Opens in new tab\")}\n                  rel=\"noreferrer\"\n                >\n                  {listRecords}\n                </a>\n              </Table.Cell>\n              <Table.Cell width={3} textAlign=\"right\">\n                <CopyButton text={listRecords} />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row key=\"list-identifiers\">\n              <Table.Cell width={3}>\n                <b>{i18next.t(\"List identifiers\")}</b>\n              </Table.Cell>\n              <Table.Cell width={10} textAlign=\"left\">\n                <a\n                  href={listIdentifiers}\n                  target=\"_blank\"\n                  title={i18next.t(\"Opens in new tab\")}\n                  rel=\"noreferrer\"\n                >\n                  {listIdentifiers}\n                </a>\n              </Table.Cell>\n              <Table.Cell width={3} textAlign=\"right\">\n                <CopyButton text={listIdentifiers} />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        {!_isEmpty(error) && (\n          <ErrorMessage {...error} removeNotification={this.resetErrorState} />\n        )}\n      </>\n    );\n  }\n}\n\nLinksTable.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default LinksTable;\n","// This file is part of InvenioRdmRecords\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _get from \"lodash/get\";\nimport { OverridableContext, parametrize } from \"react-overridable\";\nimport LinksTable from \"./LinksTable\";\nimport { AdminDetailsView, Edit, Delete } from \"@js/invenio_administration\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nconst domContainer = document.getElementById(\"invenio-details-config\");\nconst title = domContainer.dataset.title;\nconst fields = JSON.parse(domContainer.dataset.fields);\nconst pidValue = JSON.parse(domContainer.dataset.pid);\nconst resourceName = JSON.parse(domContainer.dataset.resourceName);\nconst displayEdit = JSON.parse(domContainer.dataset.displayEdit);\nconst displayDelete = JSON.parse(domContainer.dataset.displayDelete);\nconst actions = JSON.parse(domContainer.dataset.actions);\nconst apiEndpoint = _get(domContainer.dataset, \"apiEndpoint\");\nconst idKeyPath = JSON.parse(_get(domContainer.dataset, \"pidPath\", \"pid\"));\nconst listUIEndpoint = domContainer.dataset.listEndpoint;\nconst resourceSchema = JSON.parse(domContainer.dataset.resourceSchema);\nconst uiSchema = JSON.parse(domContainer.dataset.uiConfig);\n\nconst createdBySystem = (data) => data?.system_created;\n\nconst overridenComponents = {\n  \"InvenioAdministration.EditAction\": parametrize(Edit, {\n    disable: createdBySystem,\n    disabledMessage: i18next.t(\n      \"This set is not editable as it was created by the system.\"\n    ),\n  }),\n  \"InvenioAdministration.DeleteAction\": parametrize(Delete, {\n    disable: createdBySystem,\n    disabledMessage: i18next.t(\n      \"This set is not deletable as it was created by the system.\"\n    ),\n  }),\n};\n\ndomContainer &&\n  ReactDOM.render(\n    <OverridableContext.Provider value={overridenComponents}>\n      <AdminDetailsView\n        title={title}\n        actions={actions}\n        apiEndpoint={apiEndpoint}\n        columns={fields}\n        displayEdit={displayEdit}\n        displayDelete={displayDelete}\n        pid={pidValue}\n        idKeyPath={idKeyPath}\n        resourceName={resourceName}\n        listUIEndpoint={listUIEndpoint}\n        resourceSchema={resourceSchema}\n        uiSchema={uiSchema}\n      >\n        <LinksTable />\n      </AdminDetailsView>\n    </OverridableContext.Provider>,\n    domContainer\n  );\n","import TRANSLATE_EN from \"./en/translations.json\";\nimport TRANSLATE_DE from \"./de/translations.json\";\nimport TRANSLATE_EL from \"./el/translations.json\";\n\nexport const translations = {\n  el: { translation: TRANSLATE_EL },\n  en: { translation: TRANSLATE_EN },\n  de: { translation: TRANSLATE_DE },\n};\n","// This file is part of InvenioRdmRecords\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport i18n from \"i18next\";\n\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { translations } from \"./messages\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst options = {\n  fallbackLng: \"en\", // fallback keys\n  returnEmptyString: false,\n  debug: process.env.NODE_ENV === \"development\",\n  resources: translations,\n  keySeparator: false,\n  nsSeparator: false,\n  // specify language detection order\n  detection: {\n    order: [\"htmlTag\"],\n    // cache user language off\n    caches: [],\n  },\n  react: {\n    // Set empty - to allow html tags convert to trans tags\n    // HTML TAG | Trans TAG\n    //  <span>  | <1>\n    transKeepBasicHtmlNodesFor: [],\n  },\n};\n\nconst i18next = i18n.createInstance();\ni18next.use(LanguageDetector).use(initReactI18next).init(options);\n\nexport { i18next };\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["SimpleCopyButton","_React$Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","text","onCopy","hoverState","React","CopyToClipboard","Button","floated","basic","icon","i18next","t","onMouseEnter","onMouseLeave","propTypes","PropTypes","isRequired","defaultProps","CopyButton","_Component","_this","_defineProperty","setState","confirmationPopupIsOpen","confirmationPopupMsg","delayClosePopup","stateReset","setTimeout","INITIAL_STATE","event","persist","type","hoverPopupIsOpen","state","clearTimeout","_this$props2","popUpPosition","_this$state","Popup","role","open","content","inverted","position","size","trigger","hoverStateHandler","Component","knownFormats","oai_dc","datacite","oai_datacite","oai_marcxml","oai_dcat","LinksTable","_asyncToGenerator","_regeneratorRuntime","_callee","cancellableFetchFormats","_response$data","response","formats","serialized","_context","prev","next","withCancel","http","get","promise","sent","data","hits","_isEmpty","map","formt","_knownFormats$formt$i","id","formatKeyToName","t0","console","error","header","code","stop","link","newPrefix","oldPrefix","getPrefixFromLink","replace","URLSearchParams","formatKey","whiteSpaced","capitalize","newFormat","links","some","obj","newLinks","Object","keys","replaceLinkPrefix","currentFormat","undefined","passedLinks","currentPrefix","fetchFormats","_this$state2","listRecords","listIdentifiers","Grid","Row","Column","width","Header","as","textAlign","className","Dropdown","options","floating","selection","defaultValue","selectOnNavigation","onChange","prefixOnChange","Table","unstackable","Body","Cell","href","target","title","rel","ErrorMessage","_extends","removeNotification","resetErrorState","domContainer","document","getElementById","dataset","fields","JSON","parse","pidValue","pid","resourceName","displayEdit","displayDelete","actions","apiEndpoint","_get","idKeyPath","listUIEndpoint","listEndpoint","resourceSchema","uiSchema","uiConfig","createdBySystem","system_created","overridenComponents","parametrize","Edit","disable","disabledMessage","Delete","ReactDOM","OverridableContext","Provider","AdminDetailsView","columns","translations","el","translation","en","TRANSLATE_EN","de","TRANSLATE_DE","fallbackLng","returnEmptyString","debug","process","resources","keySeparator","nsSeparator","detection","order","caches","react","transKeepBasicHtmlNodesFor","i18n","createInstance","use","LanguageDetector","initReactI18next","init","castSlice","hasUnicode","stringToArray","toString","module","exports","methodName","string","strSymbols","chr","charAt","trailing","join","slice","upperFirst","toLowerCase","baseAssignValue","baseForOwn","baseIteratee","object","iteratee","result","baseSet","path","createCaseFirst"],"sourceRoot":""}