{"version":3,"file":"js/6845.67943198e82111a851bf.js","mappings":"mhBAKA,IAAMA,EAAU,CACdC,UAAW,GACXC,iBAAkB,IAGPC,EAAW,SAAAC,GAAA,SAAAD,IAAA,OAAAE,EAAAA,EAAAA,GAAA,KAAAF,GAAAG,EAAA,KAAAH,EAAAI,UAAA,QAAAC,EAAAA,EAAAA,GAAAL,EAAAC,IAAAK,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,IAAA,SAAAC,MACtB,WACE,IAAAC,EAQIC,KAAKC,MAPPC,EAASH,EAATG,UACAd,EAASW,EAATX,UACAC,EAAgBU,EAAhBV,iBACAc,EAAIJ,EAAJI,KACAC,EAAcL,EAAdK,eACAC,EAAWN,EAAXM,YACAC,EAAKP,EAALO,MAEF,OACEC,EAAAA,cAACC,EAAAA,MAAK,CACJN,UAAWA,EACXI,MAAOA,EACPH,KAAMA,EACNC,eAAgBA,EAChBK,gBAAiBtB,EACjBkB,YAAaA,IAEZ,SAAAK,GAAiC,IAA9BC,EAAYD,EAAZC,aAAcC,EAASF,EAATE,UACVC,EAAkB,GAAHC,OAAMZ,EAAS,KAAAY,OAAIF,GACxC,OACEL,EAAAA,cAACQ,EAAAA,EAAI,KACHR,EAAAA,cAACQ,EAAAA,EAAKC,OAAM,CAACC,MAAM,MACjBV,EAAAA,cAACW,EAAAA,MAAK,CACJhB,UAAS,GAAAY,OAAKD,EAAe,cAC7BP,MAAOlB,EAAUkB,MACjBa,YAAa/B,EAAU+B,YACvBd,YAAajB,EAAUiB,eAG3BE,EAAAA,cAACQ,EAAAA,EAAKC,OAAM,CAACC,MAAM,MACjBV,EAAAA,cAACW,EAAAA,MAAK,CACJhB,UAAS,GAAAY,OAAKD,EAAe,qBAC7BP,MAAOjB,EAAiBiB,MACxBH,KAAM,SACNgB,YAAa9B,EAAiB8B,YAC9Bd,YAAahB,EAAiBgB,eAGlCE,EAAAA,cAACQ,EAAAA,EAAKC,OAAM,CAACC,MAAM,KACjBV,EAAAA,cAACa,EAAAA,EAAKC,MAAK,CAACC,MAAO,CAAEC,UAAW,UAAWC,MAAO,UAChDjB,EAAAA,cAACkB,EAAAA,EAAM,CACL,aAAY,eACZC,UAAU,YACVvB,MAAI,EACJwB,QAAS,kBAAMhB,EAAaiB,OAAOhB,EAAU,EAC7CiB,KAAK,UAELtB,EAAAA,cAACuB,EAAAA,EAAI,CAACC,KAAK,aAMvB,GAGN,IAAC,CA3DqB,CAASC,EAAAA,U","sources":["webpack://invenio-assets/./templates/custom_fields/Notes.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport { Input, Array } from \"react-invenio-forms\";\nimport { Grid, Form, Button, Icon } from \"semantic-ui-react\";\n\nconst newNote = {\n  note_text: \"\",\n  note_description: \"\",\n};\n\nexport class Experiments extends Component {\n  render() {\n    const {\n      fieldPath, // injected by the custom field loader via the `field` config property\n      note_text,\n      note_description,\n      icon,\n      addButtonLabel,\n      description,\n      label,\n    } = this.props;\n    return (\n      <Array\n        fieldPath={fieldPath}\n        label={label}\n        icon={icon}\n        addButtonLabel={addButtonLabel}\n        defaultNewValue={newNote}\n        description={description}\n      >\n        {({ arrayHelpers, indexPath }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n          return (\n            <Grid>\n              <Grid.Column width=\"12\">\n                <Input\n                  fieldPath={`${fieldPathPrefix}.note_text`}\n                  label={note_text.label}\n                  placeholder={note_text.placeholder}\n                  description={note_text.description}\n                ></Input>\n              </Grid.Column>\n              <Grid.Column width=\"12\">\n                <Input\n                  fieldPath={`${fieldPathPrefix}.note_description`}\n                  label={note_description.label}\n                  icon={\"pencil\"}\n                  placeholder={note_description.placeholder}\n                  description={note_description.description}\n                ></Input>\n              </Grid.Column>\n              <Grid.Column width=\"1\">\n                <Form.Field style={{ marginTop: \"1.75rem\", float: \"right\" }}>\n                  <Button\n                    aria-label={\"Remove field\"}\n                    className=\"close-btn\"\n                    icon\n                    onClick={() => arrayHelpers.remove(indexPath)}\n                    type=\"button\"\n                  >\n                    <Icon name=\"close\" />\n                  </Button>\n                </Form.Field>\n              </Grid.Column>\n            </Grid>\n          );\n        }}\n      </Array>\n    );\n  }\n}"],"names":["newNote","note_text","note_description","Experiments","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","fieldPath","icon","addButtonLabel","description","label","React","Array","defaultNewValue","_ref","arrayHelpers","indexPath","fieldPathPrefix","concat","Grid","Column","width","Input","placeholder","Form","Field","style","marginTop","float","Button","className","onClick","remove","type","Icon","name","Component"],"sourceRoot":""}