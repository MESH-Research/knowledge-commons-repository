{"version":3,"file":"js/invenio-app-rdm-community-records-search.12926984ca01d7f9518a.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/communityRecordsSearch/CommunityRecordsSearchAppLayout.js","webpack://invenio-assets/./js/invenio_app_rdm/communityRecordsSearch/CommunityRecordsSingleSearchBarElement.js","webpack://invenio-assets/./js/invenio_app_rdm/communityRecordsSearch/CommunityRecordsSearchBarElement.js","webpack://invenio-assets/./js/invenio_app_rdm/communityRecordsSearch/index.js"],"sourcesContent":["import {\n  SearchAppFacets,\n  SearchAppResultsPane,\n  SearchBar,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport { Count, Sort } from \"react-searchkit\";\nimport { Button, Container, Grid } from \"semantic-ui-react\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\n\nexport const CommunityRecordsSearchAppLayout = ({ config, appName }) => {\n  const [sidebarVisible, setSidebarVisible] = React.useState(false);\n\n  return (\n    <Container className=\"rel-pt-2\">\n      <Grid>\n        <Grid.Column only=\"mobile tablet\" mobile={2} tablet={1}>\n          <Button\n            basic\n            icon=\"sliders\"\n            onClick={() => setSidebarVisible(true)}\n            aria-label={i18next.t(\"Filter results\")}\n          />\n        </Grid.Column>\n\n        <Grid.Column mobile={14} tablet={14} computer={12} floated=\"right\">\n          <Grid>\n            <Grid.Column width={16}>\n              <SearchBar placeholder={i18next.t(\"Search records in community...\")} />\n            </Grid.Column>\n\n            <Grid.Column width={4} textAlign=\"left\">\n              <Count\n                label={(cmp) => (\n                  <Trans key=\"communityRecordsSearch\" count={cmp}>\n                    {cmp} results found\n                  </Trans>\n                )}\n              />\n            </Grid.Column>\n            <Grid.Column width={12} textAlign=\"right\">\n              <Sort\n                values={config.sortOptions}\n                label={(cmp) => (\n                  <>\n                    <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                    {cmp}\n                  </>\n                )}\n              />\n            </Grid.Column>\n          </Grid>\n        </Grid.Column>\n\n        <Grid.Row>\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n            // eslint-disable-next-line react/no-children-prop\n            children={<SearchAppFacets aggs={config.aggs} appName={appName} />}\n          />\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nCommunityRecordsSearchAppLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nCommunityRecordsSearchAppLayout.defaultProps = {\n  appName: \"\",\n};\n","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Input } from \"semantic-ui-react\";\n\nexport const CommunityRecordsSingleSearchBarElement = withState(\n  ({\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    updateQueryState,\n  }) => {\n    const placeholder = passedPlaceholder || i18next.t(\"Search\");\n    const onBtnSearchClick = () => {\n      updateQueryState({ queryString, filters: [] });\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        updateQueryState({ queryString, filters: [] });\n      }\n    };\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    );\n  }\n);\n","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { MultipleOptionsSearchBarRSK } from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CommunityRecordsSingleSearchBarElement } from \"./CommunityRecordsSingleSearchBarElement\";\n\nexport const CommunityRecordsSearchBarElement = ({ queryString, onInputChange }) => {\n  const headerSearchbar = document.getElementById(\"header-search-bar\");\n  const searchbarOptions = headerSearchbar.dataset.options\n    ? JSON.parse(headerSearchbar.dataset.options)\n    : [];\n\n  if (!_isEmpty(searchbarOptions)) {\n    return (\n      <MultipleOptionsSearchBarRSK\n        options={searchbarOptions}\n        onInputChange={onInputChange}\n        queryString={queryString}\n        placeholder={i18next.t(\"Search records...\")}\n      />\n    );\n  } else {\n    // backwards compatibility\n    return (\n      <CommunityRecordsSingleSearchBarElement\n        placeholder={i18next.t(\"Search records...\")}\n        queryString={queryString}\n        onInputChange={onInputChange}\n      />\n    );\n  }\n};\n\nCommunityRecordsSearchBarElement.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n","// This file is part of Invenio\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it under the\n// terms of the MIT License; see LICENSE file for more details.\n\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport {\n  RDMCountComponent,\n  RDMEmptyResults,\n  RDMErrorComponent,\n  RDMRecordResultsGridItem,\n  RDMToggleComponent,\n} from \"../search/components\";\nimport RecordsResultsListItem from \"../components/RecordsResultsListItem\";\nimport {\n  CommunityRecordsSearchAppLayout,\n  CommunityRecordsSearchBarElement,\n} from \"./components\";\nimport { parametrize, overrideStore } from \"react-overridable\";\nimport {\n  ContribSearchAppFacets,\n  ContribBucketAggregationElement,\n  ContribBucketAggregationValuesElement,\n} from \"@js/invenio_search_ui/components\";\n\nconst appName = \"InvenioCommunities.DetailsSearch\";\n\nconst ContribSearchAppFacetsWithConfig = parametrize(ContribSearchAppFacets, {\n  toggle: true,\n});\n\nconst CommunityRecordSearchAppLayoutWAppName = parametrize(\n  CommunityRecordsSearchAppLayout,\n  {\n    appName: appName,\n  }\n);\n\nconst defaultComponents = {\n  [`${appName}.BucketAggregation.element`]: ContribBucketAggregationElement,\n  [`${appName}.BucketAggregationValues.element`]: ContribBucketAggregationValuesElement,\n  [`${appName}.ResultsGrid.item`]: RDMRecordResultsGridItem,\n  [`${appName}.EmptyResults.element`]: RDMEmptyResults,\n  [`${appName}.ResultsList.item`]: RecordsResultsListItem,\n  [`${appName}.SearchApp.facets`]: ContribSearchAppFacetsWithConfig,\n  [`${appName}.SearchApp.layout`]: CommunityRecordSearchAppLayoutWAppName,\n  [`${appName}.SearchBar.element`]: CommunityRecordsSearchBarElement,\n  [`${appName}.Count.element`]: RDMCountComponent,\n  [`${appName}.Error.element`]: RDMErrorComponent,\n  [`${appName}.SearchFilters.Toggle.element`]: RDMToggleComponent,\n};\n\nconst overriddenComponents = overrideStore.getAll();\n\ncreateSearchAppInit(\n  { ...defaultComponents, ...overriddenComponents },\n  true,\n  \"invenio-search-config\",\n  true\n);\n"],"names":["CommunityRecordsSearchAppLayout","_ref","config","appName","_React$useState","React","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","Container","className","Grid","Column","only","mobile","tablet","Button","basic","icon","onClick","i18next","t","computer","floated","width","SearchBar","placeholder","textAlign","Count","label","cmp","Trans","key","count","Sort","values","sortOptions","Row","GridResponsiveSidebarColumn","open","onHideClick","children","SearchAppFacets","aggs","SearchAppResultsPane","layoutOptions","propTypes","PropTypes","isRequired","defaultProps","CommunityRecordsSingleSearchBarElement","withState","passedPlaceholder","queryString","onInputChange","updateQueryState","Input","action","filters","fluid","onChange","event","_ref2","value","onKeyPress","CommunityRecordsSearchBarElement","headerSearchbar","document","getElementById","searchbarOptions","dataset","options","JSON","parse","_isEmpty","MultipleOptionsSearchBarRSK","ContribSearchAppFacetsWithConfig","parametrize","ContribSearchAppFacets","toggle","CommunityRecordSearchAppLayoutWAppName","defaultComponents","_defaultComponents","_defineProperty","concat","ContribBucketAggregationElement","ContribBucketAggregationValuesElement","RDMRecordResultsGridItem","RDMEmptyResults","RecordsResultsListItem","RDMCountComponent","RDMErrorComponent","RDMToggleComponent","overriddenComponents","overrideStore","getAll","createSearchAppInit","_objectSpread"],"sourceRoot":""}