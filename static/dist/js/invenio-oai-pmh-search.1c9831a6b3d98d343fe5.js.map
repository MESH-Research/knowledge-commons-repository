{"version":3,"file":"js/invenio-oai-pmh-search.1c9831a6b3d98d343fe5.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/search/DeleteModal.js","webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/search/SearchResultItem.js","webpack://invenio-assets/./js/invenio_rdm_records/oaipmh/search/index.js"],"sourcesContent":["// This file is part of InvenioAdministration\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Icon, Message, Checkbox } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Modal } from \"semantic-ui-react\";\nimport { Trans } from \"react-i18next\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { ErrorMessage } from \"@js/invenio_administration\";\n\nexport class DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, error: undefined, checked: false };\n  }\n\n  render() {\n    const { loading, error, checked } = this.state;\n    const {\n      resetErrorState,\n      cleanError,\n      handleOnButtonClick,\n      modalOpen,\n      toggleModal,\n      title,\n    } = this.props;\n    return (\n      <Modal role=\"dialog\" open={modalOpen}>\n        <Modal.Header as=\"h2\">\n          <Trans defaults=\"Delete {{title}}\" values={{ title: title }} />\n        </Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Message\n              warning\n              icon=\"warning sign\"\n              header={\n                <Trans\n                  defaults=\"This will delete the set '{{title}}'.\"\n                  values={{ title: title }}\n                />\n              }\n              content={i18next.t(\n                \"Before deleting, make sure to alert all harvesters that this set will no longer be available.\"\n              )}\n            />\n            <Checkbox\n              className=\"ml-5\"\n              value\n              checked={checked}\n              onChange={(event, data) => {\n                this.setState({ checked: data.checked });\n              }}\n              label={i18next.t(\n                \"I have alerted all harvesters that this set will no longer be available.\"\n              )}\n            />\n            {!isEmpty(error) && (\n              <ErrorMessage {...error} removeNotification={resetErrorState} />\n            )}\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            icon=\"cancel\"\n            onClick={() => {\n              cleanError();\n              toggleModal(false);\n            }}\n            loading={loading}\n            content={i18next.t(\"Cancel\")}\n            floated=\"left\"\n            size=\"medium\"\n          />\n          <Button\n            disabled={!checked}\n            negative\n            onClick={handleOnButtonClick}\n            loading={loading}\n          >\n            <Icon name=\"trash alternate\" />\n            {i18next.t(\"Delete\")}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nDeleteModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  apiEndpoint: PropTypes.string.isRequired,\n  resource: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n  idKeyPath: PropTypes.string.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  modalOpen: PropTypes.bool.isRequired,\n  children: PropTypes.node,\n  handleOnButtonClick: PropTypes.func.isRequired,\n  cleanError: PropTypes.func.isRequired,\n  resetErrorState: PropTypes.func.isRequired,\n};\n\nDeleteModal.defaultProps = {\n  children: null,\n};\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { withState } from \"react-searchkit\";\nimport { Actions, Edit, Delete } from \"@js/invenio_administration\";\nimport { AdminUIRoutes } from \"@js/invenio_administration\";\nimport { OverridableContext, parametrize } from \"react-overridable\";\nimport { DeleteModal } from \"./DeleteModal\";\nimport Formatter from \"@js/invenio_administration/src/components/Formatter\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nconst overridenComponents = {\n  \"InvenioAdministration.DeleteModal.layout\": DeleteModal,\n};\n\nclass SearchResultItemComponent extends Component {\n  refreshAfterAction = () => {\n    const { updateQueryState, currentQueryState } = this.props;\n    updateQueryState(currentQueryState);\n  };\n\n  displayAsPre = (result, property) => {\n    const { resourceSchema } = this.props;\n    if (property === \"spec\") {\n      return (\n        <pre>\n          <Formatter\n            result={result}\n            resourceSchema={resourceSchema}\n            property={property}\n          />\n        </pre>\n      );\n    } else {\n      return (\n        <Formatter\n          result={result}\n          resourceSchema={resourceSchema}\n          property={property}\n        />\n      );\n    }\n  };\n\n  render() {\n    const {\n      title,\n      resourceName,\n      result,\n      columns,\n      displayEdit,\n      displayDelete,\n      actions,\n      apiEndpoint,\n      idKeyPath,\n      listUIEndpoint,\n    } = this.props;\n\n    const resourceHasActions = displayEdit || displayDelete || !isEmpty(actions);\n\n    overridenComponents[\"InvenioAdministration.EditAction\"] = parametrize(Edit, {\n      disable: () => result.system_created,\n      disabledMessage: i18next.t(\n        \"This set is not editable as it was created by the system.\"\n      ),\n    });\n\n    overridenComponents[\"InvenioAdministration.DeleteAction\"] = parametrize(Delete, {\n      disable: () => result.system_created,\n      disabledMessage: i18next.t(\n        \"This set is not deletable as it was created by the system.\"\n      ),\n    });\n\n    return (\n      <OverridableContext.Provider value={overridenComponents}>\n        <Table.Row>\n          {columns.map(([property, { text, order }], index) => {\n            return (\n              <Table.Cell\n                key={`${text}-${order}`}\n                data-label={text}\n                className=\"word-break-all\"\n              >\n                {index === 0 ? (\n                  <a\n                    href={AdminUIRoutes.detailsView(listUIEndpoint, result, idKeyPath)}\n                  >\n                    {this.displayAsPre(result, property)}\n                  </a>\n                ) : (\n                  this.displayAsPre(result, property)\n                )}\n              </Table.Cell>\n            );\n          })}\n          {resourceHasActions && (\n            <Table.Cell>\n              <Actions\n                title={title}\n                resourceName={resourceName}\n                apiEndpoint={apiEndpoint}\n                actions={actions}\n                editUrl={AdminUIRoutes.editView(listUIEndpoint, result, idKeyPath)}\n                displayEdit={displayEdit}\n                displayDelete={displayDelete}\n                resource={result}\n                idKeyPath={idKeyPath}\n                successCallback={this.refreshAfterAction}\n                listUIEndpoint={listUIEndpoint}\n              />\n            </Table.Cell>\n          )}\n        </Table.Row>\n      </OverridableContext.Provider>\n    );\n  }\n}\n\nSearchResultItemComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  resourceName: PropTypes.string.isRequired,\n  result: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  displayDelete: PropTypes.bool,\n  displayEdit: PropTypes.bool,\n  actions: PropTypes.object,\n  apiEndpoint: PropTypes.string,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  idKeyPath: PropTypes.string.isRequired,\n  listUIEndpoint: PropTypes.string.isRequired,\n  resourceSchema: PropTypes.object.isRequired,\n};\n\nSearchResultItemComponent.defaultProps = {\n  displayDelete: true,\n  displayEdit: true,\n  apiEndpoint: undefined,\n  actions: {},\n};\n\nexport const SearchResultItem = withState(SearchResultItemComponent);\n","// This file is part of InvenioRdmRecords\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { initDefaultSearchComponents } from \"@js/invenio_administration\";\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { SearchResultItem } from \"./SearchResultItem\";\nimport { parametrize } from \"react-overridable\";\nimport _get from \"lodash/get\";\nimport { NotificationController } from \"@js/invenio_administration\";\n\nconst domContainer = document.getElementById(\"invenio-search-config\");\n\nconst sortColumns = (columns) =>\n  Object.entries(columns).sort((a, b) => a[1].order - b[1].order);\nconst title = JSON.parse(domContainer.dataset.title);\nconst resourceName = JSON.parse(domContainer.dataset.resourceName);\nconst columns = JSON.parse(domContainer.dataset.fields);\nconst sortedColumns = sortColumns(columns);\nconst displayEdit = JSON.parse(domContainer.dataset.displayEdit);\nconst displayDelete = JSON.parse(domContainer.dataset.displayDelete);\nconst displayRead = JSON.parse(domContainer.dataset.displayRead);\nconst actions = JSON.parse(domContainer.dataset.actions);\nconst apiEndpoint = _get(domContainer.dataset, \"apiEndpoint\");\nconst idKeyPath = JSON.parse(_get(domContainer.dataset, \"pidPath\", \"pid\"));\nconst listUIEndpoint = domContainer.dataset.listEndpoint;\nconst resourceSchema = JSON.parse(domContainer.dataset.resourceSchema);\n\nconst defaultComponents = initDefaultSearchComponents(domContainer);\nconst SearchResultItemWithConfig = parametrize(SearchResultItem, {\n  title: title,\n  resourceName: resourceName,\n  columns: sortedColumns,\n  displayRead: displayRead,\n  displayEdit: displayEdit,\n  displayDelete: displayDelete,\n  actions: actions,\n  apiEndpoint: apiEndpoint,\n  idKeyPath: idKeyPath,\n  listUIEndpoint: listUIEndpoint,\n  resourceSchema: resourceSchema,\n});\n\nconst overridenComponents = {\n  ...defaultComponents,\n  \"ResultsList.item\": SearchResultItemWithConfig,\n};\n\ncreateSearchAppInit(\n  overridenComponents,\n  true,\n  \"invenio-search-config\",\n  false,\n  NotificationController\n);\n"],"names":["DeleteModal","_Component","props","_this","_classCallCheck","_callSuper","state","loading","error","undefined","checked","_inherits","_createClass","key","value","_this2","_this$state","this","_this$props","resetErrorState","cleanError","handleOnButtonClick","modalOpen","toggleModal","title","React","Modal","role","open","Header","as","Trans","defaults","values","Content","Description","Message","warning","icon","header","content","i18next","t","Checkbox","className","onChange","event","data","setState","label","isEmpty","ErrorMessage","_extends","removeNotification","Actions","Button","onClick","floated","size","disabled","negative","Icon","name","Component","propTypes","PropTypes","isRequired","apiEndpoint","resource","successCallback","idKeyPath","children","defaultProps","overridenComponents","SearchResultItemComponent","_len","arguments","length","args","Array","_key","concat","_defineProperty","updateQueryState","currentQueryState","result","property","resourceSchema","Formatter","_this$props2","resourceName","columns","displayEdit","displayDelete","actions","listUIEndpoint","resourceHasActions","parametrize","Edit","disable","system_created","disabledMessage","Delete","OverridableContext","Provider","Table","Row","map","_ref","index","_ref2","_slicedToArray","_ref2$","text","order","Cell","href","AdminUIRoutes","detailsView","displayAsPre","editUrl","editView","refreshAfterAction","SearchResultItem","withState","domContainer","document","getElementById","JSON","parse","dataset","sortedColumns","Object","entries","sort","a","b","sortColumns","fields","displayRead","_get","listEndpoint","defaultComponents","initDefaultSearchComponents","SearchResultItemWithConfig","_objectSpread","createSearchAppInit","NotificationController"],"sourceRoot":""}