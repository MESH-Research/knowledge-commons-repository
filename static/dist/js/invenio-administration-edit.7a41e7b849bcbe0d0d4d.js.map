{"version":3,"file":"js/invenio-administration-edit.7a41e7b849bcbe0d0d4d.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_administration/src/components/BoolFormatter.js","webpack://invenio-assets/./js/invenio_administration/src/components/DateFormatter.js","webpack://invenio-assets/./js/invenio_administration/src/components/Formatter.js","webpack://invenio-assets/./js/invenio_administration/src/components/Loader.js","webpack://invenio-assets/./js/invenio_administration/src/components/ErrorPage.js","webpack://invenio-assets/./js/invenio_administration/src/edit/EditPage.js","webpack://invenio-assets/./js/invenio_administration/src/edit/edit.js"],"sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport Overridable from \"react-overridable\";\n\nclass BoolFormatter extends React.Component {\n  render() {\n    const { value, icon, color, tooltip } = this.props;\n    if (!value) {\n      return null;\n    }\n    return <Icon title={tooltip} name={icon} color={color} />;\n  }\n}\n\nBoolFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  tooltip: PropTypes.string,\n};\n\nBoolFormatter.defaultProps = {\n  icon: \"check\",\n  color: \"green\",\n};\n\nexport default Overridable.component(\n  \"InvenioAdministration.BoolFormatter\",\n  BoolFormatter\n);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { DateTime } from \"luxon\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nclass DateFormatter extends React.Component {\n  render() {\n    const { value } = this.props;\n\n    if (!value) {\n      return null;\n    }\n\n    const date = DateTime.fromISO(value);\n    return (\n      <p data-testid=\"date-formatter\">{date.toLocaleString(DateTime.DATETIME_MED)}</p>\n    );\n  }\n}\n\nDateFormatter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default DateFormatter;\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _get from \"lodash/get\";\nimport DateFormatter from \"./DateFormatter\";\nimport BoolFormatter from \"./BoolFormatter\";\n\nconst elementTypeMap = {\n  datetime: DateFormatter,\n  date: DateFormatter,\n  bool: BoolFormatter,\n};\n\nclass Formatter extends React.Component {\n  render() {\n    const { resourceSchema, result, property, fieldSchema, ...uiProps } = this.props;\n\n    const resourceSchemaProperty = property.replace(/\\./g, \".properties.\");\n    const typePath = `${resourceSchemaProperty}.type`;\n\n    const type = _get(resourceSchema, typePath);\n    const Element = _get(elementTypeMap, type);\n    let value = _get(result, property, null);\n\n    if (fieldSchema?.escape) {\n      return <div dangerouslySetInnerHTML={{ __html: value }} />;\n    }\n\n    if (Element) {\n      return <Element value={value} {...uiProps} />;\n    } else {\n      return value;\n    }\n  }\n}\n\nFormatter.propTypes = {\n  resourceSchema: PropTypes.object.isRequired,\n  result: PropTypes.object.isRequired,\n  property: PropTypes.string.isRequired,\n  fieldSchema: PropTypes.object.isRequired,\n};\n\nexport default Formatter;\n","import React, { Component } from \"react\";\nimport Overridable from \"react-overridable\";\nimport { Loader as UILoader } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nclass Loader extends Component {\n  render() {\n    const { isLoading, children } = this.props;\n    return (\n      <Overridable id=\"Admin.Loader.layout\" {...this.props}>\n        {isLoading ? (\n          <UILoader active size=\"huge\" inline=\"centered\" />\n        ) : (\n          // eslint-disable-next-line react/jsx-no-useless-fragment\n          <>{children}</>\n        )}\n      </Overridable>\n    );\n  }\n}\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nLoader.defaultProps = {\n  isLoading: false,\n  children: null,\n};\n\nexport default Overridable.component(\"Loader\", Loader);\n","import React, { Component } from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\nimport Overridable from \"react-overridable\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_administration/i18next\";\n\nclass ErrorPage extends Component {\n  render() {\n    const { errorCode, errorMessage, error, children } = this.props;\n    return (\n      <Overridable id=\"Admin.ErrorPage.layout\" {...this.props}>\n        {error ? (\n          <Container textAlign=\"center\" className=\"error-handler\">\n            <Header as=\"h1\" icon>\n              <Icon name=\"warning\" circular />\n              {errorCode}\n              <Header.Subheader>{errorMessage}</Header.Subheader>\n            </Header>\n          </Container>\n        ) : (\n          // eslint-disable-next-line react/jsx-no-useless-fragment\n          <>{children}</>\n        )}\n      </Overridable>\n    );\n  }\n}\n\nErrorPage.propTypes = {\n  errorCode: PropTypes.string,\n  errorMessage: PropTypes.string,\n  error: PropTypes.bool,\n  children: PropTypes.element,\n};\n\nErrorPage.defaultProps = {\n  errorCode: i18next.t(\"Error\"),\n  errorMessage: i18next.t(\"Server was not able to process your request.\"),\n  error: false,\n  children: undefined,\n};\n\nexport default Overridable.component(\"ErrorPage\", ErrorPage);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InvenioAdministrationActionsApi } from \"../api/actions\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport { AdminForm } from \"../formik/AdminForm\";\nimport Loader from \"../components/Loader\";\nimport { ErrorPage } from \"../components\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nexport class EditPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, resource: undefined, error: undefined };\n  }\n\n  componentDidMount() {\n    this.getResource();\n  }\n\n  getResource = async () => {\n    const { apiEndpoint, pid } = this.props;\n    try {\n      const response = await InvenioAdministrationActionsApi.getResource(\n        apiEndpoint,\n        pid\n      );\n      this.setState({\n        loading: false,\n        resource: response.data,\n        error: undefined,\n      });\n    } catch (e) {\n      console.error(e);\n      this.setState({ error: e });\n    }\n  };\n\n  handleOnEditSuccess = () => {\n    const { listUIEndpoint } = this.props;\n    window.location.replace(listUIEndpoint);\n  };\n\n  render() {\n    const { resourceSchema, apiEndpoint, pid, formFields } = this.props;\n    const { loading, resource, error } = this.state;\n\n    return (\n      <Loader isLoading={loading}>\n        <ErrorPage\n          error={!_isEmpty(error)}\n          errorCode={error?.response.status}\n          errorMessage={error?.response.data}\n        >\n          <Grid>\n            <Grid.Column width={12}>\n              <AdminForm\n                resourceSchema={resourceSchema}\n                resource={resource}\n                apiEndpoint={apiEndpoint}\n                formFields={formFields}\n                pid={pid}\n                successCallback={this.handleOnEditSuccess}\n              />\n            </Grid.Column>\n          </Grid>\n        </ErrorPage>\n      </Loader>\n    );\n  }\n}\n\nEditPage.propTypes = {\n  resourceSchema: PropTypes.object.isRequired,\n  apiEndpoint: PropTypes.string.isRequired,\n  pid: PropTypes.string.isRequired,\n  formFields: PropTypes.object,\n  listUIEndpoint: PropTypes.string.isRequired,\n};\n\nEditPage.defaultProps = {\n  formFields: undefined,\n};\n","// This file is part of InvenioAdministration\n// Copyright (C) 2022 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { EditPage } from \"./EditPage\";\nimport _get from \"lodash/get\";\nimport { NotificationController } from \"../ui_messages/context\";\n\nconst domContainer = document.getElementById(\"invenio-administration-edit-root\");\nconst resourceSchema = JSON.parse(domContainer.dataset.resourceSchema);\nconst apiEndpoint = _get(domContainer.dataset, \"apiEndpoint\");\nconst pid = JSON.parse(domContainer.dataset.pid);\nconst formFields = JSON.parse(domContainer.dataset.formFields);\nconst listUIEndpoint = domContainer.dataset.listEndpoint;\n\nReactDOM.render(\n  <NotificationController>\n    <EditPage\n      resourceSchema={resourceSchema}\n      apiEndpoint={apiEndpoint}\n      formFields={formFields}\n      pid={pid}\n      listUIEndpoint={listUIEndpoint}\n    />\n  </NotificationController>,\n  domContainer\n);\n"],"names":["BoolFormatter","_React$Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","icon","color","tooltip","React","Icon","title","name","propTypes","PropTypes","isRequired","defaultProps","Overridable","component","DateFormatter","date","DateTime","fromISO","toLocaleString","DATETIME_MED","elementTypeMap","datetime","bool","Formatter","resourceSchema","result","property","fieldSchema","uiProps","_objectWithoutProperties","_excluded","resourceSchemaProperty","replace","typePath","concat","type","_get","Element","escape","dangerouslySetInnerHTML","__html","_extends","Loader","_Component","isLoading","children","id","UILoader","active","size","inline","Component","ErrorPage","errorCode","errorMessage","error","Container","textAlign","className","Header","as","circular","Subheader","i18next","t","undefined","EditPage","_this","_defineProperty","_asyncToGenerator","_regeneratorRuntime","_callee","apiEndpoint","pid","response","_context","prev","next","InvenioAdministrationActionsApi","getResource","sent","setState","loading","resource","data","t0","console","stop","listUIEndpoint","window","location","state","_this$props2","formFields","_this$state","_isEmpty","status","Grid","Column","width","AdminForm","successCallback","handleOnEditSuccess","domContainer","document","getElementById","JSON","parse","dataset","listEndpoint","ReactDOM","NotificationController"],"sourceRoot":""}