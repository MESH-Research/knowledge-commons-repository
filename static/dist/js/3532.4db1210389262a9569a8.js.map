{"version":3,"file":"js/3532.4db1210389262a9569a8.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_communities/community/communitiesCarousel/CarouselItem.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesCarousel/CommunitiesCarousel.js","webpack://invenio-assets/./js/invenio_communities/community/featuredCommunities/FeaturedCommunities.js","webpack://invenio-assets/./js/invenio_communities/community/featuredCommunities/FeaturedCommunity.js","webpack://invenio-assets/./js/invenio_communities/community/labels/CommunityTypeLabel.js","webpack://invenio-assets/./js/invenio_communities/community/labels/RestrictedLabel.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityItemComputer.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityItemMobile.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityItem.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityCompactItemComputer.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityCompactItemMobile.js","webpack://invenio-assets/./js/invenio_communities/community/communitiesItems/CommunityCompactItem.js","webpack://invenio-assets/./js/invenio_communities/community/searchComponents/CommunitiesResults.js","webpack://invenio-assets/./js/invenio_communities/community/searchComponents/CommunitiesSearchLayout.js","webpack://invenio-assets/./js/invenio_communities/community/searchComponents/ResultsGridItemTemplate.js","webpack://invenio-assets/./js/invenio_communities/community/searchComponents/CommunitiesSearchBarElement.js","webpack://invenio-assets/./js/invenio_communities/community/searchComponents/CommunitiesEmptySearchResults.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/ProtectionButtons.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/MetadataAccess.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/FilesAccess.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/EmbargoCheckboxField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/EmbargoDateField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/EmbargoAccess.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/components/AccessMessage.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AccessField/AccessRightField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/DescriptionsField/components/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/LanguagesField/LanguagesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/utils.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/DescriptionsField/components/AdditionalDescriptionsField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/DescriptionsField/DescriptionsField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/AffiliationsField/AffiliationsField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/CreatibutorsField/CreatibutorsIdentifiers.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/CreatibutorsField/type.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/CreatibutorsField/CreatibutorsModal.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/CreatibutorsField/CreatibutorsFieldItem.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/CreatibutorsField/CreatibutorsField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/DatesField/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/DatesField/DatesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/types/index.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/actions/deposit.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/reducers/files.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/NewVersionButton/NewVersionButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/FileUploader/FileUploaderArea.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/FileUploader/FileUploaderToolbar.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/FileUploader/FileUploader.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/FileUploader/index.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/actions/files.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/Identifiers/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/Identifiers/IdentifiersField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositFormSubmitContext.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/Identifiers/PIDField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseFilter.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseResults.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseSearchBar.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseModal.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseFieldItem.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/License/LicenseField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/PublicationDateField/PublicationDateField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/PublisherField/PublisherField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/ReferencesField/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/ReferencesField/ReferencesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/RelatedWorksField/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/ResourceTypeField/ResourceTypeField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/RelatedWorksField/RelatedWorksField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/SubjectsField/SubjectsField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/TitlesField/initialValues.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/TitlesField/AdditionalTitlesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/TitlesField/TitlesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/VersionField/VersionField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/fields/ComingSoonField/ComingSoonField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/DeleteButton/DeleteButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/PreviewButton/PreviewButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/CommunitySelectionModal/CommunityContext.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/CommunitySelectionModal/CommunityListItem.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/CommunitySelectionModal/CommunitySelectionSearch.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/CommunitySelectionModal/CommunitySelectionModal.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/PublishButton/PublishButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/reducers/deposit.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/PublishButton/SubmitReviewModal.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/PublishButton/SubmitReviewButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/PublishButton/SubmitReviewOrPublishButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/controls/SaveButton/SaveButton.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/errors/FormFeedback.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/errors/DepositErrorHandler.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositApiClient.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositBootstrap.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositDraftsService.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositFilesService.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositRecordSerializer.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositService.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/state/reducers/index.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/store.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/UploadProgressNotifier/UploadProgressNotifier.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/api/DepositFormApp.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/DepositStatus/DepositStatusBox.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/components/CommunityHeader/CommunityHeader.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/dom.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/customFields/CustomField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/customFields/Imprint.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/customFields/Journal.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/customFields/Meeting.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/customFields/Thesis.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/Field.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/DatesField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/SchemaField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/VocabularyField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/FundingField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/RightsVocabularyField.js","webpack://invenio-assets/./js/invenio_rdm_records/src/deposit/serializers/AllowAdditionsVocabularyField.js","webpack://invenio-assets/./translations/invenio_rdm_records/messages/index.js","webpack://invenio-assets/./translations/invenio_rdm_records/i18next.js"],"sourcesContent":["/*\n * This file is part of Invenio.\n * Copyright (C) 2016-2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport _truncate from \"lodash/truncate\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\nimport { Button, Grid, Header, Item } from \"semantic-ui-react\";\n\nclass CarouselItem extends Component {\n  render() {\n    const { community, defaultLogo, className, showUploadBtn } = this.props;\n\n    return (\n      <Overridable\n        id=\"InvenioCommunities.CarouselItem.layout\"\n        community={community}\n        defaultLogo={defaultLogo}\n        className={className}\n      >\n        <Item\n          className={`carousel flex align-items-center ${className}`}\n          key={community.id}\n        >\n          <Image size=\"small\" src={community.links.logo} fallbackSrc={defaultLogo} />\n          <Item.Content>\n            <Item.Header as={Grid} stackable className=\"rel-pb-1\">\n              <Grid.Column computer=\"10\" tablet=\"16\" className=\"pl-0 pb-0\">\n                <Header as=\"a\" size=\"medium\" href={community.links.self_html}>\n                  {community.metadata.title}\n                </Header>\n              </Grid.Column>\n              <Grid.Column computer=\"6\" tablet=\"16\" className=\"buttons pl-0 pb-0\">\n                <Button\n                  size=\"mini\"\n                  href={community.links.self_html}\n                  content={i18next.t(\"Browse\")}\n                />\n                {showUploadBtn && (\n                  <Button\n                    size=\"mini\"\n                    icon=\"upload\"\n                    labelPosition=\"left\"\n                    positive\n                    href={`/uploads/new?community=${community.slug}`}\n                    content={i18next.t(\"New upload\")}\n                  />\n                )}\n              </Grid.Column>\n            </Item.Header>\n            <Item.Description\n              content={_truncate(community.metadata.description, { length: 300 })}\n            />\n          </Item.Content>\n        </Item>\n      </Overridable>\n    );\n  }\n}\n\nCarouselItem.propTypes = {\n  community: PropTypes.object.isRequired,\n  defaultLogo: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  showUploadBtn: PropTypes.bool,\n};\n\nCarouselItem.defaultProps = {\n  className: \"\",\n  showUploadBtn: true,\n};\n\nexport default Overridable.component(\"InvenioCommunities.CarouselItem\", CarouselItem);\n","/*\n * This file is part of Invenio.\n * Copyright (C) 2016-2022 CERN.\n *\n * Invenio is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { http, withCancel } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Item,\n  Placeholder,\n  Transition,\n} from \"semantic-ui-react\";\nimport CarouselItem from \"./CarouselItem\";\n\nclass CommunitiesCarousel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: { hits: [] },\n      activeIndex: 0,\n      animationDirection: \"left\",\n      carouselTimer: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancellableFetch && this.cancellableFetch.cancel();\n    this.stopCarousel();\n  }\n\n  getDataIndex = (index) => {\n    const { itemsPerPage } = this.props;\n    const {\n      data: { hits },\n    } = this.state;\n    const i = index * parseInt(itemsPerPage);\n    if (i > hits.length - 1) return 0;\n    if (i < 0) return hits.length - 1;\n    return i;\n  };\n\n  runCarousel = async (newIndex) => {\n    const { activeIndex } = this.state;\n    let animationDirection = newIndex < activeIndex ? \"right\" : \"left\";\n    await this.setState({ animationDirection });\n    this.setState({ activeIndex: this.getDataIndex(newIndex) });\n  };\n\n  setCarouselTimer = () => {\n    const {\n      data: { hits: length },\n      activeIndex,\n    } = this.state;\n    const { intervalDelay } = this.props;\n    this.setState({\n      carouselTimer: setInterval(() => {\n        length && this.runCarousel(activeIndex + 1);\n      }, intervalDelay),\n    });\n  };\n\n  // Pause carousel when user focuses elements in the container\n  stopCarousel = () => {\n    const { carouselTimer } = this.state;\n    clearInterval(carouselTimer);\n  };\n  startCarousel = () => {\n    this.setCarouselTimer();\n  };\n\n  fetchData = async () => {\n    const { fetchUrl } = this.props;\n    this.cancellableFetch = withCancel(http.get(fetchUrl));\n    try {\n      const response = await this.cancellableFetch.promise;\n      this.setState({ data: response.data.hits });\n      this.setCarouselTimer();\n      this.setState({ isLoading: false });\n    } catch (error) {\n      console.error(error);\n      this.setState({ isLoading: false });\n    }\n  };\n\n  renderPlaceholder = () => {\n    const { title } = this.props;\n    return (\n      <Container fluid className=\"rel-pt-2 rel-pb-2 ml-0-mobile mr-0-mobile\">\n        <Container>\n          <Header as=\"h2\" className=\"rel-mb-1\">\n            {title}\n          </Header>\n        </Container>\n        <Grid container>\n          <Grid.Column width=\"2\" />\n          <Grid.Column width=\"12\">\n            <Item.Group>\n              <Item>\n                <Item.Image>\n                  <Placeholder>\n                    <Placeholder.Image square />\n                  </Placeholder>\n                </Item.Image>\n\n                <Item.Content>\n                  <Item.Header className=\"mt-5 rel-mb-2\">\n                    <Placeholder>\n                      <Placeholder.Header>\n                        <Placeholder.Line />\n                      </Placeholder.Header>\n                    </Placeholder>\n                  </Item.Header>\n\n                  <Item.Description>\n                    <Placeholder>\n                      <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                      </Placeholder.Paragraph>\n                    </Placeholder>\n                  </Item.Description>\n                </Item.Content>\n              </Item>\n            </Item.Group>\n          </Grid.Column>\n          <Grid.Column width=\"2\" />\n        </Grid>\n      </Container>\n    );\n  };\n\n  carouselSlides = () => {\n    const { data, activeIndex } = this.state;\n    const { defaultLogo, itemsPerPage, showUploadBtn } = this.props;\n\n    const sliceEnd = parseInt(activeIndex) + parseInt(itemsPerPage);\n\n    const carouselSlides = data.hits\n      ?.slice(activeIndex, sliceEnd)\n      .map((community) => (\n        <CarouselItem\n          community={community}\n          defaultLogo={defaultLogo}\n          key={community.id}\n          showUploadBtn={showUploadBtn}\n        />\n      ));\n\n    return carouselSlides;\n  };\n\n  render() {\n    const { data, animationDirection, activeIndex, isLoading } = this.state;\n    const { title, animationSpeed, itemsPerPage } = this.props;\n\n    return (\n      <Overridable\n        id=\"InvenioCommunities.CommunitiesCarousel.layout\"\n        data={data}\n        animationDirection={animationDirection}\n        activeIndex={activeIndex}\n        title={title}\n        animationSpeed={animationSpeed}\n        carouselSlides={this.carouselSlides()}\n        stopCarousel={this.stopCarousel}\n        startCarousel={this.startCarousel}\n        runCarousel={this.runCarousel}\n        itemsPerPage={itemsPerPage}\n      >\n        <>\n          {isLoading && this.renderPlaceholder()}\n\n          {!isLoading && !_isEmpty(data.hits) && (\n            <Container\n              fluid\n              className=\"carousel rel-pt-2 rel-pb-2 ml-0-mobile mr-0-mobile\"\n            >\n              <Container className=\"rel-mb-1\">\n                <Header as=\"h2\">{title}</Header>\n              </Container>\n\n              <Grid container onFocus={this.stopCarousel} onBlur={this.startCarousel}>\n                <Grid.Column\n                  width=\"2\"\n                  className=\"pr-0\"\n                  verticalAlign=\"middle\"\n                  textAlign=\"left\"\n                >\n                  <Icon\n                    className=\"carousel-arrow\"\n                    inverted\n                    role=\"button\"\n                    name=\"angle left\"\n                    size=\"huge\"\n                    aria-label={i18next.t(\"Previous slide\")}\n                    onClick={() => this.runCarousel(activeIndex - 1)}\n                    onKeyDown={(event) =>\n                      event.key === \"Enter\" && this.runCarousel(activeIndex - 1)\n                    }\n                    tabIndex=\"0\"\n                  />\n                </Grid.Column>\n                <Grid.Column width=\"12\">\n                  <Transition.Group\n                    as={Item.Group}\n                    className=\"flex align-items-center justify-center\"\n                    duration={animationSpeed}\n                    animation={`carousel-slide ${animationDirection}`}\n                    directional\n                  >\n                    {this.carouselSlides()}\n                  </Transition.Group>\n                </Grid.Column>\n\n                <Grid.Column\n                  width=\"2\"\n                  className=\"pl-0\"\n                  verticalAlign=\"middle\"\n                  textAlign=\"right\"\n                >\n                  <Icon\n                    className=\"carousel-arrow\"\n                    inverted\n                    role=\"button\"\n                    name=\"angle right\"\n                    size=\"huge\"\n                    aria-label={i18next.t(\"Next slide\")}\n                    onClick={() => this.runCarousel(activeIndex + 1)}\n                    onKeyDown={(event) =>\n                      event.key === \"Enter\" && this.runCarousel(activeIndex + 1)\n                    }\n                    tabIndex=\"0\"\n                  />\n                </Grid.Column>\n              </Grid>\n            </Container>\n          )}\n        </>\n      </Overridable>\n    );\n  }\n}\n\nCommunitiesCarousel.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired,\n  intervalDelay: PropTypes.number.isRequired,\n  animationSpeed: PropTypes.number.isRequired,\n  defaultLogo: PropTypes.string.isRequired,\n  itemsPerPage: PropTypes.string.isRequired,\n  showUploadBtn: PropTypes.bool,\n};\n\nCommunitiesCarousel.defaultProps = {\n  showUploadBtn: true,\n};\n\nexport default Overridable.component(\n  \"InvenioCommunities.CommunitiesCarousel\",\n  CommunitiesCarousel\n);\n","import React, { Component } from \"react\";\nimport { withCancel } from \"react-invenio-forms\";\nimport { http } from \"react-invenio-forms\";\nimport { Grid, Message, Container, Loader } from \"semantic-ui-react\";\nimport FeaturedCommunity from \"./FeaturedCommunity\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\n\nexport default class FeaturedCommunities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: undefined,\n      error: undefined,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancellableFetch && this.cancellableFetch.cancel();\n  }\n\n  fetchData = async () => {\n    this.setState({ isLoading: true });\n\n    this.cancellableFetch = withCancel(http.get(\"/api/communities/featured\"));\n\n    try {\n      const response = await this.cancellableFetch.promise;\n      this.setState({ data: response.data.hits, isLoading: false });\n    } catch (error) {\n      let errorMessage = error.message;\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      }\n      this.setState({\n        error: errorMessage,\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    const { data, error, isLoading } = this.state;\n    const {\n      columnNumber,\n      widescreenColumnWidth,\n      mobileColumnWidth,\n      tabletColumnWidth,\n      computerColumnWidth,\n    } = this.props;\n    return isLoading ? (\n      <Loader active inline=\"centered\" />\n    ) : error ? (\n      <Container>\n        <Message negative>\n          <Message.Header>{i18next.t(\"An error occurred.\")}</Message.Header>\n          <p>{error}</p>\n        </Message>\n      </Container>\n    ) : data?.hits ? (\n      <Grid className=\"featured-communities\" columns={columnNumber} centered>\n        {data.hits.map((hit) => (\n          <FeaturedCommunity\n            key={hit.id}\n            community={hit}\n            mobileColumnWidth={mobileColumnWidth}\n            tabletColumnWidth={tabletColumnWidth}\n            computerColumnWidth={computerColumnWidth}\n            widescreenColumnWidth={widescreenColumnWidth}\n          />\n        ))}\n      </Grid>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nFeaturedCommunities.propTypes = {\n  columnNumber: PropTypes.string.isRequired,\n  mobileColumnWidth: PropTypes.string.isRequired,\n  tabletColumnWidth: PropTypes.string.isRequired,\n  computerColumnWidth: PropTypes.string.isRequired,\n  widescreenColumnWidth: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { Grid, Segment, Header } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { Image } from \"react-invenio-forms\";\n\nexport default class FeaturedCommunity extends Component {\n  render() {\n    const {\n      computerColumnWidth,\n      mobileColumnWidth,\n      tabletColumnWidth,\n      widescreenColumnWidth,\n      community,\n    } = this.props;\n    return (\n      <Grid.Column\n        mobile={mobileColumnWidth}\n        tablet={tabletColumnWidth}\n        widescreen={widescreenColumnWidth}\n        computer={computerColumnWidth}\n        textAlign=\"center\"\n      >\n        <Segment compact className=\"m-auto\">\n          <a href={community.links.self_html}>\n            <div className=\"featured-community\">\n              <Image className=\"m-auto\" src={community.links.logo} />\n              <Header as=\"h3\">{community.metadata.title}</Header>\n            </div>\n          </a>\n        </Segment>\n      </Grid.Column>\n    );\n  }\n}\n\nFeaturedCommunity.propTypes = {\n  computerColumnWidth: PropTypes.number.isRequired,\n  mobileColumnWidth: PropTypes.number.isRequired,\n  tabletColumnWidth: PropTypes.number.isRequired,\n  widescreenColumnWidth: PropTypes.number.isRequired,\n  community: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label, Icon } from \"semantic-ui-react\";\n\nexport const CommunityTypeLabel = ({ type, transparent }) => {\n  if (type === undefined) return null;\n  return (\n    (transparent && (\n      <div className=\"rel-mr-1\">\n        <Icon name=\"tag\" />\n        {type}\n      </div>\n    )) || (\n      <Label size=\"small\" horizontal className=\"primary\">\n        <Icon name=\"tag\" />\n        {type}\n      </Label>\n    )\n  );\n};\n\nCommunityTypeLabel.propTypes = {\n  type: PropTypes.string,\n  transparent: PropTypes.bool,\n};\n\nCommunityTypeLabel.defaultProps = {\n  type: undefined,\n  transparent: false,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2023 CERN.\n//\n// InvenioRDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Label, Icon } from \"semantic-ui-react\";\n\nexport const RestrictedLabel = ({ access }) =>\n  access === \"restricted\" && (\n    <Label size=\"small\" horizontal className=\"negative\">\n      <Icon name=\"ban\" />\n      {i18next.t(\"Restricted\")}\n    </Label>\n  );\n\nRestrictedLabel.propTypes = {\n  access: PropTypes.string.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { CommunityTypeLabel } from \"../labels\";\nimport { RestrictedLabel } from \"../labels\";\nimport React from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport { Button, Grid, Icon } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport const CommunityItemComputer = ({ result }) => {\n  const communityType = result.ui?.type?.title_l10n;\n  const canUpdate = result.ui?.permissions?.can_update;\n\n  return (\n    <Grid className=\"computer tablet only item community-item\">\n      <Grid.Column\n        tablet={(canUpdate && 13) || 16}\n        computer={13}\n        verticalAlign=\"middle\"\n        className=\"pl-0\"\n      >\n        <div className=\"flex align-items-center\">\n          <Image\n            wrapped\n            src={result.links.logo}\n            size=\"tiny\"\n            className=\"community-image rel-mr-2\"\n            alt=\"\"\n          />\n          <div>\n            {result.access.visibility === \"restricted\" && (\n              <div className=\"rel-mb-1\">\n                <RestrictedLabel access={result.access.visibility} />\n              </div>\n            )}\n            <a className=\"ui medium header mb-0\" href={result.links.self_html}>\n              {result.metadata.title}\n            </a>\n            {result.metadata.description && (\n              <p className=\"truncate-lines-1 text size small text-muted mt-5\">\n                {result.metadata.description}\n              </p>\n            )}\n\n            {(communityType ||\n              result.metadata.website ||\n              result.metadata.organizations) && (\n              <div className=\"flex align-items-center wrap mt-5 text size small text-muted\">\n                {communityType && (\n                  <CommunityTypeLabel transparent type={communityType} />\n                )}\n\n                {result.metadata.website && (\n                  <div className=\"rel-mr-1\">\n                    <Icon name=\"linkify\" />\n                    <a\n                      href={result.metadata.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-muted\"\n                    >\n                      {result.metadata.website}\n                    </a>\n                  </div>\n                )}\n\n                {result.metadata.organizations && (\n                  <div>\n                    <Icon name=\"building outline\" />\n                    {result.metadata.organizations.map((org, index) => {\n                      const separator = (index > 0 && \", \") || \"\";\n\n                      return (\n                        <span className=\"text-muted\" key={org.name}>\n                          {separator}\n                          {org.name}\n                          {org.id && (\n                            <a\n                              href={`https://ror.org/${org.id}`}\n                              aria-label={`${org.name}'s ROR ${i18next.t(\"profile\")}`}\n                              title={`${org.name}'s ROR ${i18next.t(\"profile\")}`}\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                            >\n                              <img\n                                className=\"inline-id-icon ml-5\"\n                                src=\"/static/images/ror-icon.svg\"\n                                alt=\"\"\n                              />\n                            </a>\n                          )}\n                        </span>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </Grid.Column>\n\n      {canUpdate && (\n        <Grid.Column width={3} textAlign=\"right\" className=\"pr-0\">\n          <div>\n            <Button\n              compact\n              size=\"small\"\n              href={result.links.settings_html}\n              className=\"mt-0 mr-0\"\n              labelPosition=\"left\"\n              icon=\"edit\"\n              content={i18next.t(\"Edit\")}\n            />\n          </div>\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n};\n\nCommunityItemComputer.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { CommunityTypeLabel } from \"../labels\";\nimport { RestrictedLabel } from \"../labels\";\nimport React from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport { Button, Grid, Icon } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport const CommunityItemMobile = ({ result, index }) => {\n  const communityType = result.ui?.type?.title_l10n;\n  const canUpdate = result.ui.permissions.can_update;\n  return (\n    <Grid className=\"mobile only item community-item\">\n      {result.access.visibility === \"restricted\" && (\n        <Grid.Row>\n          <Grid.Column width={16} verticalAlign=\"middle\" className=\"pl-0 pr-0\">\n            <RestrictedLabel access={result.access.visibility} />\n          </Grid.Column>\n        </Grid.Row>\n      )}\n\n      <Grid.Row>\n        <Grid.Column\n          width={(canUpdate && 11) || 16}\n          verticalAlign=\"middle\"\n          className=\"pl-0 pr-0\"\n        >\n          <div className=\"flex align-items-center\">\n            <Image\n              wrapped\n              src={result.links.logo}\n              size=\"mini\"\n              className=\"community-image rel-mr-1\"\n              alt=\"\"\n            />\n            <div>\n              <a\n                className=\"truncate-lines-2 ui medium header m-0\"\n                href={result.links.self_html}\n              >\n                {result.metadata.title}\n              </a>\n            </div>\n          </div>\n        </Grid.Column>\n\n        {canUpdate && (\n          <Grid.Column\n            width={5}\n            verticalAlign=\"middle\"\n            textAlign=\"right\"\n            className=\"pr-0\"\n          >\n            <Button\n              compact\n              size=\"tiny\"\n              href={result.links.settings_html}\n              className=\"mt-0 mr-0\"\n              labelPosition=\"left\"\n              icon=\"edit\"\n              content={i18next.t(\"Edit\")}\n            />\n          </Grid.Column>\n        )}\n      </Grid.Row>\n\n      {result.metadata.description && (\n        <Grid.Row className=\"pt-0\">\n          <Grid.Column width={16} className=\"pl-0 pr-0\">\n            <p className=\"truncate-lines-1 text size small text-muted mt-5\">\n              {result.metadata.description}\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      )}\n\n      {(communityType || result.metadata.website || result.metadata.organizations) && (\n        <Grid.Row className=\"pt-0\">\n          <Grid.Column width={16} verticalAlign=\"bottom\" className=\"pl-0 pr-0\">\n            <div className=\"text size small text-muted\">\n              {communityType && (\n                <div className=\"mb-5\">\n                  <CommunityTypeLabel transparent type={communityType} />\n                </div>\n              )}\n\n              {result.metadata.website && (\n                <div className=\"rel-mr-1 mb-5\">\n                  <Icon name=\"linkify\" />\n                  <a\n                    href={result.metadata.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-muted\"\n                  >\n                    {result.metadata.website}\n                  </a>\n                </div>\n              )}\n\n              {result.metadata.organizations && (\n                <div className=\"mb-5\">\n                  <Icon name=\"building outline\" />\n                  {result.metadata.organizations.map((org, index) => {\n                    const separator = (index > 0 && \", \") || \"\";\n\n                    return (\n                      <span className=\"text-muted\" key={org.name}>\n                        {separator}\n                        {org.name}\n                        {org.id && (\n                          <a\n                            href={`https://ror.org/${org.id}`}\n                            aria-label={`${org.name}'s ROR ${i18next.t(\"profile\")}`}\n                            title={`${org.name}'s ROR ${i18next.t(\"profile\")}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <img\n                              className=\"inline-id-icon ml-5\"\n                              src=\"/static/images/ror-icon.svg\"\n                              alt=\"\"\n                            />\n                          </a>\n                        )}\n                      </span>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      )}\n    </Grid>\n  );\n};\n\nCommunityItemMobile.propTypes = {\n  result: PropTypes.object.isRequired,\n  index: PropTypes.string,\n};\n\nCommunityItemMobile.defaultProps = {\n  index: null,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { CommunityItemComputer } from \"./CommunityItemComputer\";\nimport { CommunityItemMobile } from \"./CommunityItemMobile\";\n\nexport function CommunityItem({ result }) {\n  return (\n    <>\n      <CommunityItemComputer result={result} />\n      <CommunityItemMobile result={result} />\n    </>\n  );\n}\n\nCommunityItem.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2023 CERN.\n//\n// InvenioRDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _truncate from \"lodash/truncate\";\n\nimport { Image, InvenioPopup } from \"react-invenio-forms\";\nimport { Icon, Label, Item } from \"semantic-ui-react\";\nimport { CommunityTypeLabel, RestrictedLabel } from \"../labels\";\n\nexport const CommunityCompactItemComputer = ({\n  result,\n  actions,\n  extraLabels,\n  itemClassName,\n  showPermissionLabel,\n  detailUrl,\n  isCommunityDefault,\n}) => {\n  const { metadata, ui, links, access, id } = result;\n  const communityType = ui?.type?.title_l10n;\n  return (\n    <Item\n      key={id}\n      className={`community-item tablet computer only display-grid auto-column-grid no-wrap ${itemClassName}`}\n    >\n      <div className=\"flex align-items-center\">\n        <Image\n          wrapped\n          size=\"tiny\"\n          src={links.logo}\n          alt=\"\"\n          className=\"community-image rel-mr-2\"\n        />\n        <div>\n          <div className=\"flex align-items-center rel-mb-1\">\n            <a\n              href={detailUrl || links.self_html}\n              className=\"ui small header truncate-lines-2 m-0 mr-5\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              aria-label={`${metadata.title} (${i18next.t(\"opens in new tab\")})`}\n            >\n              {metadata.title}\n            </a>\n            <i className=\"small icon external primary\" aria-hidden=\"true\" />\n          </div>\n          {metadata.description && (\n            <p className=\"truncate-lines-1 text size small text-muted mt-5 rel-mb-1\">\n              {_truncate(metadata.description, { length: 50 })}\n            </p>\n          )}\n\n          <div className=\"rel-mt-1\">\n            {(result.access.visibility === \"restricted\" ||\n              communityType ||\n              extraLabels) && (\n              <>\n                <RestrictedLabel access={access.visibility} />\n                <CommunityTypeLabel type={communityType} />\n                {extraLabels}\n              </>\n            )}\n            {isCommunityDefault && (\n              <Label color=\"purple\" size=\"tiny\">\n                <Icon name=\"paint brush\" />\n                {i18next.t(\"Branding\")}\n              </Label>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex align-items-center justify-end\">\n        {showPermissionLabel && (\n          <span className=\"rel-mr-1\">\n            {ui?.permissions?.can_include_directly && (\n              <InvenioPopup\n                popupId=\"direct-publish-info-popup\"\n                size=\"small\"\n                trigger={<Icon name=\"paper plane outline neutral\" size=\"large\" />}\n                ariaLabel={i18next.t(\"Submission information\")}\n                content={i18next.t(\n                  \"Submission to this community does not require review, and will be published immediately.\"\n                )}\n              />\n            )}\n          </span>\n        )}\n        {actions}\n      </div>\n    </Item>\n  );\n};\n\nCommunityCompactItemComputer.propTypes = {\n  result: PropTypes.object.isRequired,\n  actions: PropTypes.node,\n  extraLabels: PropTypes.node,\n  itemClassName: PropTypes.string,\n  showPermissionLabel: PropTypes.bool,\n  detailUrl: PropTypes.string,\n  isCommunityDefault: PropTypes.bool.isRequired,\n};\n\nCommunityCompactItemComputer.defaultProps = {\n  actions: undefined,\n  extraLabels: undefined,\n  itemClassName: \"\",\n  showPermissionLabel: false,\n  detailUrl: undefined,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { CommunityTypeLabel } from \"../labels\";\nimport { RestrictedLabel } from \"../labels\";\nimport _truncate from \"lodash/truncate\";\nimport React from \"react\";\nimport { Image, InvenioPopup } from \"react-invenio-forms\";\nimport { Icon, Label } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport const CommunityCompactItemMobile = ({\n  result,\n  actions,\n  extraLabels,\n  itemClassName,\n  showPermissionLabel,\n  detailUrl,\n  isCommunityDefault,\n}) => {\n  const communityType = result.ui?.type?.title_l10n;\n  const { metadata, ui, links, access, id } = result;\n  return (\n    <div key={id} className={`community-item mobile only ${itemClassName}`}>\n      <div className=\"display-grid auto-column-grid no-wrap\">\n        <div className=\"flex align-items-center\">\n          <Image\n            wrapped\n            size=\"mini\"\n            src={links.logo}\n            alt=\"\"\n            className=\"community-image rel-mr-1\"\n          />\n\n          <div className=\"flex align-items-center rel-mb-1\">\n            <a\n              href={detailUrl || links.self_html}\n              className=\"ui small header truncate-lines-2 m-0 mr-5\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              aria-label={`${metadata.title} (${i18next.t(\"opens in new tab\")})`}\n            >\n              {metadata.title}\n            </a>\n            <i className=\"small icon external primary\" aria-hidden=\"true\" />\n          </div>\n        </div>\n\n        <div className=\"flex align-items-center justify-end\">\n          {showPermissionLabel && (\n            <span className=\"rel-mr-1\">\n              {ui?.permissions?.can_include_directly && (\n                <InvenioPopup\n                  popupId=\"direct-publish-info-popup\"\n                  size=\"small\"\n                  trigger={<Icon name=\"paper plane outline neutral\" size=\"large\" />}\n                  ariaLabel={i18next.t(\"Submission information\")}\n                  content={i18next.t(\n                    \"Submission to this community does not require review, and will be published immediately.\"\n                  )}\n                />\n              )}\n            </span>\n          )}\n          {actions}\n        </div>\n      </div>\n\n      <div className=\"full-width\">\n        {metadata.description && (\n          <p className=\"truncate-lines-1 text size small text-muted mt-5 rel-mb-1\">\n            {_truncate(metadata.description, { length: 50 })}\n          </p>\n        )}\n\n        <div className=\"rel-mt-1\">\n          {(result.access.visibility === \"restricted\" ||\n            communityType ||\n            extraLabels) && (\n            <>\n              <RestrictedLabel access={access.visibility} />\n              <CommunityTypeLabel type={communityType} />\n              {extraLabels}\n            </>\n          )}\n          {isCommunityDefault && (\n            <Label color=\"purple\" size=\"tiny\">\n              <Icon name=\"paint brush\" />\n              {i18next.t(\"Branding\")}\n            </Label>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCommunityCompactItemMobile.propTypes = {\n  result: PropTypes.object.isRequired,\n  extraLabels: PropTypes.node,\n  itemClassName: PropTypes.string,\n  showPermissionLabel: PropTypes.bool,\n  actions: PropTypes.node,\n  detailUrl: PropTypes.string,\n  isCommunityDefault: PropTypes.bool.isRequired,\n};\n\nCommunityCompactItemMobile.defaultProps = {\n  actions: undefined,\n  extraLabels: undefined,\n  itemClassName: \"\",\n  showPermissionLabel: false,\n  detailUrl: undefined,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { CommunityCompactItemComputer } from \"./CommunityCompactItemComputer\";\nimport { CommunityCompactItemMobile } from \"./CommunityCompactItemMobile\";\n\nexport function CommunityCompactItem({\n  result,\n  actions,\n  extraLabels,\n  itemClassName,\n  showPermissionLabel,\n  detailUrl,\n  isCommunityDefault,\n}) {\n  return (\n    <>\n      <CommunityCompactItemComputer\n        result={result}\n        actions={actions}\n        extraLabels={extraLabels}\n        itemClassName={itemClassName}\n        showPermissionLabel={showPermissionLabel}\n        detailUrl={detailUrl}\n        isCommunityDefault={isCommunityDefault}\n      />\n      <CommunityCompactItemMobile\n        result={result}\n        actions={actions}\n        extraLabels={extraLabels}\n        itemClassName={itemClassName}\n        showPermissionLabel={showPermissionLabel}\n        detailUrl={detailUrl}\n        isCommunityDefault={isCommunityDefault}\n      />\n    </>\n  );\n}\n\nCommunityCompactItem.propTypes = {\n  result: PropTypes.object.isRequired,\n  actions: PropTypes.node,\n  extraLabels: PropTypes.node,\n  itemClassName: PropTypes.string,\n  showPermissionLabel: PropTypes.bool,\n  detailUrl: PropTypes.string,\n  isCommunityDefault: PropTypes.bool.isRequired,\n};\n\nCommunityCompactItem.defaultProps = {\n  actions: undefined,\n  extraLabels: undefined,\n  itemClassName: \"\",\n  showPermissionLabel: false,\n  detailUrl: undefined,\n};\n","import { InvenioSearchPagination } from \"@js/invenio_search_ui/components\";\nimport React from \"react\";\nimport { ResultsList } from \"react-searchkit\";\nimport { Grid } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport const CommunitiesResults = ({ paginationOptions, currentResultsState }) => {\n  const { total } = currentResultsState.data;\n  return (\n    total && (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column>\n            <ResultsList />\n          </Grid.Column>\n        </Grid.Row>\n\n        <InvenioSearchPagination total={total} paginationOptions={paginationOptions} />\n      </Grid>\n    )\n  );\n};\n\nCommunitiesResults.propTypes = {\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n};\n","import {\n  SearchAppFacets,\n  SearchAppResultsPane,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport { SearchBar, Sort } from \"react-searchkit\";\nimport { Button, Container, Grid } from \"semantic-ui-react\";\n\nexport const CommunitiesSearchLayout = ({ config, appName }) => {\n  const [sidebarVisible, setSidebarVisible] = React.useState(false);\n  return (\n    <Container>\n      <Grid>\n        {/* Mobile/tablet search header */}\n        <Grid.Row className=\"mobile tablet only\">\n          <Grid.Column mobile={2} tablet={1} verticalAlign=\"middle\" className=\"mt-10\">\n            <Button\n              basic\n              icon=\"sliders\"\n              onClick={() => setSidebarVisible(true)}\n              aria-label={i18next.t(\"Filter results\")}\n            />\n          </Grid.Column>\n\n          <Grid.Column mobile={14} tablet={15} floated=\"right\" className=\"mt-10\">\n            <SearchBar placeholder={i18next.t(\"Search communities...\")} />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row className=\"mobile tablet only\">\n          <Grid.Column width={16} textAlign=\"right\">\n            {config.sortOptions && (\n              <Sort\n                values={config.sortOptions}\n                label={(cmp) => (\n                  <>\n                    <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                    {cmp}\n                  </>\n                )}\n              />\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        {/* End mobile/tablet search header */}\n\n        {/* Desktop search header */}\n        <Grid.Row className=\"computer only\">\n          <Grid.Column width={8} floated=\"right\">\n            <SearchBar placeholder={i18next.t(\"Search communities...\")} />\n          </Grid.Column>\n\n          <Grid.Column width={4} textAlign=\"right\">\n            {config.sortOptions && (\n              <Sort\n                values={config.sortOptions}\n                label={(cmp) => (\n                  <>\n                    <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                    {cmp}\n                  </>\n                )}\n              />\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        {/* End desktop search header */}\n\n        <Grid.Row>\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n            // eslint-disable-next-line react/no-children-prop\n            children={<SearchAppFacets aggs={config.aggs} appName={appName} />}\n          />\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nCommunitiesSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nCommunitiesSearchLayout.defaultProps = {\n  appName: \"\",\n};\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\n\nexport const ResultsGridItemTemplate = ({ result }) => {\n  return (\n    <Card fluid href={`/communities/${result.slug}`}>\n      <Card.Content>\n        <Card.Header>{result.metadata.title}</Card.Header>\n        <Card.Description>\n          <div className=\"truncate-lines-2\">{result.metadata.description}</div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nResultsGridItemTemplate.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n","import { i18next } from \"@translations/invenio_communities/i18next\";\nimport React from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Input } from \"semantic-ui-react\";\n\nexport const CommunitiesSearchBarElement = withState(\n  ({\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    updateQueryState,\n    currentQueryState,\n  }) => {\n    const placeholder = passedPlaceholder || i18next.t(\"Search\");\n\n    const onSearch = () => {\n      updateQueryState({ ...currentQueryState, queryString });\n    };\n    const onBtnSearchClick = () => {\n      onSearch();\n    };\n    const onKeyPress = (event) => {\n      if (event.key === \"Enter\") {\n        onSearch();\n      }\n    };\n\n    return (\n      <Input\n        action={{\n          \"icon\": \"search\",\n          \"onClick\": onBtnSearchClick,\n          \"className\": \"search\",\n          \"aria-label\": i18next.t(\"Search\"),\n        }}\n        fluid\n        placeholder={placeholder}\n        aria-label={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    );\n  }\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\nimport { Button, Segment, Header, Icon } from \"semantic-ui-react\";\n\nexport const CommunitiesEmptySearchResults = (props) => {\n  const { queryString, resetQuery } = props;\n  return (\n    <Segment placeholder textAlign=\"center\">\n      <Header icon>\n        <Icon name=\"search\" />\n        {i18next.t(\"No communities found!\")}\n      </Header>\n      {queryString && (\n        <Button primary onClick={() => resetQuery()}>\n          {i18next.t(\"Reset search\")}\n        </Button>\n      )}\n    </Segment>\n  );\n};\n\nCommunitiesEmptySearchResults.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  resetQuery: PropTypes.func.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { FastField } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\n\nclass ProtectionButtonsComponent extends Component {\n  componentDidMount() {\n    const { formik, disabled, fieldPath } = this.props;\n    // If is disabled is set it means community is restricted and recort cannot be public\n    // thus it has to be restricted\n    if (disabled) {\n      formik.form.setFieldValue(fieldPath, \"restricted\");\n    }\n  }\n\n  handlePublicButtonClick = () => {\n    const { formik, fieldPath } = this.props;\n    formik.form.setFieldValue(fieldPath, \"public\");\n    // NOTE: We reset values, so if embargo filled and click Public,\n    //       user needs to fill embargo again. Otherwise, lots of\n    //       bookkeeping.\n    formik.form.setFieldValue(\"access.embargo\", {\n      active: false,\n    });\n  };\n\n  handleRestrictionButtonClick = () => {\n    const { formik, fieldPath } = this.props;\n    formik.form.setFieldValue(fieldPath, \"restricted\");\n  };\n\n  render() {\n    const { active, disabled } = this.props;\n\n    const publicColor = active ? \"positive\" : \"\";\n    const restrictedColor = !active ? \"negative\" : \"\";\n\n    return (\n      <Button.Group widths=\"2\">\n        <Button\n          className={publicColor}\n          data-testid=\"protection-buttons-component-public\"\n          disabled={disabled}\n          onClick={this.handlePublicButtonClick}\n          active={active}\n        >\n          {i18next.t(\"Public\")}\n        </Button>\n        <Button\n          className={restrictedColor}\n          data-testid=\"protection-buttons-component-restricted\"\n          active={!active}\n          onClick={this.handleRestrictionButtonClick}\n        >\n          {i18next.t(\"Restricted\")}\n        </Button>\n      </Button.Group>\n    );\n  }\n}\n\nProtectionButtonsComponent.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nProtectionButtonsComponent.defaultProps = {\n  active: true,\n  disabled: false,\n};\n\nexport class ProtectionButtons extends Component {\n  render() {\n    const { fieldPath } = this.props;\n\n    return (\n      <FastField\n        name={fieldPath}\n        component={(formikProps) => (\n          <ProtectionButtonsComponent formik={formikProps} {...this.props} />\n        )}\n      />\n    );\n  }\n}\n\nProtectionButtons.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ProtectionButtons } from \"./ProtectionButtons\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport Overridable from \"react-overridable\";\n\nexport const MetadataAccess = (props) => {\n  const { recordAccess, communityAccess } = props;\n  const publicMetadata = recordAccess === \"public\";\n  const publicCommunity = communityAccess === \"public\";\n\n  return (\n    <Overridable id=\"ReactInvenioDeposit.MetadataAccess.layout\" {...props}>\n      <>\n        {i18next.t(\"Full record\")}\n        <ProtectionButtons\n          active={publicMetadata && publicCommunity}\n          disabled={!publicCommunity}\n          fieldPath=\"access.record\"\n        />\n      </>\n    </Overridable>\n  );\n};\n\nMetadataAccess.propTypes = {\n  recordAccess: PropTypes.string.isRequired,\n  communityAccess: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { ProtectionButtons } from \"./ProtectionButtons\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Card } from \"semantic-ui-react\";\n\nexport const FilesAccess = ({ access, accessCommunity, metadataOnly }) => {\n  const publicFiles = access.files === \"public\";\n  const publicMetadata = access.record === \"public\";\n  const publicCommunity = accessCommunity === \"public\";\n\n  const fullRecordRestricted = !publicCommunity || !publicMetadata;\n  const filesRestricted = publicCommunity && !publicFiles && publicMetadata;\n\n  const filesButtonsDisplayed = !metadataOnly && publicCommunity && publicMetadata;\n\n  if (metadataOnly) {\n    return (\n      <Card.Meta data-testid=\"access-files\">\n        <em>{i18next.t(\"The record has no files.\")}</em>\n      </Card.Meta>\n    );\n  }\n\n  return (\n    <div data-testid=\"access-files\">\n      {filesButtonsDisplayed && (\n        <>\n          {i18next.t(\"Files only\")}\n          <ProtectionButtons\n            active={publicFiles}\n            disable={!publicCommunity}\n            fieldPath=\"access.files\"\n          />\n        </>\n      )}\n      {fullRecordRestricted && (\n        <Card.Description>\n          <em>{i18next.t(\"The full record is restricted.\")}</em>\n        </Card.Description>\n      )}\n      {filesRestricted && (\n        <Card.Description>\n          <em>{i18next.t(\"The files of this record are restricted.\")}</em>\n        </Card.Description>\n      )}\n    </div>\n  );\n};\n\nFilesAccess.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nFilesAccess.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { FastField } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nclass EmbargoCheckboxComponent extends Component {\n  render() {\n    const { fieldPath, formik, checked, disabled } = this.props;\n    return (\n      <Checkbox\n        id={fieldPath}\n        data-testid=\"embargo-checkbox-component\"\n        disabled={disabled}\n        checked={checked}\n        onChange={() => {\n          if (formik.field.value) {\n            // NOTE: We reset values, so if embargo filled and user unchecks,\n            //       user needs to fill embargo again. Otherwise, lots of\n            //       bookkeeping.\n            formik.form.setFieldValue(\"access.embargo\", {\n              active: false,\n            });\n          } else {\n            formik.form.setFieldValue(fieldPath, true);\n          }\n        }}\n      />\n    );\n  }\n}\n\nEmbargoCheckboxComponent.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nEmbargoCheckboxComponent.defaultProps = {\n  checked: false,\n  disabled: true,\n};\n\nexport class EmbargoCheckboxField extends Component {\n  render() {\n    const { disabled: embargoDisabled, fieldPath } = this.props;\n\n    // NOTE: See the optimization pattern on AccessRightField for more details.\n    //       This makes FastField only render when the things\n    //       (access.embargo.active and embargo) it cares about change as it\n    //       should be.\n    const change = !embargoDisabled ? {} : { change: true };\n\n    return (\n      <FastField\n        name={fieldPath}\n        component={(formikProps) => (\n          <EmbargoCheckboxComponent formik={formikProps} {...this.props} />\n        )}\n        {...change}\n      />\n    );\n  }\n}\n\nEmbargoCheckboxField.propTypes = {\n  disabled: PropTypes.bool,\n  fieldPath: PropTypes.string.isRequired,\n};\n\nEmbargoCheckboxField.defaultProps = {\n  disabled: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport function EmbargoDateField({\n  fieldPath,\n  label,\n  labelIcon,\n  placeholder,\n  required,\n  helpText,\n}) {\n  return (\n    <TextField\n      fieldPath={fieldPath}\n      label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n      placeholder={placeholder}\n      required={required}\n      helpText={helpText}\n    />\n  );\n}\n\nEmbargoDateField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  helpText: PropTypes.string,\n};\n\nEmbargoDateField.defaultProps = {\n  required: false,\n  labelIcon: \"calendar\",\n  placeholder: i18next.t(\"YYYY-MM-DD\"),\n  label: i18next.t(\"Embargo until\"),\n  helpText: `${i18next.t(\"Format\")}: ${i18next.t(\"YYYY-MM-DD\")}`,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _isEmpty from \"lodash/isEmpty\";\nimport { DateTime } from \"luxon\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { TextAreaField } from \"react-invenio-forms\";\nimport { Divider, Icon, List } from \"semantic-ui-react\";\nimport { EmbargoCheckboxField } from \"./EmbargoCheckboxField\";\nimport { EmbargoDateField } from \"./EmbargoDateField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\n\nexport const EmbargoAccess = ({ access, accessCommunity, metadataOnly }) => {\n  const recordPublic = access.record === \"public\";\n  const filesPublic = access.files === \"public\";\n  const communityPublic = accessCommunity === \"public\";\n\n  const filesRestricted = !metadataOnly && !filesPublic;\n\n  const embargoActive = access.embargo?.active || false;\n  const embargoUntil = access.embargo?.until;\n  const embargoReason = access.embargo?.reason;\n  const embargoWasLifted = !embargoActive && !_isEmpty(embargoUntil);\n  const embargoEnabled = communityPublic && (!recordPublic || filesRestricted);\n\n  const fmtDate = embargoUntil\n    ? DateTime.fromISO(embargoUntil).toLocaleString(DateTime.DATE_FULL)\n    : \"???\";\n\n  return (\n    <List>\n      <List.Item disabled={!embargoEnabled} data-testid=\"option-list-embargo\">\n        <List.Icon aria-hidden=\"false\">\n          <EmbargoCheckboxField\n            fieldPath=\"access.embargo.active\"\n            checked={embargoActive}\n            disabled={!embargoEnabled}\n          />\n        </List.Icon>\n\n        <List.Content>\n          <List.Header as=\"label\" htmlFor=\"access.embargo.active\">\n            {i18next.t(\"Apply an embargo\")} <Icon name=\"clock outline\" />\n          </List.Header>\n\n          <List.Description>\n            <Trans>\n              Record or files protection must be <b>restricted</b> to apply an embargo.\n            </Trans>\n          </List.Description>\n\n          {embargoActive && (\n            <>\n              <Divider hidden className=\"rel-mb-1\" />\n              <EmbargoDateField fieldPath=\"access.embargo.until\" required />\n              <TextAreaField\n                label={i18next.t(\"Embargo reason\")}\n                fieldPath=\"access.embargo.reason\"\n                placeholder={i18next.t(\n                  \"Optionally, describe the reason for the embargo.\"\n                )}\n                optimized=\"true\"\n              />\n            </>\n          )}\n          {embargoWasLifted && (\n            <>\n              <Divider hidden />\n              <p>\n                {i18next.t(`Embargo was lifted on {{fmtDate}}.`, {\n                  fmtDate: fmtDate,\n                })}\n              </p>\n              {embargoReason && (\n                <p>\n                  <b>{i18next.t(\"Reason\")}</b>: {embargoReason}.\n                </p>\n              )}\n            </>\n          )}\n        </List.Content>\n      </List.Item>\n    </List>\n  );\n};\n\nEmbargoAccess.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nEmbargoAccess.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { DateTime } from \"luxon\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\nimport { Icon, Message } from \"semantic-ui-react\";\n\nexport const AccessMessage = ({ access, metadataOnly, accessCommunity }) => {\n  const recordPublic = access.record === \"public\";\n  const filesPublic = access.files === \"public\";\n  const communityPublic = accessCommunity === \"public\";\n  const embargoActive = access.embargo?.active || false;\n\n  // restriction logic\n  const fullyRestricted = !communityPublic || (!recordPublic && !embargoActive);\n  const fullyPublic = communityPublic && recordPublic && (metadataOnly || filesPublic);\n\n  const embargoedFiles = embargoActive && !filesPublic && recordPublic;\n  const restrictedFiles = !embargoActive && !filesPublic && recordPublic;\n  const fullEmbargo = !recordPublic && embargoActive;\n\n  const fmtDate = access.embargo?.until\n    ? DateTime.fromISO(access.embargo.until).toLocaleString(DateTime.DATE_FULL)\n    : \"???\";\n\n  if (fullyPublic) {\n    return (\n      <Message icon positive visible data-testid=\"access-message\">\n        <Icon name=\"lock open\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Public\")}</Message.Header>\n          {metadataOnly\n            ? i18next.t(\"The record is publicly accessible.\")\n            : i18next.t(\"The record and files are publicly accessible.\")}\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (fullEmbargo) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Embargoed (full record)\")}</Message.Header>\n          <Trans i18nKey=\"access-message\">\n            On <b>{fmtDate}</b> the record will automatically be made publicly\n            accessible. Until then, the record can <b>only</b> be accessed by{\" \"}\n            <b>users specified</b> in the permissions.\"\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (fullyRestricted) {\n    return (\n      <Message icon negative visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Restricted\")}</Message.Header>\n          <Trans>\n            The record can <b>only</b> be accessed by <b>users specified</b> in the\n            permissions.\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (restrictedFiles) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Public with restricted files\")}</Message.Header>\n          <Trans>\n            The record is publicly accessible. The files can <b>only</b> be accessed by{\" \"}\n            <b>users specified</b> in the permissions.\n          </Trans>\n        </Message.Content>\n      </Message>\n    );\n  }\n\n  if (embargoedFiles) {\n    return (\n      <Message icon warning visible data-testid=\"access-message\">\n        <Icon name=\"lock\" />\n        <Message.Content>\n          <Message.Header>{i18next.t(\"Embargoed (files-only)\")}</Message.Header>\n          <Trans\n            defaults=\"The record is publicly accessible. On <bold>{{ date }}</bold> the files will automatically be made publicly accessible. Until then, the files can <bold>only</bold> be accessed by <bold>users specified</bold> in the permissions.\"\n            values={{ date: fmtDate }}\n            components={{ bold: <b /> }}\n          />\n        </Message.Content>\n      </Message>\n    );\n  }\n};\n\nAccessMessage.propTypes = {\n  access: PropTypes.object.isRequired,\n  metadataOnly: PropTypes.bool,\n  accessCommunity: PropTypes.string.isRequired,\n};\n\nAccessMessage.defaultProps = {\n  metadataOnly: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"formik\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { Card, Divider, Form, Header } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport {\n  MetadataAccess,\n  FilesAccess,\n  EmbargoAccess,\n  AccessMessage,\n} from \"./components\";\n\nexport class AccessRightFieldCmp extends Component {\n  /** Top-level Access Right Component */\n\n  render() {\n    const {\n      fieldPath,\n      formik, // this is our access to the shared current draft\n      label,\n      labelIcon,\n      showMetadataAccess,\n      community,\n    } = this.props;\n\n    const isGhostCommunity = community?.is_ghost === true;\n    const communityAccess =\n      (community && !isGhostCommunity && community.access.visibility) || \"public\";\n    const isMetadataOnly = !formik.form.values.files.enabled;\n\n    return (\n      <Card className=\"access-right\">\n        <Form.Field required>\n          <Card.Content>\n            <Card.Header>\n              <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n            </Card.Header>\n          </Card.Content>\n          <Card.Content>\n            {showMetadataAccess && (\n              <>\n                <MetadataAccess\n                  recordAccess={formik.field.value.record}\n                  communityAccess={communityAccess}\n                />\n                <Divider hidden />\n              </>\n            )}\n            <FilesAccess\n              access={formik.field.value}\n              accessCommunity={communityAccess}\n              metadataOnly={isMetadataOnly}\n            />\n\n            <Divider hidden />\n\n            <AccessMessage\n              access={formik.field.value}\n              accessCommunity={communityAccess}\n              metadataOnly={isMetadataOnly}\n            />\n\n            <Divider hidden />\n          </Card.Content>\n          <Card.Content>\n            <Card.Header as={Header} size=\"tiny\">\n              {i18next.t(\"Options\")}\n            </Card.Header>\n          </Card.Content>\n          <Card.Content extra>\n            <EmbargoAccess\n              access={formik.field.value}\n              accessCommunity={communityAccess}\n              metadataOnly={isMetadataOnly}\n            />\n          </Card.Content>\n        </Form.Field>\n      </Card>\n    );\n  }\n}\n\nAccessRightFieldCmp.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  labelIcon: PropTypes.string.isRequired,\n  showMetadataAccess: PropTypes.bool,\n  community: PropTypes.object,\n};\n\nAccessRightFieldCmp.defaultProps = {\n  showMetadataAccess: true,\n  community: undefined,\n};\n\nconst mapStateToPropsAccessRightFieldCmp = (state) => ({\n  community: state.deposit.editorState.selectedCommunity,\n});\n\nexport const AccessRightFieldComponent = connect(\n  mapStateToPropsAccessRightFieldCmp,\n  null\n)(AccessRightFieldCmp);\n\nexport class AccessRightField extends Component {\n  render() {\n    const { fieldPath } = this.props;\n\n    return (\n      <Field name={fieldPath}>\n        {(formik) => <AccessRightFieldComponent formik={formik} {...this.props} />}\n      </Field>\n    );\n  }\n}\n\nAccessRightField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  labelIcon: PropTypes.string,\n  isMetadataOnly: PropTypes.bool,\n};\n\nAccessRightField.defaultProps = {\n  labelIcon: undefined,\n  isMetadataOnly: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const emptyAdditionalDescription = {\n  lang: \"\",\n  description: \"\",\n  type: \"\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldLabel, RemoteSelectField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class LanguagesField extends Component {\n  render() {\n    const {\n      fieldPath,\n      label,\n      labelIcon,\n      required,\n      multiple,\n      placeholder,\n      clearable,\n      initialOptions,\n      serializeSuggestions: serializeSuggestionsFunc,\n      ...uiProps\n    } = this.props;\n    const serializeSuggestions = serializeSuggestionsFunc || null;\n\n    return (\n      <RemoteSelectField\n        fieldPath={fieldPath}\n        suggestionAPIUrl=\"/api/vocabularies/languages\"\n        suggestionAPIHeaders={{\n          Accept: \"application/vnd.inveniordm.v1+json\",\n        }}\n        placeholder={placeholder}\n        required={required}\n        clearable={clearable}\n        multiple={multiple}\n        initialSuggestions={initialOptions}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        noQueryMessage={i18next.t(\"Search for languages...\")}\n        {...(serializeSuggestions && { serializeSuggestions })}\n        {...uiProps}\n      />\n    );\n  }\n}\n\nLanguagesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  multiple: PropTypes.bool,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  initialOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      value: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n  serializeSuggestions: PropTypes.func,\n};\n\nLanguagesField.defaultProps = {\n  label: i18next.t(\"Languages\"),\n  labelIcon: \"globe\",\n  multiple: true,\n  clearable: true,\n  placeholder: i18next.t('Search for a language by name (e.g \"eng\", \"fr\" or \"Polish\")'),\n  required: false,\n  initialOptions: undefined,\n  serializeSuggestions: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\n/**\n * Traverse the leaves (non-Object, non-Array values) of obj and execute func\n * on each.\n *\n * @param {object} obj - generic Object\n * @param {function} func - (leaf) => ... (identity by default)\n *\n */\nexport function leafTraverse(obj, func = (l) => l) {\n  if (typeof obj === \"object\") {\n    // Objects and Arrays\n    for (const key in obj) {\n      leafTraverse(obj[key], func);\n    }\n  } else {\n    func(obj);\n  }\n}\n\n/**\n * Sort a list of string values (options).\n * @param {list} options\n * @returns\n */\nexport function sortOptions(options) {\n  return options.sort((o1, o2) => o1.text.localeCompare(o2.text));\n}\n\n/**\n * Scroll page to top\n */\nexport function scrollTop() {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: \"smooth\",\n  });\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021      Graz University of Technology.\n// Copyright (C) 2022      TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Grid, Icon } from \"semantic-ui-react\";\nimport { ArrayField, SelectField, RichInputField } from \"react-invenio-forms\";\nimport { emptyAdditionalDescription } from \"./initialValues\";\nimport { LanguagesField } from \"../../LanguagesField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { sortOptions } from \"../../../utils\";\n\nexport class AdditionalDescriptionsField extends Component {\n  render() {\n    const { fieldPath, options, recordUI, editorConfig } = this.props;\n    return (\n      <ArrayField\n        addButtonLabel={i18next.t(\"Add description\")}\n        defaultNewValue={emptyAdditionalDescription}\n        fieldPath={fieldPath}\n        className=\"additional-descriptions\"\n      >\n        {({ arrayHelpers, indexPath }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n\n          return (\n            <Grid className=\"description\">\n              <Grid.Row>\n                <Grid.Column mobile={16} tablet={10} computer={12}>\n                  <RichInputField\n                    fieldPath={`${fieldPathPrefix}.description`}\n                    label={i18next.t(\"Additional Description\")}\n                    editorConfig={editorConfig}\n                    optimized\n                    required\n                  />\n                </Grid.Column>\n                <Grid.Column mobile={16} tablet={6} computer={4}>\n                  <Form.Field>\n                    <Button\n                      aria-label={i18next.t(\"Remove field\")}\n                      className=\"close-btn\"\n                      floated=\"right\"\n                      icon\n                      onClick={() => arrayHelpers.remove(indexPath)}\n                    >\n                      <Icon name=\"close\" />\n                    </Button>\n                  </Form.Field>\n                  <SelectField\n                    fieldPath={`${fieldPathPrefix}.type`}\n                    label={i18next.t(\"Type\")}\n                    options={sortOptions(options.type)}\n                    required\n                    optimized\n                  />\n                  <LanguagesField\n                    serializeSuggestions={(suggestions) =>\n                      suggestions.map((item) => ({\n                        text: item.title_l10n,\n                        value: item.id,\n                        fieldPathPrefix: item.id,\n                      }))\n                    }\n                    initialOptions={\n                      recordUI?.additional_descriptions &&\n                      recordUI.additional_descriptions[indexPath]?.lang\n                        ? [recordUI.additional_descriptions[indexPath].lang]\n                        : []\n                    }\n                    fieldPath={`${fieldPathPrefix}.lang`}\n                    label={i18next.t(\"Language\")}\n                    multiple={false}\n                    placeholder={i18next.t(\"Select language\")}\n                    labelIcon=\"\"\n                    clearable\n                    selectOnBlur={false}\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          );\n        }}\n      </ArrayField>\n    );\n  }\n}\n\nAdditionalDescriptionsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n  recordUI: PropTypes.object,\n  editorConfig: PropTypes.object,\n};\n\nAdditionalDescriptionsField.defaultProps = {\n  recordUI: {},\n  editorConfig: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldLabel, RichInputField } from \"react-invenio-forms\";\nimport { AdditionalDescriptionsField } from \"./components\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class DescriptionsField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, options, editorConfig, recordUI } = this.props;\n    return (\n      <>\n        <RichInputField\n          className=\"description-field rel-mb-1 rel-mt-2\"\n          fieldPath={fieldPath}\n          editorConfig={editorConfig}\n          label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n          optimized\n        />\n        <AdditionalDescriptionsField\n          recordUI={recordUI}\n          options={options}\n          editorConfig={editorConfig}\n          fieldPath=\"metadata.additional_descriptions\"\n        />\n      </>\n    );\n  }\n}\n\nDescriptionsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  editorConfig: PropTypes.object,\n  recordUI: PropTypes.object,\n  options: PropTypes.object.isRequired,\n};\n\nDescriptionsField.defaultProps = {\n  label: i18next.t(\"Description\"),\n  labelIcon: \"pencil\",\n  editorConfig: undefined,\n  recordUI: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { FieldLabel, RemoteSelectField } from \"react-invenio-forms\";\nimport { Field, getIn } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\n/**Affiliation input component */\nexport class AffiliationsField extends Component {\n  serializeAffiliations = (affiliations) =>\n    affiliations.map((affiliation) => ({\n      text: affiliation.acronym\n        ? `${affiliation.name} (${affiliation.acronym})`\n        : affiliation.name,\n      value: affiliation.id || affiliation.name,\n      key: affiliation.id,\n      id: affiliation.id,\n      name: affiliation.name,\n    }));\n\n  render() {\n    const { fieldPath, selectRef } = this.props;\n    return (\n      <Field name={fieldPath}>\n        {({ form: { values } }) => {\n          return (\n            <RemoteSelectField\n              fieldPath={fieldPath}\n              suggestionAPIUrl=\"/api/affiliations\"\n              suggestionAPIHeaders={{\n                Accept: \"application/json\",\n              }}\n              initialSuggestions={getIn(values, fieldPath, [])}\n              serializeSuggestions={this.serializeAffiliations}\n              placeholder={i18next.t(\"Search or create affiliation\")}\n              label={\n                <FieldLabel\n                  htmlFor={`${fieldPath}.name`}\n                  label={i18next.t(\"Affiliations\")}\n                />\n              }\n              noQueryMessage={i18next.t(\"Search for affiliations..\")}\n              allowAdditions\n              clearable\n              multiple\n              onValueChange={({ formikProps }, selectedSuggestions) => {\n                formikProps.form.setFieldValue(\n                  fieldPath,\n                  // save the suggestion objects so we can extract information\n                  // about which value added by the user\n                  selectedSuggestions\n                );\n              }}\n              value={getIn(values, fieldPath, []).map(\n                (val) => val.id || val.text || val.name\n              )}\n              ref={selectRef}\n              // Disable UI-side filtering of search results\n              search={(options) => options}\n            />\n          );\n        }}\n      </Field>\n    );\n  }\n}\n\nAffiliationsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  selectRef: PropTypes.object,\n};\n\nAffiliationsField.defaultProps = {\n  selectRef: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SelectField } from \"react-invenio-forms\";\nimport _unickBy from \"lodash/unionBy\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class CreatibutorsIdentifiers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOptions: props.initialOptions,\n    };\n  }\n\n  handleIdentifierAddition = (e, { value }) => {\n    this.setState((prevState) => ({\n      selectedOptions: _unickBy(\n        [\n          {\n            text: value,\n            value: value,\n            key: value,\n          },\n          ...prevState.selectedOptions,\n        ],\n        \"value\"\n      ),\n    }));\n  };\n\n  valuesToOptions = (options) =>\n    options.map((option) => ({\n      text: option,\n      value: option,\n      key: option,\n    }));\n\n  handleChange = ({ data, formikProps }) => {\n    const { fieldPath } = this.props;\n    this.setState({\n      selectedOptions: this.valuesToOptions(data.value),\n    });\n    formikProps.form.setFieldValue(fieldPath, data.value);\n  };\n\n  render() {\n    const { fieldPath, label, placeholder } = this.props;\n    const { selectedOptions } = this.state;\n\n    return (\n      <SelectField\n        fieldPath={fieldPath}\n        label={label}\n        options={selectedOptions}\n        placeholder={placeholder}\n        noResultsMessage={i18next.t(\"Type the value of an identifier...\")}\n        search\n        multiple\n        selection\n        allowAdditions\n        onChange={this.handleChange}\n        // `icon` is set to `null` in order to hide the dropdown default icon\n        icon={null}\n        onAddItem={this.handleIdentifierAddition}\n        optimized\n      />\n    );\n  }\n}\n\nCreatibutorsIdentifiers.propTypes = {\n  initialOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nCreatibutorsIdentifiers.defaultProps = {\n  label: i18next.t(\"Identifiers\"),\n  placeholder: i18next.t(\"e.g. ORCID, ISNI or GND.\"),\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const CREATIBUTOR_TYPE = {\n  PERSON: \"personal\",\n  ORGANIZATION: \"organizational\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n// Copyright (C) 2022 data-futures.org.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Formik } from \"formik\";\nimport _find from \"lodash/find\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _map from \"lodash/map\";\nimport PropTypes from \"prop-types\";\nimport React, { Component, createRef } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport {\n  Image,\n  RadioField,\n  RemoteSelectField,\n  SelectField,\n  TextField,\n} from \"react-invenio-forms\";\nimport { Button, Form, Header, Modal } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { AffiliationsField } from \"./../AffiliationsField\";\nimport { CreatibutorsIdentifiers } from \"./CreatibutorsIdentifiers\";\nimport { CREATIBUTOR_TYPE } from \"./type\";\n\nconst ModalActions = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst NamesAutocompleteOptions = {\n  SEARCH: \"search\",\n  SEARCH_ONLY: \"search_only\",\n  OFF: \"off\",\n};\n\nexport class CreatibutorsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      saveAndContinueLabel: i18next.t(\"Save and add another\"),\n      action: null,\n      showPersonForm:\n        props.autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY ||\n        !_isEmpty(props.initialCreatibutor),\n      isOrganization:\n        !_isEmpty(props.initialCreatibutor) &&\n        props.initialCreatibutor.person_or_org.type === CREATIBUTOR_TYPE.ORGANIZATION,\n      personIdentifiers: [],\n      personAffiliations: [],\n      organizationIdentifiers: [],\n      organizationAffiliations: [],\n    };\n    this.inputRef = createRef();\n    this.identifiersRef = createRef();\n    this.affiliationsRef = createRef();\n    this.namesAutocompleteRef = createRef();\n  }\n\n  initStatesFromInitialCreatibutor(initialCreatibutor) {\n    const { affiliations = [] } = initialCreatibutor;\n    const { isOrganization } = this.state;\n    const identifiers = initialCreatibutor.person_or_org.identifiers?.map(\n      (identifier) => identifier.identifier\n    );\n    this.setState({\n      personIdentifiers: isOrganization ? [] : identifiers,\n      personAffiliations: isOrganization ? [] : affiliations,\n      organizationIdentifiers: isOrganization ? identifiers : [],\n      organizationAffiliations: isOrganization ? affiliations : [],\n    });\n  }\n\n  CreatorSchema = Yup.object({\n    person_or_org: Yup.object({\n      type: Yup.string(),\n      family_name: Yup.string().when(\"type\", (type, schema) => {\n        if (type === CREATIBUTOR_TYPE.PERSON && this.isCreator()) {\n          return schema.required(i18next.t(\"Family name is a required field.\"));\n        }\n      }),\n      name: Yup.string().when(\"type\", (type, schema) => {\n        if (type === CREATIBUTOR_TYPE.ORGANIZATION && this.isCreator()) {\n          return schema.required(i18next.t(\"Name is a required field.\"));\n        }\n      }),\n    }),\n    role: Yup.string().when(\"_\", (_, schema) => {\n      if (!this.isCreator()) {\n        return schema.required(i18next.t(\"Role is a required field.\"));\n      }\n    }),\n  });\n\n  openModal = () => {\n    this.setState({ open: true, action: null }, () => {\n      const { initialCreatibutor } = this.props;\n      if (!_isEmpty(initialCreatibutor)) {\n        const { isOrganization } = this.state;\n\n        if (isOrganization) {\n          // Set family and given name to empty for organizations\n          initialCreatibutor.person_or_org.family_name = \"\";\n          initialCreatibutor.person_or_org.given_name = \"\";\n        } else {\n          // Set name to empty for persons\n          initialCreatibutor.person_or_org.name = \"\";\n        }\n\n        this.initStatesFromInitialCreatibutor(initialCreatibutor);\n      }\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      personAffiliations: [],\n      personIdentifiers: [],\n      organizationAffiliations: [],\n      organizationIdentifiers: [],\n      open: false,\n      action: null,\n    });\n  };\n\n  changeContent = () => {\n    this.setState({ saveAndContinueLabel: i18next.t(\"Added\") });\n    // change in 2 sec\n    setTimeout(() => {\n      this.setState({\n        saveAndContinueLabel: i18next.t(\"Save and add another\"),\n      });\n    }, 2000);\n  };\n\n  displayActionLabel = () => {\n    const { action, addLabel, editLabel } = this.props;\n\n    return action === ModalActions.ADD ? addLabel : editLabel;\n  };\n\n  /**\n   * Function to transform formik creatibutor state\n   * back to the external format.\n   */\n  serializeCreatibutor = (submittedCreatibutor) => {\n    const { initialCreatibutor } = this.props;\n    const findField = (arrayField, key, value) => {\n      const knownField = _find(arrayField, {\n        [key]: value,\n      });\n      return knownField ? knownField : { [key]: value };\n    };\n    const identifiersFieldPath = \"person_or_org.identifiers\";\n    const affiliationsFieldPath = \"affiliations\";\n    // The modal is saving only identifiers values, thus\n    // identifiers with existing scheme are trimmed\n    // Here we merge back the known scheme for the submitted identifiers\n    const initialIdentifiers = _get(initialCreatibutor, identifiersFieldPath, []);\n    const submittedIdentifiers = _get(submittedCreatibutor, identifiersFieldPath, []);\n    const identifiers = submittedIdentifiers.map((identifier) => {\n      return findField(initialIdentifiers, \"identifier\", identifier);\n    });\n\n    const submittedAffiliations = _get(submittedCreatibutor, affiliationsFieldPath, []);\n\n    return {\n      ...submittedCreatibutor,\n      person_or_org: {\n        ...submittedCreatibutor.person_or_org,\n        identifiers,\n      },\n      affiliations: submittedAffiliations,\n    };\n  };\n\n  /**\n   * Function to transform creatibutor object\n   * to formik initialValues. The function is converting\n   * the array of objects fields e.g `identifiers`, `affiliations`\n   * to simple arrays. This is needed as SUI dropdowns accept only\n   * array of strings as values.\n   */\n  deserializeCreatibutor = (initialCreatibutor) => {\n    const identifiersFieldPath = \"person_or_org.identifiers\";\n\n    return {\n      // default type to personal\n      person_or_org: {\n        type: CREATIBUTOR_TYPE.PERSON,\n        ...initialCreatibutor.person_or_org,\n        identifiers: _map(\n          _get(initialCreatibutor, identifiersFieldPath, []),\n          \"identifier\"\n        ),\n      },\n      affiliations: _get(initialCreatibutor, \"affiliations\", []),\n      role: _get(initialCreatibutor, \"role\", \"\"),\n    };\n  };\n\n  isCreator = () => {\n    const { schema } = this.props;\n\n    return schema === \"creators\";\n  };\n\n  onSubmit = (values, formikBag) => {\n    const { onCreatibutorChange } = this.props;\n    const { action } = this.state;\n\n    onCreatibutorChange(this.serializeCreatibutor(values));\n    formikBag.setSubmitting(false);\n    formikBag.resetForm();\n    switch (action) {\n      case \"saveAndContinue\":\n        // Needed to close and open the modal to reset the internal\n        // state of the cmp inside the modal\n        this.closeModal();\n        this.openModal();\n        this.changeContent();\n        break;\n      case \"saveAndClose\":\n        this.closeModal();\n        break;\n      default:\n        break;\n    }\n  };\n\n  makeIdEntry = (identifier) => {\n    let icon = null;\n    let link = null;\n\n    if (identifier.scheme === \"orcid\") {\n      icon = \"/static/images/orcid.svg\";\n      link = \"https://orcid.org/\" + identifier.identifier;\n    } else if (identifier.scheme === \"gnd\") {\n      icon = \"/static/images/gnd-icon.svg\";\n      link = \"https://d-nb.info/gnd/\" + identifier.identifier;\n    } else if (identifier.scheme === \"ror\") {\n      icon = \"/static/images/ror-icon.svg\";\n      link = \"https://ror.org/\" + identifier.identifier;\n    } else if (identifier.scheme === \"isni\" || identifier.scheme === \"grid\") {\n      return null;\n    } else {\n      return (\n        <>\n          {identifier.scheme}: {identifier.identifier}\n        </>\n      );\n    }\n\n    return (\n      <span key={identifier.identifier}>\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Image\n            src={icon}\n            className=\"inline-id-icon ml-5 mr-5\"\n            verticalAlign=\"middle\"\n          />\n          {identifier.scheme === \"orcid\" ? identifier.identifier : null}\n        </a>\n      </span>\n    );\n  };\n\n  serializeSuggestions = (creatibutors) => {\n    const results = creatibutors.map((creatibutor) => {\n      // ensure `affiliations` and `identifiers` are present\n      creatibutor.affiliations = creatibutor.affiliations || [];\n      creatibutor.identifiers = creatibutor.identifiers || [];\n\n      let affNames = \"\";\n      if (\"affiliations\" in creatibutor) {\n        creatibutor.affiliations.forEach((affiliation, idx) => {\n          affNames += affiliation.name;\n          if (idx < creatibutor.affiliations.length - 1) {\n            affNames += \", \";\n          }\n        });\n      }\n\n      const idString = [];\n      creatibutor.identifiers?.forEach((i) => {\n        idString.push(this.makeIdEntry(i));\n      });\n      const { isOrganization } = this.state;\n\n      return {\n        text: creatibutor.name,\n        value: creatibutor.id,\n        extra: creatibutor,\n        key: creatibutor.id,\n        content: (\n          <Header>\n            {creatibutor.name} {idString.length ? <>({idString})</> : null}\n            <Header.Subheader>\n              {isOrganization ? creatibutor.acronym : affNames}\n            </Header.Subheader>\n          </Header>\n        ),\n      };\n    });\n\n    const { showPersonForm } = this.state;\n    const { autocompleteNames } = this.props;\n\n    const showManualEntry =\n      autocompleteNames === NamesAutocompleteOptions.SEARCH_ONLY && !showPersonForm;\n\n    if (showManualEntry) {\n      results.push({\n        text: \"Manual entry\",\n        value: \"Manual entry\",\n        extra: \"Manual entry\",\n        key: \"manual-entry\",\n        content: (\n          <Header textAlign=\"center\">\n            <Header.Content>\n              <p>\n                <Trans>\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n                  Couldn't find your person? You can <a>create a new entry</a>.\n                </Trans>\n              </p>\n            </Header.Content>\n          </Header>\n        ),\n      });\n    }\n    return results;\n  };\n\n  updateIdentifiersAndAffiliations(\n    formikProps,\n    identifiers,\n    affiliations,\n    identifiersRef,\n    affiliationsRef\n  ) {\n    const personOrOrgPath = `person_or_org`;\n    const identifiersFieldPath = `${personOrOrgPath}.identifiers`;\n    const affiliationsFieldPath = \"affiliations\";\n\n    let chosen = {\n      [identifiersFieldPath]: identifiers,\n      [affiliationsFieldPath]: affiliations,\n    };\n\n    Object.entries(chosen).forEach(([path, value]) => {\n      formikProps.form.setFieldValue(path, value);\n    });\n\n    // Update identifiers render\n    identifiersRef.current.setState({\n      selectedOptions: identifiersRef.current.valuesToOptions(identifiers),\n    });\n\n    // Update affiliations render\n    const affiliationsState = affiliations.map(({ name }) => ({\n      text: name,\n      value: name,\n      key: name,\n      name,\n    }));\n    affiliationsRef.current.setState({\n      suggestions: affiliationsState,\n      selectedSuggestions: affiliationsState,\n      searchQuery: null,\n      error: false,\n      open: false,\n    });\n  }\n\n  onOrganizationSearchChange = ({ formikProps }, selectedSuggestions) => {\n    const selectedSuggestion = selectedSuggestions[0].extra;\n    this.setState(\n      {\n        organizationIdentifiers: selectedSuggestion.identifiers.map(\n          (identifier) => identifier.identifier\n        ),\n        organizationAffiliations: [],\n      },\n      () => {\n        const { organizationIdentifiers, organizationAffiliations } = this.state;\n\n        formikProps.form.setFieldValue(\"person_or_org.name\", selectedSuggestion.name);\n\n        this.updateIdentifiersAndAffiliations(\n          formikProps,\n          organizationIdentifiers,\n          organizationAffiliations,\n          this.identifiersRef,\n          this.affiliationsRef\n        );\n      }\n    );\n  };\n\n  onPersonSearchChange = ({ formikProps }, selectedSuggestions) => {\n    if (selectedSuggestions[0].key === \"manual-entry\") {\n      // Empty the autocomplete's selected values\n      this.namesAutocompleteRef.current.setState({\n        suggestions: [],\n        selectedSuggestions: [],\n      });\n      this.setState({\n        showPersonForm: true,\n      });\n      return;\n    }\n\n    const selectedSuggestion = selectedSuggestions[0].extra;\n    this.setState(\n      {\n        showPersonForm: true,\n        personIdentifiers: selectedSuggestion.identifiers.map(\n          (identifier) => identifier.identifier\n        ),\n        personAffiliations: selectedSuggestion.affiliations.map(\n          (affiliation) => affiliation\n        ),\n      },\n      () => {\n        const { personIdentifiers, personAffiliations } = this.state;\n        const personOrOrgPath = `person_or_org`;\n        const familyNameFieldPath = `${personOrOrgPath}.family_name`;\n        const givenNameFieldPath = `${personOrOrgPath}.given_name`;\n\n        let chosen = {\n          [givenNameFieldPath]: selectedSuggestion.given_name,\n          [familyNameFieldPath]: selectedSuggestion.family_name,\n        };\n        Object.entries(chosen).forEach(([path, value]) => {\n          formikProps.form.setFieldValue(path, value);\n        });\n\n        this.updateIdentifiersAndAffiliations(\n          formikProps,\n          personIdentifiers,\n          personAffiliations,\n          this.identifiersRef,\n          this.affiliationsRef\n        );\n      }\n    );\n  };\n\n  render() {\n    const { initialCreatibutor, autocompleteNames, roleOptions, trigger, action } =\n      this.props;\n    const {\n      open,\n      showPersonForm,\n      personIdentifiers,\n      personAffiliations,\n      organizationIdentifiers,\n      organizationAffiliations,\n      saveAndContinueLabel,\n    } = this.state;\n\n    const ActionLabel = this.displayActionLabel();\n    return (\n      <Formik\n        initialValues={this.deserializeCreatibutor(initialCreatibutor)}\n        onSubmit={this.onSubmit}\n        enableReinitialize\n        validationSchema={this.CreatorSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ values, resetForm, handleSubmit }) => {\n          const personOrOrgPath = `person_or_org`;\n          const typeFieldPath = `${personOrOrgPath}.type`;\n          const familyNameFieldPath = `${personOrOrgPath}.family_name`;\n          const givenNameFieldPath = `${personOrOrgPath}.given_name`;\n          const organizationNameFieldPath = `${personOrOrgPath}.name`;\n          const identifiersFieldPath = `${personOrOrgPath}.identifiers`;\n          const affiliationsFieldPath = \"affiliations\";\n          const roleFieldPath = \"role\";\n          return (\n            <Modal\n              centered={false}\n              onOpen={() => this.openModal()}\n              open={open}\n              trigger={trigger}\n              onClose={() => {\n                this.closeModal();\n                resetForm();\n              }}\n              closeIcon\n              closeOnDimmerClick={false}\n            >\n              <Modal.Header as=\"h2\" className=\"pt-10 pb-10\">\n                {ActionLabel}\n              </Modal.Header>\n              <Modal.Content>\n                <Form>\n                  <Form.Group>\n                    <RadioField\n                      fieldPath={typeFieldPath}\n                      label={i18next.t(\"Person\")}\n                      checked={_get(values, typeFieldPath) === CREATIBUTOR_TYPE.PERSON}\n                      value={CREATIBUTOR_TYPE.PERSON}\n                      onChange={({ formikProps }) => {\n                        this.setState({\n                          isOrganization: false,\n                        });\n                        formikProps.form.setFieldValue(\n                          typeFieldPath,\n                          CREATIBUTOR_TYPE.PERSON\n                        );\n                        formikProps.form.setFieldValue(\n                          identifiersFieldPath,\n                          personIdentifiers\n                        );\n                        formikProps.form.setFieldValue(\n                          affiliationsFieldPath,\n                          personAffiliations\n                        );\n                      }}\n                      // eslint-disable-next-line\n                      autoFocus\n                      optimized\n                    />\n                    <RadioField\n                      fieldPath={typeFieldPath}\n                      label={i18next.t(\"Organization\")}\n                      checked={\n                        _get(values, typeFieldPath) === CREATIBUTOR_TYPE.ORGANIZATION\n                      }\n                      value={CREATIBUTOR_TYPE.ORGANIZATION}\n                      onChange={({ formikProps }) => {\n                        this.setState({\n                          isOrganization: true,\n                        });\n                        formikProps.form.setFieldValue(\n                          typeFieldPath,\n                          CREATIBUTOR_TYPE.ORGANIZATION\n                        );\n                        formikProps.form.setFieldValue(\n                          affiliationsFieldPath,\n                          organizationAffiliations\n                        );\n                        formikProps.form.setFieldValue(\n                          identifiersFieldPath,\n                          organizationIdentifiers\n                        );\n                      }}\n                      optimized\n                    />\n                  </Form.Group>\n                  {_get(values, typeFieldPath, \"\") === CREATIBUTOR_TYPE.PERSON ? (\n                    <div>\n                      {autocompleteNames !== NamesAutocompleteOptions.OFF && (\n                        <RemoteSelectField\n                          selectOnBlur={false}\n                          selectOnNavigation={false}\n                          searchInput={{\n                            autoFocus: _isEmpty(initialCreatibutor),\n                          }}\n                          fieldPath=\"creators\"\n                          clearable\n                          multiple={false}\n                          allowAdditions={false}\n                          placeholder={i18next.t(\n                            \"Search for persons by name, identifier, or affiliation...\"\n                          )}\n                          noQueryMessage={i18next.t(\n                            \"Search for persons by name, identifier, or affiliation...\"\n                          )}\n                          required={false}\n                          // Disable UI-side filtering of search results\n                          search={(options) => options}\n                          suggestionAPIUrl=\"/api/names\"\n                          serializeSuggestions={this.serializeSuggestions}\n                          onValueChange={this.onPersonSearchChange}\n                          ref={this.namesAutocompleteRef}\n                        />\n                      )}\n                      {showPersonForm && (\n                        <div>\n                          <Form.Group widths=\"equal\">\n                            <TextField\n                              label={i18next.t(\"Family name\")}\n                              placeholder={i18next.t(\"Family name\")}\n                              fieldPath={familyNameFieldPath}\n                              required={this.isCreator()}\n                            />\n                            <TextField\n                              label={i18next.t(\"Given names\")}\n                              placeholder={i18next.t(\"Given names\")}\n                              fieldPath={givenNameFieldPath}\n                            />\n                          </Form.Group>\n                          <CreatibutorsIdentifiers\n                            initialOptions={_map(\n                              _get(values, identifiersFieldPath, []),\n                              (identifier) => ({\n                                text: identifier,\n                                value: identifier,\n                                key: identifier,\n                              })\n                            )}\n                            fieldPath={identifiersFieldPath}\n                            ref={this.identifiersRef}\n                          />\n                          <AffiliationsField\n                            fieldPath={affiliationsFieldPath}\n                            selectRef={this.affiliationsRef}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <>\n                      {autocompleteNames !== NamesAutocompleteOptions.OFF && (\n                        <RemoteSelectField\n                          selectOnBlur={false}\n                          selectOnNavigation={false}\n                          searchInput={{\n                            autoFocus: _isEmpty(initialCreatibutor),\n                          }}\n                          fieldPath=\"creators\"\n                          clearable\n                          multiple={false}\n                          allowAdditions={false}\n                          placeholder={i18next.t(\n                            \"Search for an organization by name, identifier, or affiliation...\"\n                          )}\n                          noQueryMessage={i18next.t(\n                            \"Search for organization by name, identifier, or affiliation...\"\n                          )}\n                          required={false}\n                          // Disable UI-side filtering of search results\n                          search={(options) => options}\n                          suggestionAPIUrl=\"/api/affiliations\"\n                          serializeSuggestions={this.serializeSuggestions}\n                          onValueChange={this.onOrganizationSearchChange}\n                        />\n                      )}\n                      <TextField\n                        label={i18next.t(\"Name\")}\n                        placeholder={i18next.t(\"Organization name\")}\n                        fieldPath={organizationNameFieldPath}\n                        required={this.isCreator()}\n                        // forward ref to Input component because Form.Input\n                        // doesn't handle it\n                        input={{ ref: this.inputRef }}\n                      />\n                      <CreatibutorsIdentifiers\n                        initialOptions={_map(\n                          _get(values, identifiersFieldPath, []),\n                          (identifier) => ({\n                            text: identifier,\n                            value: identifier,\n                            key: identifier,\n                          })\n                        )}\n                        fieldPath={identifiersFieldPath}\n                        ref={this.identifiersRef}\n                        placeholder={i18next.t(\"e.g. ROR, ISNI or GND.\")}\n                      />\n                      <AffiliationsField\n                        fieldPath={affiliationsFieldPath}\n                        selectRef={this.affiliationsRef}\n                      />\n                    </>\n                  )}\n                  {(_get(values, typeFieldPath) === CREATIBUTOR_TYPE.ORGANIZATION ||\n                    (showPersonForm &&\n                      _get(values, typeFieldPath) === CREATIBUTOR_TYPE.PERSON)) && (\n                    <div>\n                      <SelectField\n                        fieldPath={roleFieldPath}\n                        label={i18next.t(\"Role\")}\n                        options={roleOptions}\n                        placeholder={i18next.t(\"Select role\")}\n                        {...(this.isCreator() && { clearable: true })}\n                        required={!this.isCreator()}\n                        optimized\n                        scrolling\n                      />\n                    </div>\n                  )}\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button\n                  name=\"cancel\"\n                  onClick={() => {\n                    resetForm();\n                    this.closeModal();\n                  }}\n                  icon=\"remove\"\n                  content={i18next.t(\"Cancel\")}\n                  floated=\"left\"\n                />\n                {action === ModalActions.ADD && (\n                  <Button\n                    name=\"submit\"\n                    onClick={() => {\n                      this.setState(\n                        {\n                          action: \"saveAndContinue\",\n                          showPersonForm:\n                            autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY,\n                        },\n                        () => {\n                          handleSubmit();\n                        }\n                      );\n                    }}\n                    primary\n                    icon=\"checkmark\"\n                    content={saveAndContinueLabel}\n                  />\n                )}\n                <Button\n                  name=\"submit\"\n                  onClick={() => {\n                    this.setState(\n                      {\n                        action: \"saveAndClose\",\n                        showPersonForm:\n                          autocompleteNames !== NamesAutocompleteOptions.SEARCH_ONLY,\n                      },\n                      () => handleSubmit()\n                    );\n                  }}\n                  primary\n                  icon=\"checkmark\"\n                  content={i18next.t(\"Save\")}\n                />\n              </Modal.Actions>\n            </Modal>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nCreatibutorsModal.propTypes = {\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n  action: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  addLabel: PropTypes.string.isRequired,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  editLabel: PropTypes.string.isRequired,\n  initialCreatibutor: PropTypes.shape({\n    id: PropTypes.string,\n    person_or_org: PropTypes.shape({\n      family_name: PropTypes.string,\n      given_name: PropTypes.string,\n      name: PropTypes.string,\n      type: PropTypes.string,\n      identifiers: PropTypes.arrayOf(\n        PropTypes.shape({\n          scheme: PropTypes.string,\n          identifier: PropTypes.string,\n        })\n      ),\n    }),\n    affiliations: PropTypes.array,\n    role: PropTypes.string,\n  }),\n  trigger: PropTypes.object.isRequired,\n  onCreatibutorChange: PropTypes.func.isRequired,\n  roleOptions: PropTypes.array,\n};\n\nCreatibutorsModal.defaultProps = {\n  roleOptions: [],\n  initialCreatibutor: {},\n  autocompleteNames: \"search\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 New York University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Button, Label, List, Ref } from \"semantic-ui-react\";\nimport { CreatibutorsModal } from \"./CreatibutorsModal\";\nimport PropTypes from \"prop-types\";\n\nexport const CreatibutorsFieldItem = ({\n  compKey,\n  identifiersError,\n  index,\n  replaceCreatibutor,\n  removeCreatibutor,\n  moveCreatibutor,\n  addLabel,\n  editLabel,\n  initialCreatibutor,\n  displayName,\n  roleOptions,\n  schema,\n  autocompleteNames,\n}) => {\n  const dropRef = React.useRef(null);\n  // eslint-disable-next-line no-unused-vars\n  const [_, drag, preview] = useDrag({\n    item: { index, type: \"creatibutor\" },\n  });\n  const [{ hidden }, drop] = useDrop({\n    accept: \"creatibutor\",\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      if (monitor.isOver({ shallow: true })) {\n        moveCreatibutor(dragIndex, hoverIndex);\n        item.index = hoverIndex;\n      }\n    },\n    collect: (monitor) => ({\n      hidden: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  const renderRole = (role, roleOptions) => {\n    if (role) {\n      const friendlyRole =\n        roleOptions.find(({ value }) => value === role)?.text ?? role;\n\n      return <Label size=\"tiny\">{friendlyRole}</Label>;\n    }\n  };\n  const firstError =\n    identifiersError &&\n    identifiersError.find((elem) => ![undefined, null].includes(elem));\n\n  // Initialize the ref explicitely\n  drop(dropRef);\n  return (\n    <Ref innerRef={dropRef} key={compKey}>\n      <List.Item\n        key={compKey}\n        className={hidden ? \"deposit-drag-listitem hidden\" : \"deposit-drag-listitem\"}\n      >\n        <List.Content floated=\"right\">\n          <CreatibutorsModal\n            addLabel={addLabel}\n            editLabel={editLabel}\n            onCreatibutorChange={(selectedCreatibutor) => {\n              replaceCreatibutor(index, selectedCreatibutor);\n            }}\n            initialCreatibutor={initialCreatibutor}\n            roleOptions={roleOptions}\n            schema={schema}\n            autocompleteNames={autocompleteNames}\n            action=\"edit\"\n            trigger={\n              <Button size=\"mini\" primary type=\"button\">\n                {i18next.t(\"Edit\")}\n              </Button>\n            }\n          />\n          <Button size=\"mini\" type=\"button\" onClick={() => removeCreatibutor(index)}>\n            {i18next.t(\"Remove\")}\n          </Button>\n        </List.Content>\n        <Ref innerRef={drag}>\n          <List.Icon name=\"bars\" className=\"drag-anchor\" />\n        </Ref>\n        <Ref innerRef={preview}>\n          <List.Content>\n            <List.Description>\n              <span className=\"creatibutor\">\n                {_get(initialCreatibutor, \"person_or_org.identifiers\", []).some(\n                  (identifier) => identifier.scheme === \"orcid\"\n                ) && (\n                  <img\n                    alt=\"ORCID logo\"\n                    className=\"inline-id-icon mr-5\"\n                    src=\"/static/images/orcid.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                  />\n                )}\n                {_get(initialCreatibutor, \"person_or_org.identifiers\", []).some(\n                  (identifier) => identifier.scheme === \"ror\"\n                ) && (\n                  <img\n                    alt=\"ROR logo\"\n                    className=\"inline-id-icon mr-5\"\n                    src=\"/static/images/ror-icon.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                  />\n                )}\n                {_get(initialCreatibutor, \"person_or_org.identifiers\", []).some(\n                  (identifier) => identifier.scheme === \"gnd\"\n                ) && (\n                  <img\n                    alt=\"GND logo\"\n                    className=\"inline-id-icon mr-5\"\n                    src=\"/static/images/gnd-icon.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                  />\n                )}\n                {displayName} {renderRole(initialCreatibutor?.role, roleOptions)}\n              </span>\n            </List.Description>\n            {firstError && (\n              <Label pointing=\"left\" prompt>\n                {firstError.scheme ? firstError.scheme : \"Invalid identifiers\"}\n              </Label>\n            )}\n          </List.Content>\n        </Ref>\n      </List.Item>\n    </Ref>\n  );\n};\n\nCreatibutorsFieldItem.propTypes = {\n  compKey: PropTypes.string.isRequired,\n  identifiersError: PropTypes.array,\n  index: PropTypes.number.isRequired,\n  replaceCreatibutor: PropTypes.func.isRequired,\n  removeCreatibutor: PropTypes.func.isRequired,\n  moveCreatibutor: PropTypes.func.isRequired,\n  addLabel: PropTypes.node,\n  editLabel: PropTypes.node,\n  initialCreatibutor: PropTypes.object.isRequired,\n  displayName: PropTypes.string,\n  roleOptions: PropTypes.array.isRequired,\n  schema: PropTypes.string.isRequired,\n  autocompleteNames: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nCreatibutorsFieldItem.defaultProps = {\n  identifiersError: undefined,\n  addLabel: undefined,\n  editLabel: undefined,\n  displayName: undefined,\n  autocompleteNames: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn, FieldArray } from \"formik\";\nimport { Button, Form, Label, List, Icon } from \"semantic-ui-react\";\nimport _get from \"lodash/get\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\n\nimport { CreatibutorsModal } from \"./CreatibutorsModal\";\nimport { CreatibutorsFieldItem } from \"./CreatibutorsFieldItem\";\nimport { CREATIBUTOR_TYPE } from \"./type\";\nimport { sortOptions } from \"../../utils\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nconst creatibutorNameDisplay = (value) => {\n  const creatibutorType = _get(value, \"person_or_org.type\", CREATIBUTOR_TYPE.PERSON);\n  const isPerson = creatibutorType === CREATIBUTOR_TYPE.PERSON;\n\n  const familyName = _get(value, \"person_or_org.family_name\", \"\");\n  const givenName = _get(value, \"person_or_org.given_name\", \"\");\n  const affiliationName = _get(value, `affiliations[0].name`, \"\");\n  const name = _get(value, `person_or_org.name`);\n\n  const affiliation = affiliationName ? ` (${affiliationName})` : \"\";\n\n  if (isPerson) {\n    const givenNameSuffix = givenName ? `, ${givenName}` : \"\";\n    return `${familyName}${givenNameSuffix}${affiliation}`;\n  }\n\n  return `${name}${affiliation}`;\n};\n\nclass CreatibutorsFieldForm extends Component {\n  handleOnContributorChange = (selectedCreatibutor) => {\n    const { push: formikArrayPush } = this.props;\n    formikArrayPush(selectedCreatibutor);\n  };\n\n  render() {\n    const {\n      form: { values, errors, initialErrors, initialValues },\n      remove: formikArrayRemove,\n      replace: formikArrayReplace,\n      move: formikArrayMove,\n      name: fieldPath,\n      label,\n      labelIcon,\n      roleOptions,\n      schema,\n      modal,\n      autocompleteNames,\n      addButtonLabel,\n    } = this.props;\n\n    const creatibutorsList = getIn(values, fieldPath, []);\n    const formikInitialValues = getIn(initialValues, fieldPath, []);\n\n    const error = getIn(errors, fieldPath, null);\n    const initialError = getIn(initialErrors, fieldPath, null);\n    const creatibutorsError =\n      error || (creatibutorsList === formikInitialValues && initialError);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Form.Field\n          required={schema === \"creators\"}\n          className={creatibutorsError ? \"error\" : \"\"}\n        >\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          <List>\n            {creatibutorsList.map((value, index) => {\n              const key = `${fieldPath}.${index}`;\n              const identifiersError =\n                creatibutorsError &&\n                creatibutorsError[index]?.person_or_org?.identifiers;\n              const displayName = creatibutorNameDisplay(value);\n\n              return (\n                <CreatibutorsFieldItem\n                  key={key}\n                  identifiersError={identifiersError}\n                  {...{\n                    displayName,\n                    index,\n                    roleOptions,\n                    schema,\n                    compKey: key,\n                    initialCreatibutor: value,\n                    removeCreatibutor: formikArrayRemove,\n                    replaceCreatibutor: formikArrayReplace,\n                    moveCreatibutor: formikArrayMove,\n                    addLabel: modal.addLabel,\n                    editLabel: modal.editLabel,\n                    autocompleteNames: autocompleteNames,\n                  }}\n                />\n              );\n            })}\n          </List>\n          <CreatibutorsModal\n            onCreatibutorChange={this.handleOnContributorChange}\n            action=\"add\"\n            addLabel={modal.addLabel}\n            editLabel={modal.editLabel}\n            roleOptions={sortOptions(roleOptions)}\n            schema={schema}\n            autocompleteNames={autocompleteNames}\n            trigger={\n              <Button type=\"button\" icon labelPosition=\"left\">\n                <Icon name=\"add\" />\n                {addButtonLabel}\n              </Button>\n            }\n          />\n          {creatibutorsError && typeof creatibutorsError == \"string\" && (\n            <Label pointing=\"left\" prompt>\n              {creatibutorsError}\n            </Label>\n          )}\n        </Form.Field>\n      </DndProvider>\n    );\n  }\n}\n\nexport class CreatibutorsField extends Component {\n  render() {\n    const { fieldPath } = this.props;\n\n    return (\n      <FieldArray\n        name={fieldPath}\n        component={(formikProps) => (\n          <CreatibutorsFieldForm {...formikProps} {...this.props} />\n        )}\n      />\n    );\n  }\n}\n\nCreatibutorsFieldForm.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  addButtonLabel: PropTypes.string,\n  modal: PropTypes.shape({\n    addLabel: PropTypes.string.isRequired,\n    editLabel: PropTypes.string.isRequired,\n  }),\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  roleOptions: PropTypes.array.isRequired,\n  form: PropTypes.object.isRequired,\n  remove: PropTypes.func.isRequired,\n  replace: PropTypes.func.isRequired,\n  move: PropTypes.func.isRequired,\n  push: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nCreatibutorsFieldForm.defaultProps = {\n  autocompleteNames: \"search\",\n  label: i18next.t(\"Creators\"),\n  labelIcon: \"user\",\n  modal: {\n    addLabel: i18next.t(\"Add creator\"),\n    editLabel: i18next.t(\"Edit creator\"),\n  },\n  addButtonLabel: i18next.t(\"Add creator\"),\n};\n\nCreatibutorsField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  addButtonLabel: PropTypes.string,\n  modal: PropTypes.shape({\n    addLabel: PropTypes.string.isRequired,\n    editLabel: PropTypes.string.isRequired,\n  }),\n  schema: PropTypes.oneOf([\"creators\", \"contributors\"]).isRequired,\n  autocompleteNames: PropTypes.oneOf([\"search\", \"search_only\", \"off\"]),\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  roleOptions: PropTypes.array,\n};\n\nCreatibutorsField.defaultProps = {\n  autocompleteNames: \"search\",\n  label: undefined,\n  labelIcon: undefined,\n  roleOptions: undefined,\n  modal: {\n    addLabel: i18next.t(\"Add creator\"),\n    editLabel: i18next.t(\"Edit creator\"),\n  },\n  addButtonLabel: i18next.t(\"Add creator\"),\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const emptyDate = {\n  date: \"\",\n  description: \"\",\n  type: \"\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ArrayField, GroupField, SelectField, TextField } from \"react-invenio-forms\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _matches from \"lodash/matches\";\nimport _filter from \"lodash/filter\";\nimport _isEqual from \"lodash/isEqual\";\nimport _has from \"lodash/has\";\nimport { emptyDate } from \"./initialValues\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { sortOptions } from \"../../utils\";\n\nexport class DatesField extends Component {\n  /** Top-level Dates Component */\n\n  /**\n   * Returns the required option if the current value passed does match it\n   * @param  {Object} currentValue The current value\n   * @param  {Array} arrayOfValues The array of values for the field\n   * @return {Object} The required option if any\n   */\n  getRequiredOption = (currentValue, arrayOfValues) => {\n    const { requiredOptions } = this.props;\n    for (const requiredOption of requiredOptions) {\n      // If more values matched we do take the first value\n      const matchingValue = _filter(arrayOfValues, _matches(requiredOption))[0];\n      if (_isEqual(matchingValue, currentValue)) {\n        return requiredOption;\n      }\n    }\n    return null;\n  };\n\n  render() {\n    const {\n      fieldPath,\n      options,\n      label,\n      labelIcon,\n      placeholderDate,\n      required,\n      requiredOptions,\n      showEmptyValue,\n    } = this.props;\n\n    return (\n      <ArrayField\n        addButtonLabel={i18next.t(\"Add date\")} // TODO: Pass by prop\n        defaultNewValue={emptyDate}\n        fieldPath={fieldPath}\n        helpText={i18next.t(\n          \"Format: DATE or DATE/DATE where DATE is YYYY or YYYY-MM or YYYY-MM-DD.\"\n        )}\n        label={label}\n        labelIcon={labelIcon}\n        required={required}\n        requiredOptions={requiredOptions}\n        showEmptyValue={showEmptyValue}\n      >\n        {({ array, arrayHelpers, indexPath, value }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n          const requiredOption = this.getRequiredOption(value, array);\n          const hasRequiredDateValue = _has(requiredOption, \"date\");\n          const hasRequiredTypeValue = _has(requiredOption, \"type\");\n          const hasRequiredDescriptionValue = _has(requiredOption, \"description\");\n          return (\n            <GroupField fieldPath={fieldPath} optimized>\n              <TextField\n                fieldPath={`${fieldPathPrefix}.date`}\n                label={i18next.t(\"Date\")}\n                placeholder={placeholderDate}\n                disabled={hasRequiredDateValue}\n                required\n                width={5}\n              />\n              <SelectField\n                fieldPath={`${fieldPathPrefix}.type`}\n                label={i18next.t(\"Type\")}\n                aria-label={i18next.t(\"Type\")}\n                options={sortOptions(options.type)}\n                disabled={hasRequiredTypeValue}\n                required\n                width={5}\n                optimized\n              />\n              <TextField\n                fieldPath={`${fieldPathPrefix}.description`}\n                label={i18next.t(\"Description\")}\n                disabled={hasRequiredDescriptionValue}\n                width={5}\n              />\n              <Form.Field>\n                <Button\n                  aria-label={i18next.t(\"Remove field\")}\n                  className=\"close-btn\"\n                  disabled={!_isEmpty(requiredOption)}\n                  icon\n                  onClick={() => arrayHelpers.remove(indexPath)}\n                  type=\"button\"\n                >\n                  <Icon name=\"close\" />\n                </Button>\n              </Form.Field>\n            </GroupField>\n          );\n        }}\n      </ArrayField>\n    );\n  }\n}\n\nDatesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n  required: PropTypes.bool,\n  placeholderDate: PropTypes.string,\n  requiredOptions: PropTypes.array,\n  showEmptyValue: PropTypes.bool,\n};\n\nDatesField.defaultProps = {\n  label: i18next.t(\"Dates\"),\n  labelIcon: \"calendar\",\n  placeholderDate: i18next.t(\"YYYY-MM-DD or YYYY-MM-DD/YYYY-MM-DD\"),\n  required: false,\n  requiredOptions: [],\n  showEmptyValue: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const DRAFT_FETCHED = \"DRAFT_FETCHED\";\nexport const DRAFT_HAS_VALIDATION_ERRORS = \"DRAFT_HAS_VALIDATION_ERRORS\";\n\n// Draft save\nexport const DRAFT_SAVE_STARTED = \"DRAFT_SAVE_STARTED\";\nexport const DRAFT_SAVE_SUCCEEDED = \"DRAFT_SAVE_SUCCEEDED\";\nexport const DRAFT_SAVE_FAILED = \"DRAFT_SAVE_FAILED\";\n\n// Draft publish\nexport const DRAFT_PUBLISH_STARTED = \"DRAFT_PUBLISH_STARTED\";\nexport const DRAFT_PUBLISH_FAILED = \"DRAFT_PUBLISH_FAILED\";\nexport const DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS =\n  \"DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS\";\n\n// Draft preview\nexport const DRAFT_PREVIEW_STARTED = \"DRAFT_PREVIEW_STARTED\";\nexport const DRAFT_PREVIEW_FAILED = \"DRAFT_PREVIEW_FAILED\";\n\n// Draft delete\nexport const DRAFT_DELETE_STARTED = \"DRAFT_DELETE_STARTED\";\nexport const DRAFT_DELETE_FAILED = \"DRAFT_DELETE_FAILED\";\n\n// Draft submit review\nexport const DRAFT_SUBMIT_REVIEW_STARTED = \"DRAFT_SUBMIT_REVIEW_STARTED\";\nexport const DRAFT_SUBMIT_REVIEW_FAILED = \"DRAFT_SUBMIT_REVIEW_FAILED\";\nexport const DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS =\n  \"DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS\";\n\n// Draft reserve PID\nexport const RESERVE_PID_STARTED = \"RESERVE_PID_STARTED\";\nexport const RESERVE_PID_SUCCEEDED = \"RESERVE_PID_SUCCEEDED\";\nexport const RESERVE_PID_FAILED = \"RESERVE_PID_FAILED\";\n\n// Draft discard PID\nexport const DISCARD_PID_STARTED = \"DISCARD_PID_STARTED\";\nexport const DISCARD_PID_SUCCEEDED = \"DISCARD_PID_SUCCEEDED\";\nexport const DISCARD_PID_FAILED = \"DISCARD_PID_FAILED\";\n\n// Files\nexport const FILE_UPLOAD_ADDED = \"FILE_UPLOAD_ADDED\";\nexport const FILE_UPLOAD_IN_PROGRESS = \"FILE_UPLOAD_IN_PROGRESS\";\nexport const FILE_UPLOAD_FINISHED = \"FILE_UPLOAD_FINISHED\";\nexport const FILE_UPLOAD_FAILED = \"FILE_UPLOAD_FAILED\";\nexport const FILE_UPLOAD_SAVE_DRAFT_FAILED = \"FILE_UPLOAD_SAVE_DRAFT_FAILED\";\n\nexport const FILE_IMPORT_STARTED = \"FILE_IMPORT_STARTED\";\nexport const FILE_IMPORT_SUCCESS = \"FILE_IMPORT_SUCCESS\";\nexport const FILE_IMPORT_FAILED = \"FILE_IMPORT_FAILED\";\n\nexport const FILE_DELETED_SUCCESS = \"FILE_DELETED_SUCCESS\";\nexport const FILE_DELETE_FAILED = \"FILE_DELETE_FAILED\";\n\nexport const FILE_UPLOAD_SET_CANCEL_FUNCTION = \"FILE_UPLOAD_SET_CANCEL_FUNCTION\";\nexport const FILE_UPLOAD_CANCELLED = \"FILE_UPLOAD_CANCELLED\";\n\n// Community\nexport const SET_COMMUNITY = \"SET_COMMUNITY\";\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _isEmpty from \"lodash/isEmpty\";\nimport _ from \"lodash\";\nimport {\n  DISCARD_PID_FAILED,\n  DISCARD_PID_STARTED,\n  DISCARD_PID_SUCCEEDED,\n  DRAFT_DELETE_FAILED,\n  DRAFT_DELETE_STARTED,\n  DRAFT_FETCHED,\n  DRAFT_HAS_VALIDATION_ERRORS,\n  DRAFT_PREVIEW_FAILED,\n  DRAFT_PREVIEW_STARTED,\n  DRAFT_PUBLISH_FAILED,\n  DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS,\n  DRAFT_PUBLISH_STARTED,\n  DRAFT_SAVE_FAILED,\n  DRAFT_SAVE_STARTED,\n  DRAFT_SAVE_SUCCEEDED,\n  DRAFT_SUBMIT_REVIEW_FAILED,\n  DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS,\n  DRAFT_SUBMIT_REVIEW_STARTED,\n  RESERVE_PID_FAILED,\n  RESERVE_PID_STARTED,\n  RESERVE_PID_SUCCEEDED,\n  SET_COMMUNITY,\n} from \"../types\";\n\nasync function changeURLAfterCreation(draftURL) {\n  window.history.replaceState(undefined, \"\", draftURL);\n}\n\nexport const saveDraftWithUrlUpdate = async (draft, draftsService) => {\n  const hasAlreadyId = !!draft.id;\n  const response = await draftsService.save(draft);\n\n  const draftHasValidationErrors = !_isEmpty(response.errors);\n\n  // In case of invalid values, on the second draft save, the form doesn't report the errors. This happens\n  // because the backend doesn't save invalid metadata. Here we are merging draft state with backend\n  // response in order not to lose those invalid values from the form state and have the errors reported.\n  if (draftHasValidationErrors) {\n    const mergingValues = {\n      metadata: draft.metadata,\n      custom_fields: draft.custom_fields,\n    };\n\n    response.data = _.merge(response.data, mergingValues);\n  }\n\n  if (!hasAlreadyId) {\n    // draft was created, change URL to add the draft PID\n    const draftURL = response.data.links.self_html;\n    changeURLAfterCreation(draftURL);\n  }\n  return response;\n};\n\nasync function _saveDraft(\n  draft,\n  draftsService,\n  { depositState, dispatchFn, failType, partialValidationActionType }\n) {\n  let response;\n\n  try {\n    response = await saveDraftWithUrlUpdate(draft, draftsService, failType);\n  } catch (error) {\n    dispatchFn({\n      type: failType,\n      payload: { errors: error.errors },\n    });\n    throw error;\n  }\n\n  const draftHasValidationErrors = !_isEmpty(response.errors);\n  const draftValidationErrorResponse = draftHasValidationErrors ? response : {};\n\n  const {\n    actions: { communityStateMustBeChecked, shouldDeleteReview, shouldUpdateReview },\n    selectedCommunity,\n  } = depositState.editorState;\n\n  if (communityStateMustBeChecked) {\n    const draftWithLinks = response.data;\n\n    if (shouldDeleteReview) {\n      // TODO handle global error here\n      await draftsService.deleteReview(draftWithLinks.links);\n    }\n    if (shouldUpdateReview) {\n      // TODO handle global error here\n      await draftsService.createOrUpdateReview(\n        draftWithLinks.links,\n        selectedCommunity.id\n      );\n    }\n\n    // fetch the draft after having changed the review request\n    // to have the `review` field updated\n    response = await draftsService.read(draftWithLinks.links);\n    dispatchFn({\n      type: DRAFT_FETCHED,\n      payload: { data: response.data },\n    });\n\n    // previously saved data should be overriden by the latest read draft\n    // Otherwise when the draft is partially saved, the community state will\n    // not be taken into account\n    draftValidationErrorResponse.data = {\n      ...draftValidationErrorResponse.data,\n      ...response.data,\n    };\n  }\n  // Throw validation errors from the partially saved draft\n  if (draftHasValidationErrors) {\n    dispatchFn({\n      type: partialValidationActionType,\n      payload: {\n        data: draftValidationErrorResponse.data,\n        errors: draftValidationErrorResponse.errors,\n      },\n    });\n    throw draftValidationErrorResponse;\n  }\n\n  return response;\n}\n\nexport const save = (draft) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DRAFT_SAVE_STARTED,\n    });\n    let response;\n\n    response = await _saveDraft(draft, config.service.drafts, {\n      depositState: getState().deposit,\n      dispatchFn: dispatch,\n      failType: DRAFT_SAVE_FAILED,\n      partialValidationActionType: DRAFT_HAS_VALIDATION_ERRORS,\n    });\n\n    dispatch({\n      type: DRAFT_SAVE_SUCCEEDED,\n      payload: { data: response.data },\n    });\n  };\n};\n\nexport const publish = (draft, { removeSelectedCommunity = false }) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DRAFT_PUBLISH_STARTED,\n    });\n\n    if (removeSelectedCommunity) {\n      // we set the community to null so we delete the associated review when\n      // saving the draft\n      await dispatch(changeSelectedCommunity(null));\n    }\n\n    const response = await _saveDraft(draft, config.service.drafts, {\n      depositState: getState().deposit,\n      dispatchFn: dispatch,\n      failType: DRAFT_PUBLISH_FAILED,\n      partialValidationActionType: DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS,\n    });\n\n    const draftWithLinks = response.data;\n    try {\n      const response = await config.service.drafts.publish(draftWithLinks.links);\n      // after publishing, redirect to the published record\n      const recordURL = response.data.links.self_html;\n      window.location.replace(recordURL);\n    } catch (error) {\n      dispatch({\n        type: DRAFT_PUBLISH_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\nexport const submitReview = (draft, { reviewComment, directPublish }) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DRAFT_SUBMIT_REVIEW_STARTED,\n      payload: {\n        reviewComment,\n      },\n      directPublish,\n    });\n\n    const response = await _saveDraft(draft, config.service.drafts, {\n      depositState: getState().deposit,\n      dispatchFn: dispatch,\n      failType: DRAFT_SUBMIT_REVIEW_FAILED,\n      partialValidationActionType: DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS,\n    });\n\n    const draftWithLinks = response.data;\n    try {\n      const reqResponse = await config.service.drafts.submitReview(\n        draftWithLinks.links,\n        reviewComment\n      );\n      const nextURL = reqResponse.data.links.next_html;\n      window.location.replace(nextURL);\n    } catch (error) {\n      dispatch({\n        type: DRAFT_SUBMIT_REVIEW_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\nexport const preview = (draft) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DRAFT_PREVIEW_STARTED,\n    });\n\n    const response = await _saveDraft(draft, config.service.drafts, {\n      depositState: getState().deposit,\n      dispatchFn: dispatch,\n      failType: DRAFT_PREVIEW_FAILED,\n      partialValidationActionType: DRAFT_HAS_VALIDATION_ERRORS,\n    });\n    const recordUrl = response.data.links.record_html;\n    // redirect to the preview page\n    window.location = `${recordUrl}?preview=1`;\n  };\n};\n\n/**\n * Returns the function that controls draft deletion.\n *\n * This function is different from the save/publish above because this thunk\n * is independent of form submission.\n */\nexport const delete_ = () => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DRAFT_DELETE_STARTED,\n    });\n\n    try {\n      const draft = getState().deposit.record;\n      await config.service.drafts.delete(draft.links);\n\n      // redirect to the the uploads page after deleting/discarding a draft\n      const redirectURL = \"/me/uploads\";\n      window.location.replace(redirectURL);\n    } catch (error) {\n      dispatch({\n        type: DRAFT_DELETE_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\n/**\n * Reserve the PID after having saved the current draft\n */\nexport const reservePID = (draft, { pidType }) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: RESERVE_PID_STARTED,\n      payload: { pidType: pidType },\n    });\n\n    try {\n      let response = await saveDraftWithUrlUpdate(draft, config.service.drafts);\n\n      const draftWithLinks = response.data;\n      response = await config.service.drafts.reservePID(draftWithLinks.links, pidType);\n\n      dispatch({\n        type: RESERVE_PID_SUCCEEDED,\n        payload: { data: response.data },\n      });\n    } catch (error) {\n      dispatch({\n        type: RESERVE_PID_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\n/**\n * Discard a previously reserved PID\n */\nexport const discardPID = (draft, { pidType }) => {\n  return async (dispatch, getState, config) => {\n    dispatch({\n      type: DISCARD_PID_STARTED,\n      payload: { pidType: pidType },\n    });\n\n    try {\n      let response = await saveDraftWithUrlUpdate(draft, config.service.drafts);\n\n      const draftWithLinks = response.data;\n      response = await config.service.drafts.discardPID(draftWithLinks.links, pidType);\n\n      dispatch({\n        type: DISCARD_PID_SUCCEEDED,\n        payload: { data: response.data },\n      });\n    } catch (error) {\n      dispatch({\n        type: DISCARD_PID_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\nexport const changeSelectedCommunity = (community) => {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_COMMUNITY,\n      payload: { community },\n    });\n  };\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  FILE_DELETED_SUCCESS,\n  FILE_DELETE_FAILED,\n  FILE_IMPORT_FAILED,\n  FILE_IMPORT_STARTED,\n  FILE_IMPORT_SUCCESS,\n  FILE_UPLOAD_ADDED,\n  FILE_UPLOAD_CANCELLED,\n  FILE_UPLOAD_FAILED,\n  FILE_UPLOAD_FINISHED,\n  FILE_UPLOAD_IN_PROGRESS,\n  FILE_UPLOAD_SAVE_DRAFT_FAILED,\n  FILE_UPLOAD_SET_CANCEL_FUNCTION,\n} from \"../types\";\n\nexport const UploadState = {\n  // initial: 'initial', // no file or the initial file selected\n  uploading: \"uploading\", // currently uploading a file from the UI\n  error: \"error\", // upload failed\n  finished: \"finished\", // upload finished (uploaded file is the field's current file)\n  pending: \"pending\", // files retrieved from the backend are in pending state\n};\n\nconst initialState = {};\n\nconst fileReducer = (state = initialState, action) => {\n  let newState;\n  // Filename needs to be normalised due to encoding differences between client and server.\n  const remoteFileName = action.payload?.filename?.normalize() ?? \"\";\n  switch (action.type) {\n    case FILE_UPLOAD_ADDED:\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [remoteFileName]: {\n            progressPercentage: 0,\n            name: remoteFileName,\n            size: 0,\n            status: UploadState.pending,\n            checksum: null,\n            links: null,\n            cancelUploadFn: null,\n          },\n        },\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_IN_PROGRESS:\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [remoteFileName]: {\n            ...state.entries[remoteFileName],\n            progressPercentage: action.payload.percent,\n            status: UploadState.uploading,\n          },\n        },\n        isFileUploadInProgress: true,\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_FINISHED:\n      newState = {\n        ...state,\n        entries: {\n          ...state.entries,\n          [remoteFileName]: {\n            ...state.entries[remoteFileName],\n            status: UploadState.finished,\n            size: action.payload.size,\n            progressPercentage: 100,\n            checksum: action.payload.checksum,\n            links: action.payload.links,\n            cancelUploadFn: null,\n          },\n        },\n      };\n      return {\n        ...newState,\n        isFileUploadInProgress: Object.values(newState.entries).some(\n          (value) => value.status === UploadState.uploading\n        ),\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_SAVE_DRAFT_FAILED:\n      return {\n        ...state,\n        errors: { ...action.payload.errors },\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_FAILED:\n      newState = {\n        ...state,\n        entries: {\n          ...state.entries,\n          [remoteFileName]: {\n            ...state.entries[remoteFileName],\n            status: UploadState.error,\n            cancelUploadFn: null,\n          },\n        },\n      };\n      return {\n        ...newState,\n        isFileUploadInProgress: Object.values(newState.entries).some(\n          (value) => value.status === UploadState.uploading\n        ),\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_SET_CANCEL_FUNCTION:\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [remoteFileName]: {\n            ...state.entries[remoteFileName],\n            cancelUploadFn: action.payload.cancelUploadFn,\n          },\n        },\n        actionState: action.type,\n      };\n    case FILE_UPLOAD_CANCELLED: {\n      // eslint-disable-next-line no-unused-vars\n      const { [remoteFileName]: cancelledFile, ...afterCancellationEntriesState } =\n        state.entries;\n      return {\n        ...state,\n        entries: {\n          ...afterCancellationEntriesState,\n        },\n        isFileUploadInProgress: Object.values(afterCancellationEntriesState).some(\n          (value) => value.status === UploadState.uploading\n        ),\n        actionState: action.type,\n      };\n    }\n    case FILE_DELETED_SUCCESS: {\n      // eslint-disable-next-line no-unused-vars\n      const { [remoteFileName]: deletedFile, ...afterDeletionEntriesState } =\n        state.entries;\n      return {\n        ...state,\n        entries: { ...afterDeletionEntriesState },\n        isFileUploadInProgress: Object.values(afterDeletionEntriesState).some(\n          (value) => value.status === UploadState.uploading\n        ),\n        actionState: action.type,\n      };\n    }\n    case FILE_DELETE_FAILED:\n      return {\n        ...state,\n        actionState: action.type,\n      };\n    case FILE_IMPORT_STARTED:\n      return {\n        ...state,\n        isFileImportInProgress: true,\n        actionState: action.type,\n      };\n    case FILE_IMPORT_SUCCESS:\n      return {\n        ...state,\n        entries: { ...action.payload.files },\n        isFileImportInProgress: false,\n        actionState: action.type,\n      };\n    case FILE_IMPORT_FAILED:\n      return {\n        ...state,\n        isFileImportInProgress: false,\n        actionState: action.type,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fileReducer;\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2024 CERN.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\nimport React, { useState } from \"react\";\nimport { http } from \"react-invenio-forms\";\nimport { Icon, Button, Popup } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\n\nexport const NewVersionButton = ({ onError, record, disabled, ...uiProps }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = async () => {\n    setLoading(true);\n\n    try {\n      const response = await http.post(record.links.versions);\n      window.location = response.data.links.self_html;\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n      onError(error.response.data.message);\n    }\n  };\n\n  return (\n    <Popup\n      content={i18next.t(\"You don't have permissions to create a new version.\")}\n      position=\"top center\"\n      disabled={!disabled}\n      trigger={\n        // Extra span needed since disabled buttons do not trigger hover events\n        <span>\n          <Button\n            type=\"button\"\n            positive\n            size=\"mini\"\n            onClick={handleClick}\n            loading={loading}\n            icon\n            labelPosition=\"left\"\n            disabled={disabled}\n            {...uiProps}\n          >\n            <Icon name=\"tag\" />\n            {i18next.t(\"New version\")}\n          </Button>\n        </span>\n      }\n    />\n  );\n};\n\nNewVersionButton.propTypes = {\n  onError: PropTypes.func.isRequired,\n  record: PropTypes.object.isRequired,\n  disabled: PropTypes.bool,\n};\n\nNewVersionButton.defaultProps = {\n  disabled: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2024 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021-2022 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { useFormikContext } from \"formik\";\nimport _get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport React, { Component, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  Header,\n  Icon,\n  Popup,\n  Progress,\n  Segment,\n  Table,\n} from \"semantic-ui-react\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\n\nconst FileTableHeader = ({ filesLocked }) => (\n  <Table.Header>\n    <Table.Row>\n      <Table.HeaderCell>\n        {i18next.t(\"Preview\")}{\" \"}\n        <Popup\n          content=\"Set the default preview\"\n          trigger={<Icon fitted name=\"help circle\" size=\"small\" />}\n        />\n      </Table.HeaderCell>\n      <Table.HeaderCell>{i18next.t(\"Filename\")}</Table.HeaderCell>\n      <Table.HeaderCell>{i18next.t(\"Size\")}</Table.HeaderCell>\n      {!filesLocked && (\n        <Table.HeaderCell textAlign=\"center\">{i18next.t(\"Progress\")}</Table.HeaderCell>\n      )}\n      {!filesLocked && <Table.HeaderCell />}\n    </Table.Row>\n  </Table.Header>\n);\n\nFileTableHeader.propTypes = {\n  filesLocked: PropTypes.bool,\n};\n\nFileTableHeader.defaultProps = {\n  filesLocked: false,\n};\n\nconst FileTableRow = ({\n  filesLocked,\n  file,\n  deleteFile,\n  defaultPreview,\n  setDefaultPreview,\n  decimalSizeDisplay,\n}) => {\n  const [isCancelling, setIsCancelling] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const isDefaultPreview = defaultPreview === file.name;\n\n  const handleDelete = async (file) => {\n    setIsDeleting(true);\n    try {\n      await deleteFile(file);\n      if (isDefaultPreview) {\n        setDefaultPreview(\"\");\n      }\n    } catch (error) {\n      setIsDeleting(false);\n      console.error(error);\n    }\n  };\n\n  const handleCancelUpload = (file) => {\n    setIsCancelling(true);\n    file.cancelUploadFn();\n  };\n\n  return (\n    <Table.Row key={file.name}>\n      <Table.Cell data-label={i18next.t(\"Default preview\")} width={2}>\n        {/* TODO: Investigate if react-deposit-forms optimized Checkbox field\n                  would be more performant */}\n        <Checkbox\n          checked={isDefaultPreview}\n          onChange={() => setDefaultPreview(isDefaultPreview ? \"\" : file.name)}\n        />\n      </Table.Cell>\n      <Table.Cell data-label={i18next.t(\"Filename\")} width={10}>\n        <div>\n          {file.uploadState.isPending ? (\n            <div>{file.name}</div>\n          ) : (\n            <a\n              href={_get(file, \"links.content\", \"\")}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"mr-5\"\n            >\n              {file.name}\n            </a>\n          )}\n          <br />\n          {file.checksum && (\n            <div className=\"ui text-muted\">\n              <span style={{ fontSize: \"10px\" }}>{file.checksum}</span>{\" \"}\n              <Popup\n                content={i18next.t(\n                  \"This is the file fingerprint (MD5 checksum), which can be used to verify the file integrity.\"\n                )}\n                trigger={<Icon fitted name=\"help circle\" size=\"small\" />}\n                position=\"top center\"\n              />\n            </div>\n          )}\n        </div>\n      </Table.Cell>\n      <Table.Cell data-label={i18next.t(\"Size\")} width={2}>\n        {file.size ? humanReadableBytes(file.size, decimalSizeDisplay) : \"\"}\n      </Table.Cell>\n      {!filesLocked && (\n        <Table.Cell\n          className=\"file-upload-pending\"\n          data-label={i18next.t(\"Progress\")}\n          width={2}\n        >\n          {!file.uploadState?.isPending && (\n            <Progress\n              className=\"file-upload-progress primary\"\n              percent={file.progressPercentage}\n              error={file.uploadState.isFailed}\n              size=\"medium\"\n              progress\n              autoSuccess\n              active\n            />\n          )}\n          {file.uploadState?.isPending && <span>{i18next.t(\"Pending\")}</span>}\n        </Table.Cell>\n      )}\n      {!filesLocked && (\n        <Table.Cell textAlign=\"right\" width={2}>\n          {(file.uploadState?.isFinished ||\n            file.uploadState?.isFailed ||\n            file.uploadState?.isPending) &&\n            (isDeleting ? (\n              <Icon loading name=\"spinner\" />\n            ) : (\n              <Icon\n                link\n                className=\"action primary\"\n                name=\"trash alternate outline\"\n                disabled={isDeleting}\n                onClick={() => handleDelete(file)}\n                aria-label={i18next.t(\"Delete file\")}\n                title={i18next.t(\"Delete file\")}\n              />\n            ))}\n          {file.uploadState?.isUploading && (\n            <Button\n              compact\n              type=\"button\"\n              negative\n              size=\"tiny\"\n              disabled={isCancelling}\n              onClick={() => handleCancelUpload(file)}\n            >\n              {isCancelling ? <Icon loading name=\"spinner\" /> : i18next.t(\"Cancel\")}\n            </Button>\n          )}\n        </Table.Cell>\n      )}\n    </Table.Row>\n  );\n};\n\nFileTableRow.propTypes = {\n  filesLocked: PropTypes.bool,\n  file: PropTypes.object,\n  deleteFile: PropTypes.func.isRequired,\n  defaultPreview: PropTypes.string,\n  setDefaultPreview: PropTypes.func.isRequired,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFileTableRow.defaultProps = {\n  filesLocked: false,\n  file: undefined,\n  defaultPreview: undefined,\n  decimalSizeDisplay: false,\n};\n\nconst FileUploadBox = ({\n  filesLocked,\n  filesList,\n  dragText,\n  uploadButtonIcon,\n  uploadButtonText,\n  openFileDialog,\n}) =>\n  !filesLocked && (\n    <Segment\n      basic\n      padded=\"very\"\n      className={filesList.length ? \"file-upload-area\" : \"file-upload-area no-files\"}\n    >\n      <Grid columns={3} textAlign=\"center\">\n        <Grid.Row verticalAlign=\"middle\">\n          <Grid.Column mobile={16} tablet={7} computer={7}>\n            <Header size=\"small\">{dragText}</Header>\n          </Grid.Column>\n\n          <Grid.Column className=\"mt-10 mb-10\" mobile={16} tablet={2} computer={2}>\n            - {i18next.t(\"or\")} -\n          </Grid.Column>\n\n          <Grid.Column mobile={16} tablet={7} computer={7}>\n            <Button\n              type=\"button\"\n              primary\n              labelPosition=\"left\"\n              icon={uploadButtonIcon}\n              content={uploadButtonText}\n              onClick={() => openFileDialog()}\n              disabled={openFileDialog === null}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n\nFileUploadBox.propTypes = {\n  filesLocked: PropTypes.bool.isRequired,\n  filesList: PropTypes.array,\n  dragText: PropTypes.string,\n  uploadButtonIcon: PropTypes.node,\n  uploadButtonText: PropTypes.string,\n  openFileDialog: PropTypes.func,\n};\n\nFileUploadBox.defaultProps = {\n  filesList: undefined,\n  dragText: undefined,\n  uploadButtonIcon: undefined,\n  uploadButtonText: undefined,\n  openFileDialog: null,\n};\n\nconst FilesListTable = ({ filesLocked, filesList, deleteFile, decimalSizeDisplay }) => {\n  const { setFieldValue, values: formikDraft } = useFormikContext();\n  const defaultPreview = _get(formikDraft, \"files.default_preview\", \"\");\n  return (\n    <Table>\n      <FileTableHeader filesLocked={filesLocked} />\n      <Table.Body>\n        {filesList.map((file) => {\n          return (\n            <FileTableRow\n              key={file.name}\n              filesLocked={filesLocked}\n              file={file}\n              deleteFile={deleteFile}\n              defaultPreview={defaultPreview}\n              setDefaultPreview={(filename) =>\n                setFieldValue(\"files.default_preview\", filename)\n              }\n              decimalSizeDisplay={decimalSizeDisplay}\n            />\n          );\n        })}\n      </Table.Body>\n    </Table>\n  );\n};\n\nFilesListTable.propTypes = {\n  filesLocked: PropTypes.bool,\n  filesList: PropTypes.array,\n  deleteFile: PropTypes.func,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFilesListTable.defaultProps = {\n  filesLocked: undefined,\n  filesList: undefined,\n  deleteFile: undefined,\n  decimalSizeDisplay: undefined,\n};\n\nexport class FileUploaderArea extends Component {\n  render() {\n    const { filesEnabled, dropzoneParams, filesList } = this.props;\n    return filesEnabled ? (\n      <Dropzone {...dropzoneParams}>\n        {({ getRootProps, getInputProps, open: openFileDialog }) => (\n          <Grid.Column width={16}>\n            <span {...getRootProps()}>\n              <input {...getInputProps()} />\n              {filesList.length !== 0 && (\n                <Grid.Column verticalAlign=\"middle\">\n                  <FilesListTable {...this.props} />\n                </Grid.Column>\n              )}\n              <FileUploadBox {...this.props} openFileDialog={openFileDialog} />\n            </span>\n          </Grid.Column>\n        )}\n      </Dropzone>\n    ) : (\n      <Grid.Column width={16}>\n        <Segment basic padded=\"very\" className=\"file-upload-area no-files\">\n          <Grid textAlign=\"center\">\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                <Header size=\"medium\">\n                  {i18next.t(\"This is a Metadata-only record.\")}\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Grid.Column>\n    );\n  }\n}\n\nFileUploaderArea.propTypes = {\n  deleteFile: PropTypes.func,\n  dragText: PropTypes.string,\n  dropzoneParams: PropTypes.object,\n  filesEnabled: PropTypes.bool.isRequired,\n  filesList: PropTypes.array,\n  filesLocked: PropTypes.bool,\n  links: PropTypes.object,\n  setDefaultPreviewFile: PropTypes.func,\n  uploadButtonIcon: PropTypes.string,\n  uploadButtonText: PropTypes.string,\n  decimalSizeDisplay: PropTypes.bool,\n};\n\nFileUploaderArea.defaultProps = {\n  deleteFile: undefined,\n  dragText: undefined,\n  dropzoneParams: undefined,\n  filesList: undefined,\n  filesLocked: false,\n  links: undefined,\n  setDefaultPreviewFile: undefined,\n  uploadButtonIcon: undefined,\n  uploadButtonText: undefined,\n  decimalSizeDisplay: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2021 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\nimport { Header, Checkbox, Grid, Icon, Label, List, Popup } from \"semantic-ui-react\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\n\n// NOTE: This component has to be a function component to allow\n//       the `useFormikContext` hook.\nexport const FileUploaderToolbar = (props) => {\n  const {\n    filesList,\n    filesSize,\n    filesEnabled,\n    showMetadataOnlyToggle,\n    quota,\n    decimalSizeDisplay,\n  } = props;\n  const { setFieldValue } = useFormikContext();\n\n  const handleOnChangeMetadataOnly = () => {\n    setFieldValue(\"files.enabled\", !filesEnabled);\n    setFieldValue(\"access.files\", \"public\");\n  };\n\n  return (\n    <Overridable\n      id=\"ReactInvenioDeposit.FileUploaderToolbar.layout\"\n      filesList={filesList}\n      filesSize={filesSize}\n      filesEnabled={filesEnabled}\n      showMetadataOnlyToggle={showMetadataOnlyToggle}\n      quota={quota}\n      decimalSizeDisplay={decimalSizeDisplay}\n      handleOnChangeMetadataOnly={handleOnChangeMetadataOnly}\n    >\n      <>\n        <Grid.Column\n          verticalAlign=\"middle\"\n          floated=\"left\"\n          mobile={16}\n          tablet={6}\n          computer={6}\n        >\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploaderToolbar.MetadataOnlyToggle.container\"\n            filesList={filesList}\n            filesEnabled={filesEnabled}\n            showMetadataOnlyToggle={showMetadataOnlyToggle}\n            handleOnChangeMetadataOnly={handleOnChangeMetadataOnly}\n          >\n            {showMetadataOnlyToggle && (\n              <List horizontal>\n                <List.Item>\n                  <Checkbox\n                    label={i18next.t(\"Metadata-only record\")}\n                    onChange={handleOnChangeMetadataOnly}\n                    disabled={filesList.length > 0}\n                    checked={!filesEnabled}\n                  />\n                </List.Item>\n                <List.Item>\n                  <Popup\n                    trigger={\n                      <Icon name=\"question circle outline\" className=\"neutral\" />\n                    }\n                    content={i18next.t(\"Disable files for this record\")}\n                    position=\"top center\"\n                  />\n                </List.Item>\n              </List>\n            )}\n          </Overridable>\n        </Grid.Column>\n        <Overridable\n          id=\"ReactInvenioDeposit.FileUploaderToolbar.FileList.container\"\n          filesList={filesList}\n          filesSize={filesSize}\n          filesEnabled={filesEnabled}\n          quota={quota}\n          decimalSizeDisplay={decimalSizeDisplay}\n        >\n          {filesEnabled && (\n            <Grid.Column mobile={16} tablet={10} computer={10} className=\"storage-col\">\n              <Header size=\"tiny\" className=\"mr-10\">\n                {i18next.t(\"Storage available\")}\n              </Header>\n              <List horizontal floated=\"right\">\n                <List.Item>\n                  <Label\n                    {...(filesList.length === quota.maxFiles ? { color: \"blue\" } : {})}\n                  >\n                    {i18next.t(`{{length}} out of {{maxfiles}} files`, {\n                      length: filesList.length,\n                      maxfiles: quota.maxFiles,\n                    })}\n                  </Label>\n                </List.Item>\n                <List.Item>\n                  <Label\n                    {...(humanReadableBytes(filesSize, decimalSizeDisplay) ===\n                    humanReadableBytes(quota.maxStorage, decimalSizeDisplay)\n                      ? { color: \"blue\" }\n                      : {})}\n                  >\n                    {humanReadableBytes(filesSize, decimalSizeDisplay)}{\" \"}\n                    {i18next.t(\"out of\")}{\" \"}\n                    {humanReadableBytes(quota.maxStorage, decimalSizeDisplay)}\n                  </Label>\n                </List.Item>\n              </List>\n            </Grid.Column>\n          )}\n        </Overridable>\n      </>\n    </Overridable>\n  );\n};\n\nFileUploaderToolbar.propTypes = {\n  filesList: PropTypes.array,\n  filesSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  filesEnabled: PropTypes.bool.isRequired,\n  quota: PropTypes.object,\n  decimalSizeDisplay: PropTypes.bool,\n  showMetadataOnlyToggle: PropTypes.bool,\n};\n\nFileUploaderToolbar.defaultProps = {\n  filesList: undefined,\n  filesSize: undefined,\n  quota: undefined,\n  decimalSizeDisplay: false,\n  showMetadataOnlyToggle: true,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C)      2022 Graz University of Technology.\n// Copyright (C)      2022 TU Wien.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { useFormikContext } from \"formik\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _map from \"lodash/map\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Icon, Message, Modal } from \"semantic-ui-react\";\nimport { UploadState } from \"../../state/reducers/files\";\nimport { NewVersionButton } from \"../../controls/NewVersionButton\";\nimport { FileUploaderArea } from \"./FileUploaderArea\";\nimport { FileUploaderToolbar } from \"./FileUploaderToolbar\";\nimport { humanReadableBytes } from \"react-invenio-forms\";\nimport Overridable from \"react-overridable\";\n\n// NOTE: This component has to be a function component to allow\n//       the `useFormikContext` hook.\nexport const FileUploaderComponent = ({\n  config,\n  files,\n  isDraftRecord,\n  hasParentRecord,\n  quota,\n  permissions,\n  record,\n  uploadFiles,\n  deleteFile,\n  importParentFiles,\n  importButtonIcon,\n  importButtonText,\n  isFileImportInProgress,\n  decimalSizeDisplay,\n  filesLocked,\n  ...uiProps\n}) => {\n  // We extract the working copy of the draft stored as `values` in formik\n  const { values: formikDraft } = useFormikContext();\n  const filesEnabled = _get(formikDraft, \"files.enabled\", false);\n  const [warningMsg, setWarningMsg] = useState();\n  const lockFileUploader = !isDraftRecord && filesLocked;\n\n  const filesList = Object.values(files).map((fileState) => {\n    return {\n      name: fileState.name,\n      size: fileState.size,\n      checksum: fileState.checksum,\n      links: fileState.links,\n      uploadState: {\n        // initial: fileState.status === UploadState.initial,\n        isFailed: fileState.status === UploadState.error,\n        isUploading: fileState.status === UploadState.uploading,\n        isFinished: fileState.status === UploadState.finished,\n        isPending: fileState.status === UploadState.pending,\n      },\n      progressPercentage: fileState.progressPercentage,\n      cancelUploadFn: fileState.cancelUploadFn,\n    };\n  });\n\n  const filesSize = filesList.reduce((totalSize, file) => (totalSize += file.size), 0);\n\n  const dropzoneParams = {\n    preventDropOnDocument: true,\n    onDropAccepted: (acceptedFiles) => {\n      const maxFileNumberReached =\n        filesList.length + acceptedFiles.length > quota.maxFiles;\n      const acceptedFilesSize = acceptedFiles.reduce(\n        (totalSize, file) => (totalSize += file.size),\n        0\n      );\n      const maxFileStorageReached = filesSize + acceptedFilesSize > quota.maxStorage;\n\n      const filesNames = _map(filesList, \"name\");\n      const duplicateFiles = acceptedFiles.filter((acceptedFile) =>\n        filesNames.includes(acceptedFile.name)\n      );\n\n      if (maxFileNumberReached) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header=\"Could not upload files.\"\n              content={`Uploading the selected files would result in ${\n                filesList.length + acceptedFiles.length\n              } files (max.${quota.maxFiles})`}\n            />\n          </div>\n        );\n      } else if (maxFileStorageReached) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header=\"Could not upload files.\"\n              content={\n                <>\n                  {i18next.t(\"Uploading the selected files would result in\")}{\" \"}\n                  {humanReadableBytes(\n                    filesSize + acceptedFilesSize,\n                    decimalSizeDisplay\n                  )}\n                  {i18next.t(\"but the limit is\")}\n                  {humanReadableBytes(quota.maxStorage, decimalSizeDisplay)}.\n                </>\n              }\n            />\n          </div>\n        );\n      } else if (!_isEmpty(duplicateFiles)) {\n        setWarningMsg(\n          <div className=\"content\">\n            <Message\n              warning\n              icon=\"warning circle\"\n              header={i18next.t(`The following files already exist`)}\n              list={_map(duplicateFiles, \"name\")}\n            />\n          </div>\n        );\n      } else {\n        uploadFiles(formikDraft, acceptedFiles);\n      }\n    },\n    multiple: true,\n    noClick: true,\n    noKeyboard: true,\n    disabled: false,\n  };\n\n  const filesLeft = filesList.length < quota.maxFiles;\n  if (!filesLeft) {\n    dropzoneParams[\"disabled\"] = true;\n  }\n\n  const displayImportBtn =\n    filesEnabled && isDraftRecord && hasParentRecord && !filesList.length;\n  return (\n    <Overridable\n      id=\"ReactInvenioDeposit.FileUploader.layout\"\n      config={config}\n      files={files}\n      isDraftRecord={isDraftRecord}\n      hasParentRecord={hasParentRecord}\n      quota={quota}\n      permissions={permissions}\n      record={record}\n      uploadFiles={uploadFiles}\n      deleteFile={deleteFile}\n      importParentFiles={importParentFiles}\n      importButtonIcon={importButtonIcon}\n      importButtonText={importButtonText}\n      isFileImportInProgress={isFileImportInProgress}\n      decimalSizeDisplay={decimalSizeDisplay}\n      filesEnabled={filesEnabled}\n      filesList={filesList}\n      displayImportBtn={displayImportBtn}\n      filesSize={filesSize}\n      dropzoneParams={dropzoneParams}\n      warningMsg={warningMsg}\n      setWarningMsg={setWarningMsg}\n      filesLocked={lockFileUploader}\n      {...uiProps}\n    >\n      <>\n        <Grid className=\"file-uploader\">\n          <Grid.Row className=\"pt-10 pb-5\">\n            {!lockFileUploader && (\n              <FileUploaderToolbar\n                {...uiProps}\n                config={config}\n                filesEnabled={filesEnabled}\n                filesList={filesList}\n                filesSize={filesSize}\n                quota={quota}\n                decimalSizeDisplay={decimalSizeDisplay}\n              />\n            )}\n          </Grid.Row>\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.ImportButton.container\"\n            importButtonIcon={importButtonIcon}\n            importButtonText={importButtonText}\n            importParentFiles={importParentFiles}\n            isFileImportInProgress={isFileImportInProgress}\n            displayImportBtn={displayImportBtn}\n            {...uiProps}\n          >\n            {displayImportBtn && (\n              <Grid.Row className=\"pb-5 pt-5\">\n                <Grid.Column width={16}>\n                  <Message visible info>\n                    <div className=\"right-floated display-inline-block\">\n                      <Button\n                        type=\"button\"\n                        size=\"mini\"\n                        primary\n                        icon={importButtonIcon}\n                        content={importButtonText}\n                        onClick={() => importParentFiles()}\n                        disabled={isFileImportInProgress}\n                        loading={isFileImportInProgress}\n                      />\n                    </div>\n                    <p className=\"display-inline-block mt-5\">\n                      <Icon name=\"info circle\" />\n                      {i18next.t(\"You can import files from the previous version.\")}\n                    </p>\n                  </Message>\n                </Grid.Column>\n              </Grid.Row>\n            )}\n          </Overridable>\n\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.FileUploaderArea.container\"\n            filesList={filesList}\n            dropzoneParams={dropzoneParams}\n            filesLocked={lockFileUploader}\n            filesEnabled={filesEnabled}\n            deleteFile={deleteFile}\n            decimalSizeDisplay={decimalSizeDisplay}\n            {...uiProps}\n          >\n            {filesEnabled && (\n              <Grid.Row className=\"pt-0 pb-0\">\n                <FileUploaderArea\n                  {...uiProps}\n                  filesList={filesList}\n                  dropzoneParams={dropzoneParams}\n                  filesLocked={lockFileUploader}\n                  filesEnabled={filesEnabled}\n                  deleteFile={deleteFile}\n                  decimalSizeDisplay={decimalSizeDisplay}\n                />\n              </Grid.Row>\n            )}\n          </Overridable>\n\n          <Overridable\n            id=\"ReactInvenioDeposit.FileUploader.NewVersionButton.container\"\n            isDraftRecord={isDraftRecord}\n            draft={formikDraft}\n            filesLocked={lockFileUploader}\n            permissions={permissions}\n            record={record}\n            {...uiProps}\n          >\n            {isDraftRecord ? (\n              <Grid.Row className=\"file-upload-note pt-5\">\n                <Grid.Column width={16}>\n                  <Message visible warning>\n                    <p>\n                      <Icon name=\"warning sign\" />\n                      {i18next.t(\n                        \"File addition, removal or modification are not allowed after you have published your upload.\"\n                      )}\n                    </p>\n                  </Message>\n                </Grid.Column>\n              </Grid.Row>\n            ) : (\n              filesLocked && (\n                <Grid.Row className=\"file-upload-note pt-5\">\n                  <Grid.Column width={16}>\n                    <Message info>\n                      <NewVersionButton\n                        record={record}\n                        onError={() => {}}\n                        className=\"right-floated\"\n                        disabled={!permissions.can_new_version}\n                      />\n                      <p className=\"mt-5 display-inline-block\">\n                        <Icon name=\"info circle\" size=\"large\" />\n                        {i18next.t(\n                          \"You must create a new version to add, modify or delete files.\"\n                        )}\n                      </p>\n                    </Message>\n                  </Grid.Column>\n                </Grid.Row>\n              )\n            )}\n          </Overridable>\n        </Grid>\n        <Overridable\n          id=\"ReactInvenioDeposit.FileUploader.Modal.container\"\n          warningMsg={warningMsg}\n          setWarningMsg={setWarningMsg}\n          {...uiProps}\n        >\n          <Modal\n            open={!!warningMsg}\n            header=\"Warning!\"\n            content={warningMsg}\n            onClose={() => setWarningMsg()}\n            closeIcon\n          />\n        </Overridable>\n      </>\n    </Overridable>\n  );\n};\n\nconst fileDetailsShape = PropTypes.objectOf(\n  PropTypes.shape({\n    name: PropTypes.string,\n    size: PropTypes.number,\n    progressPercentage: PropTypes.number,\n    checksum: PropTypes.string,\n    links: PropTypes.object,\n    cancelUploadFn: PropTypes.func,\n    state: PropTypes.oneOf(Object.values(UploadState)),\n    enabled: PropTypes.bool,\n  })\n);\n\nFileUploaderComponent.propTypes = {\n  config: PropTypes.object,\n  dragText: PropTypes.string,\n  files: fileDetailsShape,\n  isDraftRecord: PropTypes.bool,\n  hasParentRecord: PropTypes.bool,\n  quota: PropTypes.shape({\n    maxStorage: PropTypes.number,\n    maxFiles: PropTypes.number,\n  }),\n  record: PropTypes.object,\n  uploadButtonIcon: PropTypes.string,\n  uploadButtonText: PropTypes.string,\n  importButtonIcon: PropTypes.string,\n  importButtonText: PropTypes.string,\n  isFileImportInProgress: PropTypes.bool,\n  importParentFiles: PropTypes.func.isRequired,\n  uploadFiles: PropTypes.func.isRequired,\n  deleteFile: PropTypes.func.isRequired,\n  decimalSizeDisplay: PropTypes.bool,\n  filesLocked: PropTypes.bool,\n  permissions: PropTypes.object,\n};\n\nFileUploaderComponent.defaultProps = {\n  permissions: undefined,\n  config: undefined,\n  files: undefined,\n  record: undefined,\n  isFileImportInProgress: false,\n  dragText: i18next.t(\"Drag and drop files\"),\n  isDraftRecord: true,\n  hasParentRecord: false,\n  quota: {\n    maxFiles: 5,\n    maxStorage: 10 ** 10,\n  },\n  uploadButtonIcon: \"upload\",\n  uploadButtonText: i18next.t(\"Upload files\"),\n  importButtonIcon: \"sync\",\n  importButtonText: i18next.t(\"Import files\"),\n  decimalSizeDisplay: true,\n  filesLocked: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { connect } from \"react-redux\";\nimport { deleteFile, importParentFiles, uploadFiles } from \"../../state/actions\";\nimport { FileUploaderComponent } from \"./FileUploader\";\n\nconst mapStateToProps = (state) => {\n  const { links, entries } = state.files;\n  return {\n    files: entries,\n    links,\n    record: state.deposit.record,\n    config: state.deposit.config,\n    permissions: state.deposit.permissions,\n    isFileImportInProgress: state.files.isFileImportInProgress,\n    hasParentRecord: Boolean(\n      state.deposit.record?.versions?.index && state.deposit.record?.versions?.index > 1\n    ),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  uploadFiles: (draft, files) => dispatch(uploadFiles(draft, files)),\n  importParentFiles: () => dispatch(importParentFiles()),\n  deleteFile: (file) => dispatch(deleteFile(file)),\n});\n\nexport const FileUploader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FileUploaderComponent);\n\nexport { FileUploaderArea } from \"./FileUploaderArea\";\nexport { FileUploaderToolbar } from \"./FileUploaderToolbar\";\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  DRAFT_FETCHED,\n  FILE_DELETED_SUCCESS,\n  FILE_DELETE_FAILED,\n  FILE_IMPORT_FAILED,\n  FILE_IMPORT_STARTED,\n  FILE_IMPORT_SUCCESS,\n  FILE_UPLOAD_SAVE_DRAFT_FAILED,\n} from \"../types\";\nimport { saveDraftWithUrlUpdate } from \"./deposit\";\n\nexport const uploadFiles = (draft, files) => {\n  return async (dispatch, _, config) => {\n    let response;\n    try {\n      response = await saveDraftWithUrlUpdate(draft, config.service.drafts);\n      // update state with created draft\n      dispatch({\n        type: DRAFT_FETCHED,\n        payload: { data: response.data },\n      });\n\n      // upload files\n      const uploadFileUrl = response.data.links.files;\n      for (const file of files) {\n        config.service.files.upload(uploadFileUrl, file);\n      }\n    } catch (error) {\n      dispatch({\n        type: FILE_UPLOAD_SAVE_DRAFT_FAILED,\n        payload: { errors: error.errors },\n      });\n      throw error;\n    }\n  };\n};\n\nexport const deleteFile = (file) => {\n  return async (dispatch, _, config) => {\n    try {\n      const fileLinks = file.links;\n      await config.service.files.delete(fileLinks);\n\n      dispatch({\n        type: FILE_DELETED_SUCCESS,\n        payload: {\n          filename: file.name,\n        },\n      });\n    } catch (error) {\n      if (error.response.status === 404 && file.uploadState?.isPending) {\n        // pending file was removed from the backend thus we can remove it from the state\n        dispatch({\n          type: FILE_DELETED_SUCCESS,\n          payload: {\n            filename: file.name,\n          },\n        });\n      } else {\n        dispatch({ type: FILE_DELETE_FAILED });\n        throw error;\n      }\n    }\n  };\n};\n\nexport const importParentFiles = () => {\n  return async (dispatch, getState, config) => {\n    const draft = getState().deposit.record;\n    if (!draft.id) return;\n\n    dispatch({ type: FILE_IMPORT_STARTED });\n\n    try {\n      const draftLinks = draft.links;\n      const files = await config.service.files.importParentRecordFiles(draftLinks);\n      dispatch({\n        type: FILE_IMPORT_SUCCESS,\n        payload: { files: files },\n      });\n    } catch (error) {\n      dispatch({ type: FILE_IMPORT_FAILED });\n      throw error;\n    }\n  };\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const emptyIdentifier = {\n  scheme: \"\",\n  identifier: \"\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  ArrayField,\n  FieldLabel,\n  GroupField,\n  SelectField,\n  TextField,\n} from \"react-invenio-forms\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { emptyIdentifier } from \"./initialValues\";\n\n/** Identifiers array component */\nexport class IdentifiersField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, required, schemeOptions, showEmptyValue } =\n      this.props;\n    return (\n      <ArrayField\n        addButtonLabel={i18next.t(\"Add identifier\")}\n        defaultNewValue={emptyIdentifier}\n        fieldPath={fieldPath}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        required={required}\n        showEmptyValue={showEmptyValue}\n      >\n        {({ arrayHelpers, indexPath }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n          return (\n            <GroupField>\n              <TextField\n                fieldPath={`${fieldPathPrefix}.identifier`}\n                label={i18next.t(\"Identifier\")}\n                required\n                width={11}\n              />\n              {schemeOptions && (\n                <SelectField\n                  fieldPath={`${fieldPathPrefix}.scheme`}\n                  label={i18next.t(\"Scheme\")}\n                  aria-label={i18next.t(\"Scheme\")}\n                  options={schemeOptions}\n                  optimized\n                  required\n                  width={5}\n                />\n              )}\n              {!schemeOptions && (\n                <TextField\n                  fieldPath={`${fieldPathPrefix}.scheme`}\n                  label={i18next.t(\"Scheme\")}\n                  aria-label={i18next.t(\"Scheme\")}\n                  required\n                  width={5}\n                />\n              )}\n              <Form.Field>\n                <Button\n                  aria-label={i18next.t(\"Remove field\")}\n                  className=\"close-btn\"\n                  icon=\"close\"\n                  onClick={() => arrayHelpers.remove(indexPath)}\n                />\n              </Form.Field>\n            </GroupField>\n          );\n        }}\n      </ArrayField>\n    );\n  }\n}\n\nIdentifiersField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  schemeOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  showEmptyValue: PropTypes.bool,\n};\n\nIdentifiersField.defaultProps = {\n  label: i18next.t(\"Identifiers\"),\n  labelIcon: \"barcode\",\n  required: false,\n  schemeOptions: undefined,\n  showEmptyValue: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\n\nexport const DepositFormSubmitActions = {\n  SAVE: \"SAVE\",\n  PUBLISH: \"PUBLISH\",\n  PUBLISH_WITHOUT_COMMUNITY: \"PUBLISH_WITHOUT_COMMUNITY\",\n  PREVIEW: \"PREVIEW\",\n  DELETE: \"DELETE\",\n  RESERVE_PID: \"RESERVE_PID\",\n  DISCARD_PID: \"DISCARD_PID\",\n  SUBMIT_REVIEW: \"SUBMIT_REVIEW\",\n};\n\n/**\n * The current version of Formik does not allow to pass a context/arg to the submit action.\n * The assumption is that there must be only one Submit button in a form.\n * As a workaround, each submit button (Save, Publish, etc...) will:\n * 1. call `setSubmitContext` with the action name as first param (mandatory) and any extra context, if needed.\n * 2. call `formik.handleSubmit` to trigger the action.\n *\n * This might be fixed in future versions of Formik. See:\n * - https://github.com/jaredpalmer/formik/issues/214\n * - https://github.com/jaredpalmer/formik/issues/1792\n */\nexport const DepositFormSubmitContext = React.createContext({\n  setSubmitContext: undefined,\n});\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { FastField, Field, getIn } from \"formik\";\nimport _debounce from \"lodash/debounce\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { connect } from \"react-redux\";\nimport { Form, Popup, Radio } from \"semantic-ui-react\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DISCARD_PID_STARTED, RESERVE_PID_STARTED } from \"../../state/types\";\n\nconst PROVIDER_EXTERNAL = \"external\";\nconst UPDATE_PID_DEBOUNCE_MS = 200;\n\nconst getFieldErrors = (form, fieldPath) => {\n  return (\n    getIn(form.errors, fieldPath, null) || getIn(form.initialErrors, fieldPath, null)\n  );\n};\n\n/**\n * Button component to reserve a PID.\n */\nclass ReservePIDBtn extends Component {\n  render() {\n    const { disabled, handleReservePID, label, loading } = this.props;\n    return (\n      <Field>\n        {({ form: formik }) => (\n          <Form.Button\n            className=\"positive\"\n            size=\"mini\"\n            loading={loading}\n            disabled={disabled || loading}\n            onClick={(e) => handleReservePID(e, formik)}\n            content={label}\n          />\n        )}\n      </Field>\n    );\n  }\n}\n\nReservePIDBtn.propTypes = {\n  disabled: PropTypes.bool,\n  handleReservePID: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n};\n\nReservePIDBtn.defaultProps = {\n  disabled: false,\n  loading: false,\n};\n\n/**\n * Button component to unreserve a PID.\n */\nclass UnreservePIDBtn extends Component {\n  render() {\n    const { disabled, handleDiscardPID, label, loading } = this.props;\n    return (\n      <Popup\n        content={label}\n        trigger={\n          <Field>\n            {({ form: formik }) => (\n              <Form.Button\n                disabled={disabled || loading}\n                loading={loading}\n                icon=\"close\"\n                onClick={(e) => handleDiscardPID(e, formik)}\n                size=\"mini\"\n              />\n            )}\n          </Field>\n        }\n      />\n    );\n  }\n}\n\nUnreservePIDBtn.propTypes = {\n  disabled: PropTypes.bool,\n  handleDiscardPID: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n};\n\nUnreservePIDBtn.defaultProps = {\n  disabled: false,\n  loading: false,\n};\n\n/**\n * Manage radio buttons choices between managed\n * and unmanaged PID.\n */\nclass ManagedUnmanagedSwitch extends Component {\n  handleChange = (e, { value }) => {\n    const { onManagedUnmanagedChange } = this.props;\n    const isManagedSelected = value === \"managed\";\n    onManagedUnmanagedChange(isManagedSelected);\n  };\n\n  render() {\n    const { disabled, isManagedSelected, pidLabel } = this.props;\n\n    return (\n      <Form.Group inline>\n        <Form.Field>\n          {i18next.t(\"Do you already have a {{pidLabel}} for this upload?\", {\n            pidLabel: pidLabel,\n          })}\n        </Form.Field>\n        <Form.Field width={2}>\n          <Radio\n            label={i18next.t(\"Yes\")}\n            aria-label={i18next.t(\"Yes\")}\n            name=\"radioGroup\"\n            value=\"unmanaged\"\n            disabled={disabled}\n            checked={!isManagedSelected}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n        <Form.Field width={2}>\n          <Radio\n            label={i18next.t(\"No\")}\n            aria-label={i18next.t(\"No\")}\n            name=\"radioGroup\"\n            value=\"managed\"\n            disabled={disabled}\n            checked={isManagedSelected}\n            onChange={this.handleChange}\n          />\n        </Form.Field>\n      </Form.Group>\n    );\n  }\n}\n\nManagedUnmanagedSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  isManagedSelected: PropTypes.bool.isRequired,\n  onManagedUnmanagedChange: PropTypes.func.isRequired,\n  pidLabel: PropTypes.string,\n};\n\nManagedUnmanagedSwitch.defaultProps = {\n  disabled: false,\n  pidLabel: undefined,\n};\n\n/**\n * Render identifier field and reserve/unreserve\n * button components for managed PID.\n */\nclass ManagedIdentifierComponent extends Component {\n  static contextType = DepositFormSubmitContext;\n\n  handleReservePID = (event, formik) => {\n    const { pidType } = this.props;\n    const { setSubmitContext } = this.context;\n    setSubmitContext(DepositFormSubmitActions.RESERVE_PID, {\n      pidType: pidType,\n    });\n    formik.handleSubmit(event);\n  };\n\n  handleDiscardPID = (event, formik) => {\n    const { pidType } = this.props;\n    const { setSubmitContext } = this.context;\n    setSubmitContext(DepositFormSubmitActions.DISCARD_PID, {\n      pidType: pidType,\n    });\n    formik.handleSubmit(event);\n  };\n\n  render() {\n    const {\n      actionState,\n      actionStateExtra,\n      btnLabelDiscardPID,\n      btnLabelGetPID,\n      disabled,\n      helpText,\n      identifier,\n      pidPlaceholder,\n      pidType,\n    } = this.props;\n    const hasIdentifier = identifier !== \"\";\n\n    const ReserveBtn = (\n      <ReservePIDBtn\n        disabled={disabled || hasIdentifier}\n        label={btnLabelGetPID}\n        loading={\n          actionState === RESERVE_PID_STARTED && actionStateExtra.pidType === pidType\n        }\n        handleReservePID={this.handleReservePID}\n      />\n    );\n\n    const UnreserveBtn = (\n      <UnreservePIDBtn\n        disabled={disabled}\n        label={btnLabelDiscardPID}\n        handleDiscardPID={this.handleDiscardPID}\n        loading={\n          actionState === DISCARD_PID_STARTED && actionStateExtra.pidType === pidType\n        }\n        pidType={pidType}\n      />\n    );\n\n    return (\n      <>\n        <Form.Group inline>\n          {hasIdentifier ? (\n            <Form.Field>\n              <label>{identifier}</label>\n            </Form.Field>\n          ) : (\n            <Form.Field width={4}>\n              <Form.Input disabled value=\"\" placeholder={pidPlaceholder} width={16} />\n            </Form.Field>\n          )}\n\n          <Form.Field>{identifier ? UnreserveBtn : ReserveBtn}</Form.Field>\n        </Form.Group>\n        {helpText && <label className=\"helptext\">{helpText}</label>}\n      </>\n    );\n  }\n}\n\nManagedIdentifierComponent.propTypes = {\n  btnLabelGetPID: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  helpText: PropTypes.string,\n  identifier: PropTypes.string.isRequired,\n  btnLabelDiscardPID: PropTypes.string.isRequired,\n  pidPlaceholder: PropTypes.string.isRequired,\n  pidType: PropTypes.string.isRequired,\n  /* from Redux */\n  actionState: PropTypes.string,\n  actionStateExtra: PropTypes.object,\n};\n\nManagedIdentifierComponent.defaultProps = {\n  disabled: false,\n  helpText: null,\n  /* from Redux */\n  actionState: \"\",\n  actionStateExtra: {},\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n  actionStateExtra: state.deposit.actionStateExtra,\n});\n\nconst ManagedIdentifierCmp = connect(mapStateToProps, null)(ManagedIdentifierComponent);\n\n/**\n * Render identifier field to allow user to input\n * the unmanaged PID.\n */\nclass UnmanagedIdentifierCmp extends Component {\n  constructor(props) {\n    super(props);\n\n    const { identifier } = props;\n\n    this.state = {\n      localIdentifier: identifier,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // called after the form field is updated and therefore re-rendered.\n    const { identifier } = this.props;\n    if (identifier !== prevProps.identifier) {\n      this.handleIdentifierUpdate(identifier);\n    }\n  }\n\n  handleIdentifierUpdate = (newIdentifier) => {\n    this.setState({ localIdentifier: newIdentifier });\n  };\n\n  onChange = (value) => {\n    const { onIdentifierChanged } = this.props;\n    this.setState({ localIdentifier: value }, () => onIdentifierChanged(value));\n  };\n\n  render() {\n    const { localIdentifier } = this.state;\n    const { form, fieldPath, helpText, pidPlaceholder } = this.props;\n    const fieldError = getFieldErrors(form, fieldPath);\n    return (\n      <>\n        <Form.Field width={8} error={fieldError}>\n          <Form.Input\n            onChange={(e, { value }) => this.onChange(value)}\n            value={localIdentifier}\n            placeholder={pidPlaceholder}\n            width={16}\n            error={fieldError}\n          />\n        </Form.Field>\n        {helpText && <label className=\"helptext\">{helpText}</label>}\n      </>\n    );\n  }\n}\n\nUnmanagedIdentifierCmp.propTypes = {\n  form: PropTypes.object.isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  helpText: PropTypes.string,\n  identifier: PropTypes.string.isRequired,\n  onIdentifierChanged: PropTypes.func.isRequired,\n  pidPlaceholder: PropTypes.string.isRequired,\n};\n\nUnmanagedIdentifierCmp.defaultProps = {\n  helpText: null,\n};\n\n/**\n * Render managed or unamanged PID fields and update\n * Formik form on input changed.\n * The field value has the following format:\n * { 'doi': { identifier: '<value>', provider: '<value>', client: '<value>' } }\n */\nclass CustomPIDField extends Component {\n  constructor(props) {\n    super(props);\n\n    const { canBeManaged, canBeUnmanaged } = this.props;\n    this.canBeManagedAndUnmanaged = canBeManaged && canBeUnmanaged;\n\n    this.state = {\n      isManagedSelected: undefined,\n    };\n  }\n\n  onExternalIdentifierChanged = (identifier) => {\n    const { form, fieldPath } = this.props;\n\n    const pid = {\n      identifier: identifier,\n      provider: PROVIDER_EXTERNAL,\n    };\n\n    this.debounced && this.debounced.cancel();\n    this.debounced = _debounce(() => {\n      form.setFieldValue(fieldPath, pid);\n    }, UPDATE_PID_DEBOUNCE_MS);\n    this.debounced();\n  };\n\n  render() {\n    const { isManagedSelected } = this.state;\n    const {\n      btnLabelDiscardPID,\n      btnLabelGetPID,\n      canBeManaged,\n      canBeUnmanaged,\n      form,\n      fieldPath,\n      fieldLabel,\n      isEditingPublishedRecord,\n      managedHelpText,\n      pidLabel,\n      pidIcon,\n      pidPlaceholder,\n      required,\n      unmanagedHelpText,\n      pidType,\n      field,\n    } = this.props;\n\n    const value = field.value || {};\n    const currentIdentifier = value.identifier || \"\";\n    const currentProvider = value.provider || \"\";\n\n    let managedIdentifier = \"\",\n      unmanagedIdentifier = \"\";\n    if (currentIdentifier !== \"\") {\n      const isProviderExternal = currentProvider === PROVIDER_EXTERNAL;\n      managedIdentifier = !isProviderExternal ? currentIdentifier : \"\";\n      unmanagedIdentifier = isProviderExternal ? currentIdentifier : \"\";\n    }\n\n    const hasManagedIdentifier = managedIdentifier !== \"\";\n\n    const _isManagedSelected =\n      isManagedSelected === undefined\n        ? hasManagedIdentifier || currentProvider === \"\" // i.e pids: {}\n        : isManagedSelected;\n\n    const fieldError = getFieldErrors(form, fieldPath);\n    return (\n      <>\n        <Form.Field required={required} error={fieldError}>\n          <FieldLabel htmlFor={fieldPath} icon={pidIcon} label={fieldLabel} />\n        </Form.Field>\n\n        {this.canBeManagedAndUnmanaged && (\n          <ManagedUnmanagedSwitch\n            disabled={isEditingPublishedRecord || hasManagedIdentifier}\n            isManagedSelected={_isManagedSelected}\n            onManagedUnmanagedChange={(userSelectedManaged) => {\n              if (userSelectedManaged) {\n                form.setFieldValue(\"pids\", {});\n              } else {\n                this.onExternalIdentifierChanged(\"\");\n              }\n              this.setState({\n                isManagedSelected: userSelectedManaged,\n              });\n            }}\n            pidLabel={pidLabel}\n          />\n        )}\n\n        {canBeManaged && _isManagedSelected && (\n          <ManagedIdentifierCmp\n            disabled={isEditingPublishedRecord}\n            btnLabelDiscardPID={btnLabelDiscardPID}\n            btnLabelGetPID={btnLabelGetPID}\n            form={form}\n            identifier={managedIdentifier}\n            helpText={managedHelpText}\n            pidPlaceholder={pidPlaceholder}\n            pidType={pidType}\n            pidLabel={pidLabel}\n          />\n        )}\n\n        {canBeUnmanaged && !_isManagedSelected && (\n          <UnmanagedIdentifierCmp\n            identifier={unmanagedIdentifier}\n            onIdentifierChanged={(identifier) => {\n              this.onExternalIdentifierChanged(identifier);\n            }}\n            form={form}\n            fieldPath={fieldPath}\n            pidPlaceholder={pidPlaceholder}\n            helpText={unmanagedHelpText}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nCustomPIDField.propTypes = {\n  field: PropTypes.object,\n  form: PropTypes.object.isRequired,\n  btnLabelDiscardPID: PropTypes.string.isRequired,\n  btnLabelGetPID: PropTypes.string.isRequired,\n  canBeManaged: PropTypes.bool.isRequired,\n  canBeUnmanaged: PropTypes.bool.isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  fieldLabel: PropTypes.string.isRequired,\n  isEditingPublishedRecord: PropTypes.bool.isRequired,\n  managedHelpText: PropTypes.string,\n  pidIcon: PropTypes.string.isRequired,\n  pidLabel: PropTypes.string.isRequired,\n  pidPlaceholder: PropTypes.string.isRequired,\n  pidType: PropTypes.string.isRequired,\n  required: PropTypes.bool.isRequired,\n  unmanagedHelpText: PropTypes.string,\n};\n\nCustomPIDField.defaultProps = {\n  managedHelpText: null,\n  unmanagedHelpText: null,\n  field: undefined,\n};\n\n/**\n * Render the PIDField using a custom Formik component\n */\nexport class PIDField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validatePropValues();\n  }\n\n  validatePropValues = () => {\n    const { canBeManaged, canBeUnmanaged, fieldPath } = this.props;\n\n    if (!canBeManaged && !canBeUnmanaged) {\n      throw Error(`${fieldPath} must be managed, unmanaged or both.`);\n    }\n  };\n\n  render() {\n    const { fieldPath } = this.props;\n\n    return <FastField name={fieldPath} component={CustomPIDField} {...this.props} />;\n  }\n}\n\nPIDField.propTypes = {\n  btnLabelDiscardPID: PropTypes.string,\n  btnLabelGetPID: PropTypes.string,\n  canBeManaged: PropTypes.bool,\n  canBeUnmanaged: PropTypes.bool,\n  fieldPath: PropTypes.string.isRequired,\n  fieldLabel: PropTypes.string.isRequired,\n  isEditingPublishedRecord: PropTypes.bool.isRequired,\n  managedHelpText: PropTypes.string,\n  pidIcon: PropTypes.string,\n  pidLabel: PropTypes.string.isRequired,\n  pidPlaceholder: PropTypes.string,\n  pidType: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  unmanagedHelpText: PropTypes.string,\n};\n\nPIDField.defaultProps = {\n  btnLabelDiscardPID: \"Discard\",\n  btnLabelGetPID: \"Reserve\",\n  canBeManaged: true,\n  canBeUnmanaged: true,\n  managedHelpText: null,\n  pidIcon: \"barcode\",\n  pidPlaceholder: \"\",\n  required: false,\n  unmanagedHelpText: null,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Menu } from \"semantic-ui-react\";\n\nexport const LicenseFilter = ({\n  updateQueryFilters,\n  userSelectionFilters,\n  filterValue,\n  label,\n  title,\n}) => {\n  const _isChecked = (userSelectionFilters) => {\n    const isFilterActive =\n      userSelectionFilters.filter((filter) => filter[1] === filterValue[1]).length > 0;\n    return isFilterActive;\n  };\n\n  const onToggleClicked = () => {\n    updateQueryFilters(userSelectionFilters.concat([filterValue]));\n  };\n\n  const isChecked = _isChecked(userSelectionFilters);\n  return isChecked ? (\n    <Menu.Item name={label} active as={Button} primary onClick={onToggleClicked}>\n      {title}\n    </Menu.Item>\n  ) : (\n    <Menu.Item name={label} onClick={onToggleClicked}>\n      {title}\n    </Menu.Item>\n  );\n};\n\nLicenseFilter.propTypes = {\n  updateQueryFilters: PropTypes.func.isRequired,\n  userSelectionFilters: PropTypes.array.isRequired,\n  filterValue: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport { Item, Header, Radio } from \"semantic-ui-react\";\nimport { withState } from \"react-searchkit\";\nimport _get from \"lodash/get\";\nimport { FastField } from \"formik\";\n\nexport const LicenseResults = withState(\n  ({ currentResultsState: results, serializeLicenses }) => {\n    const serializeLicenseResult = serializeLicenses\n      ? serializeLicenses\n      : (result) => ({\n          title: result.title_l10n,\n          description: result.description_l10n,\n          id: result.id,\n        });\n    return (\n      <FastField name=\"selectedLicense\">\n        {({ form: { values, setFieldValue } }) => (\n          <Item.Group>\n            {results.data.hits.map((result) => {\n              const title = result[\"title_l10n\"];\n              const description = result[\"description_l10n\"];\n              return (\n                <Item\n                  key={title}\n                  onClick={() =>\n                    setFieldValue(\"selectedLicense\", serializeLicenseResult(result))\n                  }\n                  className=\"license-item mb-15\"\n                >\n                  <Radio\n                    checked={_get(values, \"selectedLicense.title\") === title}\n                    onChange={() =>\n                      setFieldValue(\"selectedLicense\", serializeLicenseResult(result))\n                    }\n                    {...(!description && { className: \"mt-0\" })}\n                  />\n                  <Item.Content className=\"license-item-content\">\n                    <Header size=\"small\" className=\"mt-0\">\n                      {title}\n                    </Header>\n                    {description && (\n                      <Item.Description className=\"license-item-description\">\n                        {description}\n                      </Item.Description>\n                    )}\n                  </Item.Content>\n                </Item>\n              );\n            })}\n          </Item.Group>\n        )}\n      </FastField>\n    );\n  }\n);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { useState, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withState } from \"react-searchkit\";\nimport { Input } from \"semantic-ui-react\";\n\nexport const LicenseSearchBarComponent = ({\n  updateQueryState,\n  currentQueryState,\n  autofocus,\n  actionProps,\n  placeholder,\n}) => {\n  const [currentValue, setCurrentValue] = useState(\"\");\n\n  const onInputChange = (queryString) => {\n    setCurrentValue(queryString);\n  };\n\n  const executeSearch = () => {\n    currentQueryState[\"filters\"][0] = [\"tags\", \"all\"];\n    currentQueryState[\"queryString\"] = currentValue;\n    updateQueryState(currentQueryState);\n  };\n\n  const onKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      executeSearch();\n    }\n  };\n\n  return (\n    <Element\n      actionProps={actionProps}\n      autofocus={autofocus}\n      executeSearch={executeSearch}\n      onBtnSearchClick={executeSearch}\n      onInputChange={onInputChange}\n      onKeyPress={onKeyPress}\n      placeholder={placeholder}\n      queryString={currentValue}\n    />\n  );\n};\n\nLicenseSearchBarComponent.propTypes = {\n  actionProps: PropTypes.object,\n  autofocus: PropTypes.bool,\n  currentQueryState: PropTypes.object,\n  updateQueryState: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nLicenseSearchBarComponent.defaultProps = {\n  actionProps: null,\n  autofocus: false,\n  placeholder: \"\",\n  currentQueryState: null,\n  updateQueryState: null,\n};\n\nclass Element extends Component {\n  componentDidMount() {\n    const { autofocus } = this.props;\n    if (autofocus && this.focusInput) {\n      this.focusInput.focus();\n    }\n  }\n\n  render() {\n    const {\n      actionProps,\n      onBtnSearchClick,\n      onInputChange,\n      onKeyPress,\n      placeholder,\n      queryString,\n    } = this.props;\n\n    return (\n      <Input\n        action={{\n          content: \"Search\",\n          onClick: onBtnSearchClick,\n          ...actionProps,\n        }}\n        fluid\n        placeholder={placeholder || \"Type something\"}\n        onChange={(_, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n        ref={(input) => {\n          this.focusInput = input;\n        }}\n      />\n    );\n  }\n}\n\nElement.propTypes = {\n  actionProps: PropTypes.object,\n  autofocus: PropTypes.bool,\n  onBtnSearchClick: PropTypes.func,\n  onInputChange: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  placeholder: PropTypes.string,\n  queryString: PropTypes.string,\n};\n\nElement.defaultProps = {\n  actionProps: null,\n  autofocus: false,\n  onBtnSearchClick: null,\n  onInputChange: null,\n  onKeyPress: null,\n  placeholder: \"\",\n  queryString: \"\",\n};\n\nexport const LicenseSearchBar = withState(LicenseSearchBarComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { TextAreaField, TextField } from \"react-invenio-forms\";\nimport { OverridableContext } from \"react-overridable\";\nimport {\n  EmptyResults,\n  Error,\n  InvenioSearchApi,\n  ReactSearchKit,\n  ResultsLoader,\n  Toggle,\n} from \"react-searchkit\";\nimport { Button, Form, Grid, Menu, Modal } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { LicenseFilter } from \"./LicenseFilter\";\nimport { LicenseResults } from \"./LicenseResults\";\nimport { LicenseSearchBar } from \"./LicenseSearchBar\";\n\nconst overriddenComponents = {\n  \"SearchFilters.Toggle\": LicenseFilter,\n};\n\nconst ModalTypes = {\n  STANDARD: \"standard\",\n  CUSTOM: \"custom\",\n};\n\nconst ModalActions = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst LicenseSchema = Yup.object().shape({\n  selectedLicense: Yup.object().shape({\n    title: Yup.string().required(i18next.t(\"Title is a required field.\")),\n    link: Yup.string().url(i18next.t(\"Link must be a valid URL\")),\n  }),\n});\n\nexport class LicenseModal extends Component {\n  state = {\n    open: false,\n  };\n\n  openModal = () => {\n    this.setState({ open: true });\n  };\n\n  closeModal = () => {\n    this.setState({ open: false });\n  };\n\n  onSubmit = (values, formikBag) => {\n    // We have to close the modal first because onLicenseChange and passing\n    // license as an object makes React get rid of this component. Otherwise\n    // we get a memory leak warning.\n    const { onLicenseChange } = this.props;\n    this.closeModal();\n    onLicenseChange(values.selectedLicense);\n    formikBag.resetForm();\n  };\n\n  render() {\n    const {\n      mode,\n      trigger,\n      action,\n      searchConfig,\n      serializeLicenses,\n      initialLicense: initialLicenseProp,\n    } = this.props;\n    const { open } = this.state;\n\n    const initialLicense = initialLicenseProp || {\n      title: \"\",\n      description: \"\",\n      id: null,\n      link: \"\",\n    };\n\n    const searchApi = new InvenioSearchApi(searchConfig.searchApi);\n    return (\n      <Formik\n        initialValues={{\n          selectedLicense: initialLicense,\n        }}\n        onSubmit={this.onSubmit}\n        validationSchema={LicenseSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ handleSubmit, resetForm }) => (\n          <Modal\n            onOpen={() => this.openModal()}\n            open={open}\n            trigger={trigger}\n            onClose={() => {\n              this.closeModal();\n              resetForm();\n            }}\n            closeIcon\n            closeOnDimmerClick={false}\n          >\n            <Modal.Header as=\"h2\" className=\"pt-10 pb-10\">\n              {action === ModalActions.ADD\n                ? i18next.t(`Add {{mode}} license`, {\n                    mode: mode,\n                  })\n                : i18next.t(`Change {{mode}} license`, {\n                    mode: mode,\n                  })}\n            </Modal.Header>\n            <Modal.Content scrolling>\n              {mode === ModalTypes.STANDARD && (\n                <OverridableContext.Provider value={overriddenComponents}>\n                  <ReactSearchKit\n                    searchApi={searchApi}\n                    appName=\"licenses\"\n                    urlHandlerApi={{ enabled: false }}\n                    initialQueryState={searchConfig.initialQueryState}\n                  >\n                    <Grid>\n                      <Grid.Row>\n                        <Grid.Column width={8} floated=\"left\" verticalAlign=\"middle\">\n                          <LicenseSearchBar\n                            placeholder={i18next.t(\"Search\")}\n                            autofocus\n                            actionProps={{\n                              icon: \"search\",\n                              content: null,\n                              className: \"search\",\n                            }}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={8} textAlign=\"right\" floated=\"right\">\n                          <Menu compact>\n                            <Toggle\n                              title={i18next.t(\"Recommended\")}\n                              label=\"recommended\"\n                              filterValue={[\"tags\", \"recommended\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"All\")}\n                              label=\"all\"\n                              filterValue={[\"tags\", \"all\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"Data\")}\n                              label=\"data\"\n                              filterValue={[\"tags\", \"data\"]}\n                            />\n                            <Toggle\n                              title={i18next.t(\"Software\")}\n                              label=\"software\"\n                              filterValue={[\"tags\", \"software\"]}\n                            />\n                          </Menu>\n                        </Grid.Column>\n                      </Grid.Row>\n                      <Grid.Row verticalAlign=\"middle\">\n                        <Grid.Column>\n                          <ResultsLoader>\n                            <EmptyResults />\n                            <Error />\n                            <LicenseResults\n                              {...(serializeLicenses && {\n                                serializeLicenses,\n                              })}\n                            />\n                          </ResultsLoader>\n                        </Grid.Column>\n                      </Grid.Row>\n                    </Grid>\n                  </ReactSearchKit>\n                </OverridableContext.Provider>\n              )}\n              {mode === ModalTypes.CUSTOM && (\n                <Form>\n                  <TextField\n                    label={i18next.t(\"Title\")}\n                    placeholder={i18next.t(\"License title\")}\n                    fieldPath=\"selectedLicense.title\"\n                    required\n                    // eslint-disable-next-line\n                    autoFocus\n                  />\n                  <TextAreaField\n                    fieldPath=\"selectedLicense.description\"\n                    label={i18next.t(\"Description\")}\n                  />\n                  <TextField\n                    label={i18next.t(\"Link\")}\n                    placeholder={i18next.t(\"License link\")}\n                    fieldPath=\"selectedLicense.link\"\n                  />\n                </Form>\n              )}\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                name=\"cancel\"\n                onClick={() => {\n                  resetForm();\n                  this.closeModal();\n                }}\n                icon=\"remove\"\n                labelPosition=\"left\"\n                content={i18next.t(\"Cancel\")}\n                floated=\"left\"\n              />\n              <Button\n                name=\"submit\"\n                onClick={(event) => handleSubmit(event)}\n                primary\n                icon=\"checkmark\"\n                labelPosition=\"left\"\n                content={\n                  action === ModalActions.ADD\n                    ? i18next.t(\"Add license\")\n                    : i18next.t(\"Change license\")\n                }\n              />\n            </Modal.Actions>\n          </Modal>\n        )}\n      </Formik>\n    );\n  }\n}\n\nLicenseModal.propTypes = {\n  mode: PropTypes.oneOf([\"standard\", \"custom\"]).isRequired,\n  action: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  initialLicense: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n  }),\n  trigger: PropTypes.object.isRequired,\n  onLicenseChange: PropTypes.func.isRequired,\n  searchConfig: PropTypes.shape({\n    searchApi: PropTypes.shape({\n      axios: PropTypes.shape({\n        headers: PropTypes.object,\n      }),\n    }).isRequired,\n    initialQueryState: PropTypes.shape({\n      filters: PropTypes.arrayOf(PropTypes.array),\n    }).isRequired,\n  }).isRequired,\n  serializeLicenses: PropTypes.func,\n};\n\nLicenseModal.defaultProps = {\n  initialLicense: undefined,\n  serializeLicenses: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Button, List, Ref } from \"semantic-ui-react\";\nimport _truncate from \"lodash/truncate\";\nimport { LicenseModal } from \"./LicenseModal\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\n\nexport const LicenseFieldItem = ({\n  license,\n  moveLicense,\n  replaceLicense,\n  removeLicense,\n  searchConfig,\n  serializeLicenses,\n}) => {\n  const dropRef = React.useRef(null);\n\n  const [, drag, preview] = useDrag({\n    item: { index: license.index, type: \"license\" },\n  });\n  const [{ hidden }, drop] = useDrop({\n    accept: \"license\",\n    hover(item, monitor) {\n      if (!dropRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = license.index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      if (monitor.isOver({ shallow: true })) {\n        moveLicense(dragIndex, hoverIndex);\n        item.index = hoverIndex;\n      }\n    },\n    collect: (monitor) => ({\n      hidden: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  // Initialize the ref explicitely\n  drop(dropRef);\n  return (\n    <Ref innerRef={dropRef} key={license.key}>\n      <List.Item\n        key={license.key}\n        className={hidden ? \"deposit-drag-listitem hidden\" : \"deposit-drag-listitem\"}\n      >\n        <List.Content floated=\"right\">\n          <LicenseModal\n            searchConfig={searchConfig}\n            onLicenseChange={(selectedLicense) => {\n              replaceLicense(license.index, selectedLicense);\n            }}\n            mode={license.type}\n            initialLicense={license.initial}\n            action=\"edit\"\n            trigger={\n              <Button size=\"mini\" primary type=\"button\">\n                {i18next.t(\"Edit\")}\n              </Button>\n            }\n            serializeLicenses={serializeLicenses}\n          />\n          <Button\n            size=\"mini\"\n            type=\"button\"\n            onClick={() => {\n              removeLicense(license.index);\n            }}\n          >\n            {i18next.t(\"Remove\")}\n          </Button>\n        </List.Content>\n        <Ref innerRef={drag}>\n          <List.Icon name=\"bars\" className=\"drag-anchor\" />\n        </Ref>\n        <Ref innerRef={preview}>\n          <List.Content>\n            <List.Header>{license.title}</List.Header>\n            {license.description && (\n              <List.Description>\n                {_truncate(license.description, { length: 300 })}\n              </List.Description>\n            )}\n            {license.link && (\n              <span>\n                <a href={license.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {license.description && <span>&nbsp;</span>}\n                  {i18next.t(\"Read more\")}\n                </a>\n              </span>\n            )}\n          </List.Content>\n        </Ref>\n      </List.Item>\n    </Ref>\n  );\n};\n\nLicenseFieldItem.propTypes = {\n  license: PropTypes.object.isRequired,\n  moveLicense: PropTypes.func.isRequired,\n  replaceLicense: PropTypes.func.isRequired,\n  removeLicense: PropTypes.func.isRequired,\n  searchConfig: PropTypes.object.isRequired,\n  serializeLicenses: PropTypes.func,\n};\n\nLicenseFieldItem.defaultProps = {\n  serializeLicenses: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _find from \"lodash/find\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getIn, FieldArray } from \"formik\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { Button, Form, Icon, List } from \"semantic-ui-react\";\n\nimport { LicenseModal } from \"./LicenseModal\";\nimport { LicenseFieldItem } from \"./LicenseFieldItem\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\n/**\n * The user-facing license.\n *\n */\nclass VisibleLicense {\n  /**\n   * Constructor.\n   *\n   * @param {array} uiRights\n   * @param {object} right\n   * @param {int} index\n   */\n  constructor(uiRights, right, index) {\n    this.index = index;\n    this.type = right.id ? \"standard\" : \"custom\";\n    this.key = right.id || right.title;\n    this.initial = this.type === \"custom\" ? right : null;\n\n    let uiRight =\n      _find(\n        uiRights,\n        right.id ? (o) => o.id === right.id : (o) => o.title === right.title\n      ) || {};\n\n    this.description = uiRight.description_l10n || right.description || \"\";\n    this.title = uiRight.title_l10n || right.title || \"\";\n    this.link =\n      (uiRight.props && uiRight.props.url) ||\n      uiRight.link ||\n      (right.props && right.props.url) ||\n      right.link ||\n      \"\";\n  }\n}\n\nclass LicenseFieldForm extends Component {\n  render() {\n    const {\n      label,\n      labelIcon,\n      fieldPath,\n      uiFieldPath,\n      form: { values },\n      move: formikArrayMove,\n      push: formikArrayPush,\n      remove: formikArrayRemove,\n      replace: formikArrayReplace,\n      required,\n      searchConfig,\n      serializeLicenses,\n    } = this.props;\n\n    const uiRights = getIn(values, uiFieldPath, []);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Form.Field required={required}>\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          <List>\n            {getIn(values, fieldPath, []).map((value, index) => {\n              const license = new VisibleLicense(uiRights, value, index);\n              return (\n                <LicenseFieldItem\n                  key={license.key}\n                  license={license}\n                  moveLicense={formikArrayMove}\n                  replaceLicense={formikArrayReplace}\n                  removeLicense={formikArrayRemove}\n                  searchConfig={searchConfig}\n                  serializeLicenses={serializeLicenses}\n                />\n              );\n            })}\n          </List>\n          <LicenseModal\n            searchConfig={searchConfig}\n            trigger={\n              <Button type=\"button\" key=\"standard\" icon labelPosition=\"left\">\n                <Icon name=\"add\" />\n                {i18next.t(\"Add standard\")}\n              </Button>\n            }\n            onLicenseChange={(selectedLicense) => {\n              formikArrayPush(selectedLicense);\n            }}\n            mode=\"standard\"\n            action=\"add\"\n            serializeLicenses={serializeLicenses}\n          />\n          <LicenseModal\n            searchConfig={searchConfig}\n            trigger={\n              <Button type=\"button\" key=\"custom\" icon labelPosition=\"left\">\n                <Icon name=\"add\" />\n                {i18next.t(\"Add custom\")}\n              </Button>\n            }\n            onLicenseChange={(selectedLicense) => {\n              formikArrayPush(selectedLicense);\n            }}\n            mode=\"custom\"\n            action=\"add\"\n          />\n        </Form.Field>\n      </DndProvider>\n    );\n  }\n}\n\nLicenseFieldForm.propTypes = {\n  label: PropTypes.node.isRequired,\n  labelIcon: PropTypes.node,\n  fieldPath: PropTypes.string.isRequired,\n  uiFieldPath: PropTypes.string,\n  form: PropTypes.object.isRequired,\n  move: PropTypes.func.isRequired,\n  push: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  replace: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  searchConfig: PropTypes.object.isRequired,\n  serializeLicenses: PropTypes.func,\n};\n\nLicenseFieldForm.defaultProps = {\n  labelIcon: undefined,\n  uiFieldPath: undefined,\n  serializeLicenses: undefined,\n};\n\nexport class LicenseField extends Component {\n  render() {\n    const { fieldPath } = this.props;\n    return (\n      <FieldArray\n        name={fieldPath}\n        component={(formikProps) => (\n          <LicenseFieldForm {...formikProps} {...this.props} />\n        )}\n      />\n    );\n  }\n}\n\nLicenseField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  searchConfig: PropTypes.object.isRequired,\n  required: PropTypes.bool,\n  serializeLicenses: PropTypes.func,\n  uiFieldPath: PropTypes.string,\n};\n\nLicenseField.defaultProps = {\n  label: i18next.t(\"Licenses\"),\n  uiFieldPath: \"ui.rights\",\n  labelIcon: \"drivers license\",\n  required: false,\n  serializeLicenses: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class PublicationDateField extends Component {\n  render() {\n    const { fieldPath, helpText, label, labelIcon, placeholder, required } = this.props;\n\n    return (\n      <TextField\n        fieldPath={fieldPath}\n        helpText={helpText}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        placeholder={placeholder}\n        required={required}\n      />\n    );\n  }\n}\n\nPublicationDateField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  helpText: PropTypes.string,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nPublicationDateField.defaultProps = {\n  helpText: i18next.t(\n    \"In case your upload was already published elsewhere, please use the date of the first publication. Format: YYYY-MM-DD, YYYY-MM, or YYYY. For intervals use DATE/DATE, e.g. 1939/1945.\"\n  ),\n  label: i18next.t(\"Publication date\"),\n  labelIcon: \"calendar\",\n  required: undefined,\n  placeholder: i18next.t(\n    \"YYYY-MM-DD or YYYY-MM-DD/YYYY-MM-DD for intervals. MM and DD are optional.\"\n  ),\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class PublisherField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, placeholder } = this.props;\n\n    return (\n      <TextField\n        fieldPath={fieldPath}\n        helpText={i18next.t(\n          \"The publisher is used to formulate the citation, so consider the prominence of the role.\"\n        )}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        placeholder={placeholder}\n      />\n    );\n  }\n}\n\nPublisherField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nPublisherField.defaultProps = {\n  label: i18next.t(\"Publisher\"),\n  labelIcon: \"building outline\",\n  placeholder: i18next.t(\"Publisher\"),\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\nexport const emptyReference = {\n  reference: \"\", // note: this refers to reference.reference and not the object\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TextField, GroupField, ArrayField, FieldLabel } from \"react-invenio-forms\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\n\nimport { emptyReference } from \"./initialValues\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class ReferencesField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, required, showEmptyValue } = this.props;\n\n    return (\n      <ArrayField\n        addButtonLabel={i18next.t(\"Add reference\")}\n        defaultNewValue={emptyReference}\n        fieldPath={fieldPath}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        required={required}\n        showEmptyValue={showEmptyValue}\n      >\n        {({ arrayHelpers, indexPath }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n\n          return (\n            <GroupField optimized>\n              <TextField\n                fieldPath={`${fieldPathPrefix}.reference`}\n                label={i18next.t(\"Reference string\")}\n                required\n                width={16}\n              />\n\n              <Form.Field>\n                <Button\n                  aria-label={i18next.t(\"Remove field\")}\n                  className=\"close-btn\"\n                  icon\n                  onClick={() => arrayHelpers.remove(indexPath)}\n                >\n                  <Icon name=\"close\" />\n                </Button>\n              </Form.Field>\n            </GroupField>\n          );\n        }}\n      </ArrayField>\n    );\n  }\n}\n\nReferencesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  showEmptyValue: PropTypes.bool,\n};\n\nReferencesField.defaultProps = {\n  label: i18next.t(\"References\"),\n  labelIcon: \"bookmark\",\n  required: false,\n  showEmptyValue: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\nexport const emptyRelatedWork = {\n  scheme: \"\",\n  identifier: \"\",\n  resource_type: \"\",\n  relation_type: \"\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _get from \"lodash/get\";\nimport { FieldLabel, SelectField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class ResourceTypeField extends Component {\n  groupErrors = (errors, fieldPath) => {\n    const fieldErrors = _get(errors, fieldPath);\n    if (fieldErrors) {\n      return { content: fieldErrors };\n    }\n    return null;\n  };\n\n  /**\n   * Generate label value\n   *\n   * @param {object} option - back-end option\n   * @returns {string} label\n   */\n  _label = (option) => {\n    return option.type_name + (option.subtype_name ? \" / \" + option.subtype_name : \"\");\n  };\n\n  /**\n   * Convert back-end options to front-end options.\n   *\n   * @param {array} propsOptions - back-end options\n   * @returns {array} front-end options\n   */\n  createOptions = (propsOptions) => {\n    return propsOptions\n      .map((o) => ({ ...o, label: this._label(o) }))\n      .sort((o1, o2) => o1.label.localeCompare(o2.label))\n      .map((o) => {\n        return {\n          value: o.id,\n          icon: o.icon,\n          text: o.label,\n        };\n      });\n  };\n\n  render() {\n    const { fieldPath, label, labelIcon, options, ...restProps } = this.props;\n    const frontEndOptions = this.createOptions(options);\n    return (\n      <SelectField\n        fieldPath={fieldPath}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        optimized\n        aria-label={label}\n        options={frontEndOptions}\n        selectOnBlur={false}\n        {...restProps}\n      />\n    );\n  }\n}\n\nResourceTypeField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  labelclassname: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string,\n      type_name: PropTypes.string,\n      subtype_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  required: PropTypes.bool,\n};\n\nResourceTypeField.defaultProps = {\n  label: i18next.t(\"Resource type\"),\n  labelIcon: \"tag\",\n  labelclassname: \"field-label-class\",\n  required: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  TextField,\n  GroupField,\n  ArrayField,\n  FieldLabel,\n  SelectField,\n} from \"react-invenio-forms\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\n\nimport { emptyRelatedWork } from \"./initialValues\";\nimport { ResourceTypeField } from \"../ResourceTypeField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class RelatedWorksField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, required, options, showEmptyValue } =\n      this.props;\n\n    return (\n      <>\n        <label className=\"helptext\" style={{ marginBottom: \"10px\" }}>\n          {i18next.t(\n            \"Specify identifiers of related works. Supported identifiers include DOI, Handle, ARK, PURL, ISSN, ISBN, PubMed ID, PubMed Central ID, ADS Bibliographic Code, arXiv, Life Science Identifiers (LSID), EAN-13, ISTC, URNs, and URLs.\"\n          )}\n        </label>\n        <ArrayField\n          addButtonLabel={i18next.t(\"Add related work\")}\n          defaultNewValue={emptyRelatedWork}\n          fieldPath={fieldPath}\n          label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n          required={required}\n          showEmptyValue={showEmptyValue}\n        >\n          {({ arrayHelpers, indexPath }) => {\n            const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n\n            return (\n              <GroupField optimized>\n                <SelectField\n                  clearable\n                  fieldPath={`${fieldPathPrefix}.relation_type`}\n                  label={i18next.t(\"Relation\")}\n                  aria-label={i18next.t(\"Relation\")}\n                  optimized\n                  options={options.relations}\n                  placeholder={{\n                    role: \"option\",\n                    content: \"Select relation...\",\n                  }}\n                  required\n                  width={3}\n                />\n\n                <TextField\n                  fieldPath={`${fieldPathPrefix}.identifier`}\n                  label={i18next.t(\"Identifier\")}\n                  required\n                  width={4}\n                />\n\n                <SelectField\n                  clearable\n                  fieldPath={`${fieldPathPrefix}.scheme`}\n                  label={i18next.t(\"Scheme\")}\n                  aria-label={i18next.t(\"Scheme\")}\n                  optimized\n                  options={options.scheme}\n                  required\n                  width={2}\n                />\n\n                <ResourceTypeField\n                  clearable\n                  fieldPath={`${fieldPathPrefix}.resource_type`}\n                  labelIcon=\"\" // Otherwise breaks alignment\n                  options={options.resource_type}\n                  width={7}\n                  labelclassname=\"small field-label-class\"\n                />\n\n                <Form.Field>\n                  <Button\n                    aria-label={i18next.t(\"Remove field\")}\n                    className=\"close-btn\"\n                    icon\n                    onClick={() => arrayHelpers.remove(indexPath)}\n                  >\n                    <Icon name=\"close\" />\n                  </Button>\n                </Form.Field>\n              </GroupField>\n            );\n          }}\n        </ArrayField>\n      </>\n    );\n  }\n}\n\nRelatedWorksField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  options: PropTypes.object.isRequired,\n  showEmptyValue: PropTypes.bool,\n};\n\nRelatedWorksField.defaultProps = {\n  label: i18next.t(\"Related works\"),\n  labelIcon: \"barcode\",\n  required: undefined,\n  showEmptyValue: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldLabel, GroupField, RemoteSelectField } from \"react-invenio-forms\";\nimport { Form } from \"semantic-ui-react\";\nimport { Field, getIn } from \"formik\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class SubjectsField extends Component {\n  state = {\n    limitTo: \"all\",\n  };\n\n  serializeSubjects = (subjects) =>\n    subjects.map((subject) => {\n      const scheme = subject.scheme ? `(${subject.scheme}) ` : \"\";\n      return {\n        text: scheme + subject.subject,\n        value: subject.subject,\n        key: subject.subject,\n        ...(subject.id ? { id: subject.id } : {}),\n        subject: subject.subject,\n      };\n    });\n\n  prepareSuggest = (searchQuery) => {\n    const { limitTo } = this.state;\n\n    const prefix = limitTo === \"all\" ? \"\" : `${limitTo}:`;\n    return `${prefix}${searchQuery}`;\n  };\n\n  render() {\n    const {\n      fieldPath,\n      label,\n      labelIcon,\n      required,\n      multiple,\n      placeholder,\n      clearable,\n      limitToOptions,\n    } = this.props;\n    return (\n      <GroupField className=\"main-group-field\">\n        <Form.Field width={5} className=\"subjects-field\">\n          <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n          <GroupField>\n            <Form.Field\n              width={8}\n              style={{ marginBottom: \"auto\", marginTop: \"auto\" }}\n              className=\"p-0\"\n            >\n              {i18next.t(\"Suggest from\")}\n            </Form.Field>\n            <Form.Dropdown\n              className=\"p-0\"\n              defaultValue={limitToOptions[0].value}\n              fluid\n              aria-label={i18next.t(\"Suggest from\")}\n              onChange={(event, data) => this.setState({ limitTo: data.value })}\n              options={limitToOptions}\n              selection\n              width={8}\n            />\n          </GroupField>\n        </Form.Field>\n        <Field name={fieldPath}>\n          {({ form: { values } }) => {\n            return (\n              <RemoteSelectField\n                clearable={clearable}\n                fieldPath={fieldPath}\n                initialSuggestions={getIn(values, fieldPath, [])}\n                multiple={multiple}\n                noQueryMessage={i18next.t(\"Search or create subjects...\")}\n                placeholder={placeholder}\n                preSearchChange={this.prepareSuggest}\n                required={required}\n                serializeSuggestions={this.serializeSubjects}\n                serializeAddedValue={(value) => ({\n                  text: value,\n                  value: value,\n                  key: value,\n                  subject: value,\n                })}\n                suggestionAPIUrl=\"/api/subjects\"\n                onValueChange={({ formikProps }, selectedSuggestions) => {\n                  formikProps.form.setFieldValue(\n                    fieldPath,\n                    // save the suggestion objects so we can extract information\n                    // about which value added by the user\n                    selectedSuggestions\n                  );\n                }}\n                value={getIn(values, fieldPath, []).map((val) => val.subject)}\n                label={\n                  <>\n                    {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                    <label className=\"mobile-hidden\">&nbsp;</label>\n                  </>\n                } /** For alignment purposes */\n                allowAdditions\n                width={11}\n              />\n            );\n          }}\n        </Field>\n      </GroupField>\n    );\n  }\n}\n\nSubjectsField.propTypes = {\n  limitToOptions: PropTypes.array.isRequired,\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  required: PropTypes.bool,\n  multiple: PropTypes.bool,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\nSubjectsField.defaultProps = {\n  required: false,\n  label: i18next.t(\"Keywords and subjects\"),\n  labelIcon: \"tag\",\n  multiple: true,\n  clearable: true,\n  placeholder: i18next.t(\"Search for a subject by name\"),\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const emptyAdditionalTitle = {\n  lang: \"\",\n  title: \"\",\n  type: \"alternative-title\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Icon } from \"semantic-ui-react\";\n\nimport { ArrayField, GroupField, SelectField, TextField } from \"react-invenio-forms\";\nimport { emptyAdditionalTitle } from \"./initialValues\";\nimport { LanguagesField } from \"../LanguagesField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class AdditionalTitlesField extends Component {\n  render() {\n    const { fieldPath, options, recordUI } = this.props;\n    return (\n      <ArrayField\n        addButtonLabel={i18next.t(\"Add titles\")}\n        defaultNewValue={emptyAdditionalTitle}\n        fieldPath={fieldPath}\n        className=\"additional-titles\"\n      >\n        {({ arrayHelpers, indexPath }) => {\n          const fieldPathPrefix = `${fieldPath}.${indexPath}`;\n\n          return (\n            <GroupField fieldPath={fieldPath} optimized>\n              <TextField\n                fieldPath={`${fieldPathPrefix}.title`}\n                label=\"Additional title\"\n                required\n                width={5}\n              />\n              <SelectField\n                fieldPath={`${fieldPathPrefix}.type`}\n                label=\"Type\"\n                optimized\n                options={options.type}\n                required\n                width={5}\n              />\n              <LanguagesField\n                serializeSuggestions={(suggestions) =>\n                  suggestions.map((item) => ({\n                    text: item.title_l10n,\n                    value: item.id,\n                    fieldPathPrefix: item.id,\n                  }))\n                }\n                initialOptions={\n                  recordUI?.additional_titles &&\n                  recordUI.additional_titles[indexPath]?.lang\n                    ? [recordUI.additional_titles[indexPath].lang]\n                    : []\n                }\n                fieldPath={`${fieldPathPrefix}.lang`}\n                label=\"Language\"\n                multiple={false}\n                placeholder=\"Select language\"\n                labelIcon={null}\n                clearable\n                selectOnBlur={false}\n                width={5}\n              />\n              <Form.Field>\n                <Button\n                  aria-label={i18next.t(\"Remove field\")}\n                  className=\"close-btn\"\n                  icon\n                  onClick={() => arrayHelpers.remove(indexPath)}\n                >\n                  <Icon name=\"close\" />\n                </Button>\n              </Form.Field>\n            </GroupField>\n          );\n        }}\n      </ArrayField>\n    );\n  }\n}\n\nAdditionalTitlesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }),\n  recordUI: PropTypes.object,\n};\n\nAdditionalTitlesField.defaultProps = {\n  options: undefined,\n  recordUI: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { AdditionalTitlesField } from \"./AdditionalTitlesField\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\n\nexport class TitlesField extends Component {\n  render() {\n    const { fieldPath, options, label, required, recordUI } = this.props;\n\n    return (\n      <>\n        <TextField\n          fieldPath={fieldPath}\n          label={<FieldLabel htmlFor={fieldPath} icon=\"book\" label={label} />}\n          required={required}\n          className=\"title-field\"\n          optimized\n        />\n        <AdditionalTitlesField\n          options={options}\n          recordUI={recordUI}\n          fieldPath=\"metadata.additional_titles\"\n        />\n      </>\n    );\n  }\n}\n\nTitlesField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  options: PropTypes.shape({\n    type: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.string,\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n    lang: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        value: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n  required: PropTypes.bool,\n  recordUI: PropTypes.object,\n};\n\nTitlesField.defaultProps = {\n  label: i18next.t(\"Title\"),\n  required: false,\n  recordUI: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FieldLabel, TextField } from \"react-invenio-forms\";\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Trans } from \"react-i18next\";\n\nexport class VersionField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon, placeholder } = this.props;\n    const helpText = (\n      <span>\n        <Trans>\n          Mostly relevant for software and dataset uploads. A semantic version string is\n          preferred see\n          <a href=\"https://semver.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            semver.org\n          </a>\n          , but any version string is accepted.\n        </Trans>\n      </span>\n    );\n\n    return (\n      <TextField\n        fieldPath={fieldPath}\n        helpText={helpText}\n        label={<FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />}\n        placeholder={placeholder}\n      />\n    );\n  }\n}\n\nVersionField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nVersionField.defaultProps = {\n  label: i18next.t(\"Version\"),\n  labelIcon: \"code branch\",\n  placeholder: \"\",\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FieldLabel } from \"react-invenio-forms\";\nimport { Form, Segment } from \"semantic-ui-react\";\n\nexport class ComingSoonField extends Component {\n  render() {\n    const { fieldPath, label, labelIcon } = this.props;\n    return (\n      <Form.Field id={fieldPath} name={fieldPath}>\n        <FieldLabel htmlFor={fieldPath} icon={labelIcon} label={label} />\n        <Segment size=\"massive\" tertiary textAlign=\"center\">\n          Coming soon\n        </Segment>\n      </Form.Field>\n    );\n  }\n}\n\nComingSoonField.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  labelIcon: PropTypes.string,\n};\n\nComingSoonField.defaultProps = {\n  label: undefined,\n  labelIcon: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { connect as connectFormik } from \"formik\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DRAFT_DELETE_STARTED } from \"../../state/types\";\nimport _omit from \"lodash/omit\";\nimport _capitalize from \"lodash/capitalize\";\nimport PropTypes from \"prop-types\";\n\n// action\nconst DISCARD_CHANGES_LBL = i18next.t(\"discard changes\");\nconst DISCARD_VERSION_LBL = i18next.t(\"discard version\");\nconst DELETE_LBL = i18next.t(\"delete\");\n\n// action messages\nconst DISCARD_CHANGES_DLG = i18next.t(\n  \"Are you sure you want to discard the changes to this draft?\"\n);\n\nconst DISCARD_VERSION_DLG = i18next.t(\n  \"Are you sure you want to delete this new version?\"\n);\nconst DISCARD_DELETE_DLG = i18next.t(\"Are you sure you want to delete this draft?\");\n\nconst DialogText = ({ actionLbl }) => {\n  let text = \"\";\n  switch (actionLbl) {\n    case DISCARD_CHANGES_LBL:\n      text = DISCARD_CHANGES_DLG;\n      break;\n    case DISCARD_VERSION_LBL:\n      text = DISCARD_VERSION_DLG;\n      break;\n    case DELETE_LBL:\n      text = DISCARD_DELETE_DLG;\n      break;\n    default:\n      break;\n  }\n  return text;\n};\n\nexport class DeleteButtonComponent extends Component {\n  state = { modalOpen: false };\n  static contextType = DepositFormSubmitContext;\n\n  openConfirmModal = () => this.setState({ modalOpen: true });\n\n  closeConfirmModal = () => this.setState({ modalOpen: false });\n\n  handleDelete = async (event) => {\n    const { isPublished, isVersion, formik } = this.props;\n    const { handleSubmit } = formik;\n    const { setSubmitContext } = this.context;\n\n    setSubmitContext(DepositFormSubmitActions.DELETE, {\n      isDiscardingVersion: isPublished || isVersion,\n    });\n    handleSubmit(event);\n    this.closeConfirmModal();\n  };\n\n  render() {\n    const {\n      draftExists,\n      isPublished,\n      isVersion,\n      actionState,\n      formik,\n      ...ui // only has ActionButton props\n    } = this.props;\n    const { modalOpen } = this.state;\n\n    const { isSubmitting } = formik;\n\n    const uiProps = _omit(ui, [\"dispatch\"]);\n\n    let actionLbl = \"\";\n    if (!isPublished) {\n      actionLbl = isVersion ? DISCARD_VERSION_LBL : DELETE_LBL;\n    } else {\n      actionLbl = DISCARD_CHANGES_LBL;\n    }\n    const color = isPublished ? \"warning\" : \"negative\";\n    const capitalizedActionLbl = _capitalize(actionLbl);\n\n    return (\n      <>\n        <Button\n          disabled={!draftExists || isSubmitting}\n          onClick={this.openConfirmModal}\n          className={color}\n          icon\n          loading={isSubmitting && actionState === DRAFT_DELETE_STARTED}\n          labelPosition=\"left\"\n          {...uiProps}\n          content={capitalizedActionLbl}\n        />\n\n        <Modal open={modalOpen} onClose={this.closeConfirmModal} size=\"tiny\">\n          <Modal.Content>\n            <DialogText actionLbl={actionLbl} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.closeConfirmModal} floated=\"left\">\n              {i18next.t(\"Cancel\")}\n            </Button>\n            <Button\n              className={color}\n              onClick={this.handleDelete}\n              loading={isSubmitting && actionState === DRAFT_DELETE_STARTED}\n              icon=\"trash alternate outline\"\n              content={capitalizedActionLbl}\n            />\n          </Modal.Actions>\n        </Modal>\n      </>\n    );\n  }\n}\n\nDeleteButtonComponent.propTypes = {\n  draftExists: PropTypes.bool,\n  isPublished: PropTypes.bool,\n  isVersion: PropTypes.bool,\n  actionState: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n};\n\nDeleteButtonComponent.defaultProps = {\n  draftExists: false,\n  isPublished: false,\n  isVersion: false,\n  actionState: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  draftExists: Boolean(state.deposit.record.id),\n  isPublished: state.deposit.record.is_published,\n  isVersion: state.deposit.record.versions?.index > 1,\n  actionState: state.deposit.actionState,\n});\n\nexport const DeleteButton = connect(\n  mapStateToProps,\n  null\n)(connectFormik(DeleteButtonComponent));\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2022 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { connect as connectFormik } from \"formik\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DRAFT_PREVIEW_STARTED } from \"../../state/types\";\nimport { Button } from \"semantic-ui-react\";\nimport _omit from \"lodash/omit\";\nimport PropTypes from \"prop-types\";\n\nexport class PreviewButtonComponent extends Component {\n  static contextType = DepositFormSubmitContext;\n\n  handlePreview = (event, handleSubmit) => {\n    const { setSubmitContext } = this.context;\n\n    setSubmitContext(DepositFormSubmitActions.PREVIEW);\n    handleSubmit(event);\n  };\n\n  render() {\n    const { actionState, formik, ...ui } = this.props;\n    const { handleSubmit, isSubmitting } = formik;\n\n    const uiProps = _omit(ui, [\"dispatch\"]);\n\n    return (\n      <Button\n        name=\"preview\"\n        disabled={isSubmitting}\n        onClick={(e) => this.handlePreview(e, handleSubmit)}\n        loading={isSubmitting && actionState === DRAFT_PREVIEW_STARTED}\n        icon=\"eye\"\n        labelPosition=\"left\"\n        content={i18next.t(\"Preview\")}\n        {...uiProps}\n      />\n    );\n  }\n}\n\nPreviewButtonComponent.propTypes = {\n  actionState: PropTypes.string,\n  formik: PropTypes.object.isRequired,\n};\n\nPreviewButtonComponent.defaultProps = {\n  actionState: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n  record: state.deposit.record,\n});\n\nexport const PreviewButton = connect(\n  mapStateToProps,\n  null\n)(connectFormik(PreviewButtonComponent));\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\n\nexport const CommunityContext = React.createContext({});\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2024 CERN.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { get } from \"lodash\";\nimport _capitalize from \"lodash/capitalize\";\nimport PropTypes from \"prop-types\";\nimport React, { useContext } from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\nimport { CommunityCompactItem } from \"@js/invenio_communities/community\";\nimport { CommunityContext } from \"./CommunityContext\";\nimport { InvenioPopup } from \"react-invenio-forms\";\n\nexport const CommunityListItem = ({ result, record, isInitialSubmission }) => {\n  const {\n    setLocalCommunity,\n    getChosenCommunity,\n    userCommunitiesMemberships,\n    displaySelected,\n  } = useContext(CommunityContext);\n\n  const { metadata } = result;\n  const itemSelected = getChosenCommunity()?.id === result.id;\n  const userMembership = userCommunitiesMemberships[result[\"id\"]];\n  const invalidPermissionLevel =\n    record.access.record === \"public\" && result.access.visibility === \"restricted\";\n  const hasTheme = get(result, \"theme.enabled\");\n  const dedicatedUpload = isInitialSubmission && hasTheme;\n  const isDisabled = invalidPermissionLevel || dedicatedUpload;\n  const actions = (\n    <>\n      {invalidPermissionLevel && (\n        <InvenioPopup\n          popupId=\"community-inclusion-info-popup\"\n          size=\"small\"\n          trigger={\n            <Icon className=\"mb-5\" color=\"grey\" name=\"question circle outline\" />\n          }\n          ariaLabel={i18next.t(\"Community inclusion information\")}\n          content={i18next.t(\n            \"Submission to this community is only allowed if the record is restricted.\"\n          )}\n        />\n      )}\n      {dedicatedUpload && (\n        <>\n          <InvenioPopup\n            popupId=\"community-inclusion-info-popup\"\n            size=\"small\"\n            trigger={\n              <Icon className=\"mb-5\" color=\"grey\" name=\"question circle outline\" />\n            }\n            ariaLabel={i18next.t(\"Community submission conditions information\")}\n            content={i18next.t(\n              \"Submission to this community is only allowed by dedicated upload form. Use the button to jump to the form.\"\n            )}\n          />\n          <Button size=\"tiny\" as=\"a\" href={`/communities/${result.slug}`}>\n            Go to the community\n          </Button>\n        </>\n      )}\n      {!dedicatedUpload && (\n        <Button\n          content={\n            displaySelected && itemSelected\n              ? i18next.t(\"Selected\")\n              : i18next.t(\"Select\")\n          }\n          size=\"tiny\"\n          positive={displaySelected && itemSelected}\n          onClick={() => setLocalCommunity(result)}\n          disabled={isDisabled}\n          aria-label={i18next.t(\"Select {{title}}\", { title: metadata.title })}\n        />\n      )}\n    </>\n  );\n\n  const extraLabels = (\n    <>\n      {userMembership && (\n        <Label size=\"small\" horizontal color=\"teal\">\n          <Icon name=\"key\" />\n          {_capitalize(userMembership)}\n        </Label>\n      )}\n      {hasTheme && (\n        <Label color=\"green\" horizontal size=\"small\">\n          <Icon name=\"check circle\" />\n          Verified\n        </Label>\n      )}\n    </>\n  );\n\n  return (\n    <CommunityCompactItem\n      result={result}\n      actions={actions}\n      extraLabels={extraLabels}\n      showPermissionLabel\n    />\n  );\n};\n\nCommunityListItem.propTypes = {\n  result: PropTypes.object.isRequired,\n  record: PropTypes.object.isRequired,\n  isInitialSubmission: PropTypes.bool,\n};\n\nCommunityListItem.defaultProps = {\n  isInitialSubmission: true,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React, { Component } from \"react\";\nimport { OverridableContext, parametrize } from \"react-overridable\";\nimport {\n  EmptyResults,\n  Error,\n  InvenioSearchApi,\n  Pagination,\n  ReactSearchKit,\n  ResultsList,\n  ResultsLoader,\n  SearchBar,\n} from \"react-searchkit\";\nimport { Grid, Menu, Modal } from \"semantic-ui-react\";\nimport { CommunityListItem } from \"./CommunityListItem\";\nimport PropTypes from \"prop-types\";\n\nexport class CommunitySelectionSearch extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      apiConfigs: { allCommunities },\n    } = this.props;\n\n    this.state = {\n      selectedConfig: allCommunities,\n    };\n  }\n\n  render() {\n    const {\n      selectedConfig: {\n        searchApi: selectedSearchApi,\n        appId: selectedAppId,\n        initialQueryState: selectedInitialQueryState,\n        toggleText,\n      },\n    } = this.state;\n    const {\n      apiConfigs: { allCommunities, myCommunities },\n      record,\n      isInitialSubmission,\n    } = this.props;\n    const searchApi = new InvenioSearchApi(selectedSearchApi);\n    const overriddenComponents = {\n      [`${selectedAppId}.ResultsList.item`]: parametrize(CommunityListItem, {\n        record: record,\n        isInitialSubmission: isInitialSubmission,\n      }),\n    };\n    return (\n      <OverridableContext.Provider value={overriddenComponents}>\n        <ReactSearchKit\n          appName={selectedAppId}\n          urlHandlerApi={{ enabled: false }}\n          searchApi={searchApi}\n          key={selectedAppId}\n          initialQueryState={selectedInitialQueryState}\n        >\n          <>\n            <Modal.Content as={Grid} className=\"m-0 pb-0\">\n              <Grid.Column\n                mobile={16}\n                tablet={8}\n                computer={8}\n                textAlign=\"left\"\n                floated=\"left\"\n                className=\"pt-0 pl-0\"\n              >\n                <Menu role=\"tablist\" compact>\n                  <Menu.Item\n                    as=\"button\"\n                    role=\"tab\"\n                    id=\"all-communities-tab\"\n                    aria-selected={selectedAppId === allCommunities.appId}\n                    aria-controls={allCommunities.appId}\n                    name=\"All\"\n                    active={selectedAppId === allCommunities.appId}\n                    onClick={() =>\n                      this.setState({\n                        selectedConfig: allCommunities,\n                      })\n                    }\n                  >\n                    {i18next.t(\"All\")}\n                  </Menu.Item>\n                  <Menu.Item\n                    as=\"button\"\n                    role=\"tab\"\n                    id=\"my-communities-tab\"\n                    aria-selected={selectedAppId === myCommunities.appId}\n                    aria-controls={myCommunities.appId}\n                    name=\"My communities\"\n                    active={selectedAppId === myCommunities.appId}\n                    onClick={() =>\n                      this.setState({\n                        selectedConfig: myCommunities,\n                      })\n                    }\n                  >\n                    {i18next.t(\"My communities\")}\n                  </Menu.Item>\n                </Menu>\n              </Grid.Column>\n              <Grid.Column\n                mobile={16}\n                tablet={8}\n                computer={8}\n                floated=\"right\"\n                verticalAlign=\"middle\"\n                className=\"pt-0 pr-0 pl-0\"\n              >\n                <SearchBar\n                  placeholder={toggleText}\n                  autofocus\n                  actionProps={{\n                    \"icon\": \"search\",\n                    \"content\": null,\n                    \"className\": \"search\",\n                    \"aria-label\": i18next.t(\"Search\"),\n                  }}\n                />\n              </Grid.Column>\n            </Modal.Content>\n\n            <Modal.Content\n              role=\"tabpanel\"\n              id={selectedAppId}\n              scrolling\n              className=\"community-list-results\"\n            >\n              <ResultsLoader>\n                <EmptyResults />\n                <Error />\n                <ResultsList />\n              </ResultsLoader>\n            </Modal.Content>\n\n            <Modal.Content className=\"text-align-center\">\n              <Pagination />\n            </Modal.Content>\n          </>\n        </ReactSearchKit>\n      </OverridableContext.Provider>\n    );\n  }\n}\n\nCommunitySelectionSearch.propTypes = {\n  apiConfigs: PropTypes.shape({\n    allCommunities: PropTypes.shape({\n      appId: PropTypes.string.isRequired,\n      initialQueryState: PropTypes.object.isRequired,\n      searchApi: PropTypes.object.isRequired,\n    }),\n    myCommunities: PropTypes.shape({\n      appId: PropTypes.string.isRequired,\n      initialQueryState: PropTypes.object.isRequired,\n      searchApi: PropTypes.object.isRequired,\n    }),\n  }),\n  record: PropTypes.object.isRequired,\n  isInitialSubmission: PropTypes.bool,\n};\n\nCommunitySelectionSearch.defaultProps = {\n  isInitialSubmission: true,\n  apiConfigs: {\n    allCommunities: {\n      initialQueryState: { size: 5, page: 1 },\n      searchApi: {\n        axios: {\n          url: \"/api/communities\",\n          headers: { Accept: \"application/vnd.inveniordm.v1+json\" },\n        },\n      },\n      appId: \"ReactInvenioDeposit.CommunitySelectionSearch.AllCommunities\",\n      toggleText: \"Search in all communities\",\n    },\n    myCommunities: {\n      initialQueryState: { size: 5, page: 1 },\n      searchApi: {\n        axios: {\n          url: \"/api/user/communities\",\n          headers: { Accept: \"application/vnd.inveniordm.v1+json\" },\n        },\n      },\n      appId: \"ReactInvenioDeposit.CommunitySelectionSearch.MyCommunities\",\n      toggleText: \"Search in my communities\",\n    },\n  },\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Modal, Button } from \"semantic-ui-react\";\nimport { CommunityContext } from \"./CommunityContext\";\nimport { CommunitySelectionSearch } from \"./CommunitySelectionSearch\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nexport class CommunitySelectionModalComponent extends Component {\n  constructor(props) {\n    super(props);\n    const { chosenCommunity, userCommunitiesMemberships, displaySelected } = props;\n\n    this.state = {\n      localChosenCommunity: chosenCommunity,\n    };\n\n    this.contextValue = {\n      setLocalCommunity: this.setCommunity,\n      getChosenCommunity: this.getChosenCommunity,\n      userCommunitiesMemberships,\n      displaySelected,\n    };\n  }\n\n  getChosenCommunity = () => {\n    const { localChosenCommunity } = this.state;\n    return localChosenCommunity;\n  };\n\n  setCommunity = (community) => {\n    const { onCommunityChange } = this.props;\n    onCommunityChange(community);\n    this.setState({\n      localChosenCommunity: community,\n    });\n  };\n\n  modalTrigger = () => {\n    const { trigger, modalOpen } = this.props;\n    if (!_isEmpty(trigger)) {\n      return React.cloneElement(trigger, {\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": modalOpen,\n      });\n    }\n  };\n\n  handleModalOpen = () => {\n    const { chosenCommunity, onModalChange } = this.props;\n    this.setState({\n      localChosenCommunity: chosenCommunity,\n    });\n    onModalChange && onModalChange(true);\n  };\n  render() {\n    const {\n      extraContentComponents,\n      modalHeader,\n      onModalChange,\n      modalOpen,\n      apiConfigs,\n      handleClose,\n      record,\n      isInitialSubmission,\n    } = this.props;\n\n    return (\n      <CommunityContext.Provider value={this.contextValue}>\n        <Modal\n          role=\"dialog\"\n          aria-labelledby=\"community-modal-header\"\n          id=\"community-selection-modal\"\n          className=\"m-0\"\n          closeIcon\n          closeOnDimmerClick={false}\n          open={modalOpen}\n          onClose={() => {\n            onModalChange && onModalChange(false);\n          }}\n          onOpen={this.handleModalOpen}\n          trigger={this.modalTrigger()}\n        >\n          <Modal.Header>\n            <Header as=\"h2\" size=\"small\" id=\"community-modal-header\" className=\"mt-5\">\n              {modalHeader}\n            </Header>\n          </Modal.Header>\n\n          <CommunitySelectionSearch\n            apiConfigs={apiConfigs}\n            record={record}\n            isInitialSubmission={isInitialSubmission}\n          />\n\n          {extraContentComponents && (\n            <Modal.Content>{extraContentComponents}</Modal.Content>\n          )}\n\n          <Modal.Actions>\n            <Button onClick={handleClose}>{i18next.t(\"Close\")}</Button>\n          </Modal.Actions>\n        </Modal>\n      </CommunityContext.Provider>\n    );\n  }\n}\n\nCommunitySelectionModalComponent.propTypes = {\n  chosenCommunity: PropTypes.object,\n  onCommunityChange: PropTypes.func.isRequired,\n  trigger: PropTypes.object,\n  userCommunitiesMemberships: PropTypes.object.isRequired,\n  extraContentComponents: PropTypes.node,\n  modalHeader: PropTypes.string,\n  onModalChange: PropTypes.func,\n  displaySelected: PropTypes.bool,\n  modalOpen: PropTypes.bool,\n  apiConfigs: PropTypes.object,\n  handleClose: PropTypes.func.isRequired,\n  record: PropTypes.object.isRequired,\n  isInitialSubmission: PropTypes.bool,\n};\n\nCommunitySelectionModalComponent.defaultProps = {\n  chosenCommunity: undefined,\n  extraContentComponents: undefined,\n  modalHeader: i18next.t(\"Select a community\"),\n  onModalChange: undefined,\n  displaySelected: false,\n  modalOpen: false,\n  trigger: undefined,\n  apiConfigs: undefined,\n  isInitialSubmission: true,\n};\n\nconst mapStateToProps = (state) => ({\n  userCommunitiesMemberships: state.deposit.config.user_communities_memberships,\n});\n\nexport const CommunitySelectionModal = connect(\n  mapStateToProps,\n  null\n)(CommunitySelectionModalComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { connect as connectFormik } from \"formik\";\nimport _get from \"lodash/get\";\nimport _omit from \"lodash/omit\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Icon, Message, Modal } from \"semantic-ui-react\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DRAFT_PUBLISH_STARTED } from \"../../state/types\";\n\nclass PublishButtonComponent extends Component {\n  state = { isConfirmModalOpen: false };\n\n  static contextType = DepositFormSubmitContext;\n\n  openConfirmModal = () => this.setState({ isConfirmModalOpen: true });\n\n  closeConfirmModal = () => this.setState({ isConfirmModalOpen: false });\n\n  handlePublish = (event, handleSubmit, publishWithoutCommunity) => {\n    const { setSubmitContext } = this.context;\n\n    setSubmitContext(\n      publishWithoutCommunity\n        ? DepositFormSubmitActions.PUBLISH_WITHOUT_COMMUNITY\n        : DepositFormSubmitActions.PUBLISH\n    );\n    handleSubmit(event);\n    this.closeConfirmModal();\n  };\n\n  isDisabled = (values, isSubmitting, numberOfFiles) => {\n    const filesEnabled = _get(values, \"files.enabled\", false);\n    const filesMissing = filesEnabled && !numberOfFiles;\n    return isSubmitting || filesMissing;\n  };\n\n  render() {\n    const {\n      actionState,\n      numberOfFiles,\n      buttonLabel,\n      publishWithoutCommunity,\n      formik,\n      publishModalExtraContent,\n      ...ui\n    } = this.props;\n    const { isConfirmModalOpen } = this.state;\n    const { values, isSubmitting, handleSubmit } = formik;\n\n    const uiProps = _omit(ui, [\"dispatch\"]);\n\n    return (\n      <>\n        <Button\n          disabled={this.isDisabled(values, isSubmitting, numberOfFiles)}\n          name=\"publish\"\n          onClick={this.openConfirmModal}\n          positive\n          icon=\"upload\"\n          loading={isSubmitting && actionState === DRAFT_PUBLISH_STARTED}\n          labelPosition=\"left\"\n          content={buttonLabel}\n          {...uiProps}\n          type=\"button\" // needed so the formik form doesn't handle it as submit button i.e enable HTML validation on required input fields\n        />\n        {isConfirmModalOpen && (\n          <Modal\n            open={isConfirmModalOpen}\n            onClose={this.closeConfirmModal}\n            size=\"small\"\n            closeIcon\n            closeOnDimmerClick={false}\n          >\n            <Modal.Header>\n              {i18next.t(\"Are you sure you want to publish this record?\")}\n            </Modal.Header>\n            {/* the modal text should only ever come from backend configuration */}\n            <Modal.Content>\n              <Message visible warning>\n                <p>\n                  <Icon name=\"warning sign\" />{\" \"}\n                  {i18next.t(\n                    \"Once the record is published you will no longer be able to change the files in the upload! However, you will still be able to update the record's metadata later.\"\n                  )}\n                </p>\n              </Message>\n              {publishModalExtraContent && (\n                <div dangerouslySetInnerHTML={{ __html: publishModalExtraContent }} />\n              )}\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={this.closeConfirmModal} floated=\"left\">\n                {i18next.t(\"Cancel\")}\n              </Button>\n              <Button\n                onClick={(event) =>\n                  this.handlePublish(event, handleSubmit, publishWithoutCommunity)\n                }\n                positive\n                content={buttonLabel}\n              />\n            </Modal.Actions>\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nPublishButtonComponent.propTypes = {\n  buttonLabel: PropTypes.string,\n  publishWithoutCommunity: PropTypes.bool,\n  actionState: PropTypes.string,\n  numberOfFiles: PropTypes.number.isRequired,\n  formik: PropTypes.object.isRequired,\n  publishModalExtraContent: PropTypes.string,\n};\n\nPublishButtonComponent.defaultProps = {\n  buttonLabel: i18next.t(\"Publish\"),\n  publishWithoutCommunity: false,\n  actionState: undefined,\n  publishModalExtraContent: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n  numberOfFiles: Object.values(state.files.entries).length,\n  publishModalExtraContent: state.deposit.config.publish_modal_extra,\n});\n\nexport const PublishButton = connect(\n  mapStateToProps,\n  null\n)(connectFormik(PublishButtonComponent));\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _isEmpty from \"lodash/isEmpty\";\nimport {\n  DISCARD_PID_FAILED,\n  DISCARD_PID_STARTED,\n  DISCARD_PID_SUCCEEDED,\n  DRAFT_DELETE_FAILED,\n  DRAFT_DELETE_STARTED,\n  DRAFT_FETCHED,\n  DRAFT_HAS_VALIDATION_ERRORS,\n  DRAFT_PREVIEW_FAILED,\n  DRAFT_PREVIEW_STARTED,\n  DRAFT_PUBLISH_FAILED,\n  DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS,\n  DRAFT_PUBLISH_STARTED,\n  DRAFT_SAVE_FAILED,\n  DRAFT_SAVE_STARTED,\n  DRAFT_SAVE_SUCCEEDED,\n  DRAFT_SUBMIT_REVIEW_FAILED,\n  DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS,\n  DRAFT_SUBMIT_REVIEW_STARTED,\n  RESERVE_PID_FAILED,\n  RESERVE_PID_STARTED,\n  RESERVE_PID_SUCCEEDED,\n  SET_COMMUNITY,\n} from \"../types\";\n\nexport class DepositStatus {\n  static DRAFT = \"draft\";\n  static NEW_VERSION_DRAFT = \"new_version_draft\";\n  static DRAFT_WITH_REVIEW = \"draft_with_review\";\n  static IN_REVIEW = \"in_review\";\n  static DECLINED = \"declined\";\n  static EXPIRED = \"expired\";\n  static PUBLISHED = \"published\";\n\n  static allowsReviewDeletionStates = [\n    DepositStatus.DRAFT_WITH_REVIEW,\n    DepositStatus.DECLINED,\n    DepositStatus.EXPIRED,\n  ];\n\n  static allowsReviewUpdateStates = [\n    DepositStatus.DRAFT_WITH_REVIEW,\n    DepositStatus.DECLINED,\n    DepositStatus.EXPIRED,\n    DepositStatus.DRAFT,\n  ];\n\n  static disallowsSubmitForReviewStates = [\n    DepositStatus.PUBLISHED,\n    DepositStatus.IN_REVIEW,\n    DepositStatus.NEW_VERSION_DRAFT,\n  ];\n}\n\nfunction hasStatus(record, statuses = []) {\n  return statuses.includes(record.status);\n}\n\nfunction getSelectedCommunityMetadata(record, selectedCommunity) {\n  switch (selectedCommunity) {\n    case undefined: {\n      // when `undefined`, retrieve the community from the record, if previously selected\n      const reviewCommunityId = record.parent?.review?.receiver?.community;\n      const defaultCommunityId = record.parent?.communities?.default;\n      const hasCommunity = reviewCommunityId || defaultCommunityId;\n      if (!hasCommunity) {\n        // community never selected\n        return undefined;\n      }\n\n      const alreadyPublished = hasStatus(record, [\n        DepositStatus.PUBLISHED,\n        DepositStatus.NEW_VERSION_DRAFT,\n      ]);\n\n      // record should be expanded\n      return alreadyPublished\n        ? record.expanded.parent.communities.default\n        : record.expanded.parent.review.receiver;\n    }\n    case null:\n      // when value is `null`, the selected community was deselected\n      return null;\n    default:\n      return selectedCommunity;\n  }\n}\n\n/**\n * Given a draft and optionally a newly selected community, it computes multiple states. The computed\n * states are split in 2 namespaces, `ui` and `actions`. The former is holding state regarding\n * the UI components while the later holds the state that is used on redux actions. More specifically:\n *\n * - `actions.shouldUpdateReview`: true if the review associated with the draft needs to be updated or created i.e\n * all of the following are true:\n *     - user has selected a community\n *     - the selected community has a saved request in the backend\n *     - the draft status is one of `DepositStatus.allowsReviewUpdateStates`\n *     - the community selected for the draft has not a declined/expired request associated with it\n * - `actions.shouldDeleteReview`: true if the review associated with the draft needs to be deleted i.e\n * all of the following are true:\n *     - user has deselected a community\n *     - the draft status is one of `DepositStatus.allowsReviewDeletionStates`\n * - `actions.communityStateMustBeChecked`: true if one of the `shouldUpdateReview` or `shouldDeleteReview` is true\n * - `ui.showSubmitForReviewButton`: true if all of the following are true:\n *     - user has selected a community\n *     - the associated review for the selected community is not declined/expired\n *     - the record is not published\n * - `ui.showDirectPublishButton`: true if all of the following are true:\n *     - user has selected a community\n *     - user can direct publish to a community\n *     - the record is not published\n * - `ui.disableSubmitForReviewButton`: true if all the following are true\n *     - `ui.showSubmitForReviewButton` is true\n *     - the draft status is one of `DepositStatus.disallowsSubmitForReviewStates`\n * - `ui.showChangeCommunityButton`: true if the associated review for the selected community is declined/expired\n * - `ui.showCommunitySelectionButton`: true if the record is not published\n * - `ui.disableCommunitySelectionButton`: true `ui.showCommunitySelectionButton` is true and any of the following is true:\n *     - the associated review for the selected community is declined/expired\n *     - the draft status is one of `DepositStatus.disallowsSubmitForReviewStates` and `ui.showCommunityHeader` is false\n * - `ui.showCommunityHeader`: false if all of the following is true:\n *     - the draft is published and\n *     - the `record.parent.communities` is empty i.e the record was published without a community selected or,\n *     - the selectedCommunity equals to `unresolvedCommunity` i.e the linked community is not found.\n *\n * When the `selectedCommunity` param is omitted, it will retrieve the community from the draft, if any.\n *\n * @param {object} record: the latest version of the record\n * @param {object} selectedCommunity: the selected community, `null` to deselect.\n * @returns a new state for the deposit form\n */\nexport function computeDepositState(record, selectedCommunity = undefined) {\n  const depositStatusAllowsReviewDeletion = hasStatus(\n    record,\n    DepositStatus.allowsReviewDeletionStates\n  );\n  const depositStatusAllowsReviewUpdate = hasStatus(\n    record,\n    DepositStatus.allowsReviewUpdateStates\n  );\n  const depositStatusDisallowsSubmitForReview = hasStatus(\n    record,\n    DepositStatus.disallowsSubmitForReviewStates\n  );\n\n  // Serialize selectedCommunity\n  const _selectedCommunity = getSelectedCommunityMetadata(record, selectedCommunity);\n  const communityIsSelected = !_isEmpty(_selectedCommunity);\n\n  const draftReview = record?.parent?.review;\n\n  // check if the selected community has a request created\n  const isReviewForSelectedCommunityCreated =\n    hasStatus(record, [DepositStatus.DRAFT_WITH_REVIEW]) &&\n    draftReview?.receiver?.community === _selectedCommunity?.id;\n\n  // check if the selected community has a declined or expired request\n  const isReviewForSelectedCommunityDeclinedOrExpired =\n    hasStatus(record, [DepositStatus.DECLINED, DepositStatus.EXPIRED]) &&\n    draftReview?.receiver?.community === _selectedCommunity?.id;\n\n  // check if the record is published without a community selected\n  const isGhostCommunity = _selectedCommunity?.is_ghost === true;\n  const _isCommunityResolved = communityIsSelected && !isGhostCommunity;\n\n  const isRecordPublishedWithoutOrUnresolvedCommunity =\n    hasStatus(record, [DepositStatus.PUBLISHED, DepositStatus.NEW_VERSION_DRAFT]) &&\n    (_isEmpty(record.parent?.communities) || !_isCommunityResolved);\n\n  // show direct publish button\n  const _showDirectPublishButton =\n    communityIsSelected &&\n    !hasStatus(record, [DepositStatus.PUBLISHED, DepositStatus.NEW_VERSION_DRAFT]) &&\n    _selectedCommunity.ui.permissions.can_include_directly;\n\n  // show submit for review button conditions extracted to be reused\n  const _showSubmitReviewButton =\n    communityIsSelected &&\n    !isReviewForSelectedCommunityDeclinedOrExpired &&\n    !hasStatus(record, [DepositStatus.PUBLISHED, DepositStatus.NEW_VERSION_DRAFT]);\n\n  // show community selection button conditions extracted to be reused\n  const _showCommunitySelectionButton = !hasStatus(record, [\n    DepositStatus.PUBLISHED,\n    DepositStatus.NEW_VERSION_DRAFT,\n  ]);\n\n  const shouldUpdateReview =\n    communityIsSelected &&\n    depositStatusAllowsReviewUpdate &&\n    !isReviewForSelectedCommunityCreated &&\n    !isReviewForSelectedCommunityDeclinedOrExpired;\n\n  const shouldDeleteReview = !communityIsSelected && depositStatusAllowsReviewDeletion;\n\n  const _disableCommunitySelectionButton =\n    _showCommunitySelectionButton &&\n    (isReviewForSelectedCommunityDeclinedOrExpired ||\n      (depositStatusDisallowsSubmitForReview &&\n        !isRecordPublishedWithoutOrUnresolvedCommunity));\n\n  return {\n    selectedCommunity: _selectedCommunity,\n    ui: {\n      showSubmitForReviewButton: _showSubmitReviewButton,\n      showDirectPublishButton: _showDirectPublishButton,\n      disableSubmitForReviewButton:\n        _showSubmitReviewButton && depositStatusDisallowsSubmitForReview,\n      showChangeCommunityButton: isReviewForSelectedCommunityDeclinedOrExpired,\n      showCommunitySelectionButton: _showCommunitySelectionButton,\n      showCommunityHeader: !isRecordPublishedWithoutOrUnresolvedCommunity,\n      disableCommunitySelectionButton: _disableCommunitySelectionButton,\n    },\n    actions: {\n      shouldUpdateReview,\n      shouldDeleteReview,\n      communityStateMustBeChecked: shouldUpdateReview || shouldDeleteReview,\n    },\n  };\n}\n\nconst depositReducer = (state = {}, action) => {\n  switch (action.type) {\n    case DRAFT_SAVE_STARTED:\n    case DRAFT_PUBLISH_STARTED:\n    case DRAFT_DELETE_STARTED:\n    case DRAFT_PREVIEW_STARTED:\n      return {\n        ...state,\n        actionState: action.type,\n      };\n    case DRAFT_SUBMIT_REVIEW_STARTED:\n      return {\n        ...state,\n        actionState: action.type,\n        actionStateExtra: {\n          reviewComment: action.payload.reviewComment,\n          directPublish: action.payload.directPublish,\n        },\n      };\n    case RESERVE_PID_STARTED:\n    case DISCARD_PID_STARTED:\n      return {\n        ...state,\n        actionState: action.type,\n        actionStateExtra: { pidType: action.payload.pidType },\n      };\n    case RESERVE_PID_SUCCEEDED:\n    case DISCARD_PID_SUCCEEDED:\n      return {\n        ...state,\n        record: {\n          ...state.record,\n          ...action.payload.data,\n        },\n        editorState: computeDepositState(\n          action.payload.data,\n          state.editorState.selectedCommunity\n        ),\n        errors: {},\n        actionState: action.type,\n        actionStateExtra: {},\n      };\n    case DRAFT_FETCHED:\n    case DRAFT_SAVE_SUCCEEDED:\n      return {\n        ...state,\n        record: {\n          // populate record only with fresh backend response\n          ...action.payload.data,\n        },\n        editorState: computeDepositState(\n          action.payload.data,\n          state.editorState.selectedCommunity\n        ),\n        errors: {},\n        actionState: action.type,\n        actionStateExtra: {},\n      };\n    case DRAFT_HAS_VALIDATION_ERRORS:\n    case DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS:\n    case DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS:\n      return {\n        ...state,\n        record: {\n          ...state.record,\n          ...action.payload.data,\n        },\n        editorState: computeDepositState(\n          action.payload.data,\n          state.editorState.selectedCommunity\n        ),\n        errors: { ...action.payload.errors },\n        actionState: action.type,\n      };\n    case DRAFT_SAVE_FAILED:\n    case DRAFT_PUBLISH_FAILED:\n    case DRAFT_DELETE_FAILED:\n    case DRAFT_PREVIEW_FAILED:\n    case RESERVE_PID_FAILED:\n    case DISCARD_PID_FAILED:\n    case DRAFT_SUBMIT_REVIEW_FAILED:\n      return {\n        ...state,\n        errors: { ...action.payload.errors },\n        actionState: action.type,\n        actionStateExtra: {},\n      };\n    case SET_COMMUNITY: {\n      let recordCopy = {\n        ...state.record,\n      };\n\n      const isCommunityRestricted =\n        action.payload?.community?.access?.visibility === \"restricted\";\n      const isRecordPublic = recordCopy.access.record === \"public\";\n\n      if (isRecordPublic && isCommunityRestricted) {\n        recordCopy = {\n          ...state.record,\n          access: {\n            files: \"restricted\",\n            record: \"restricted\",\n          },\n        };\n      }\n\n      return {\n        ...state,\n        record: recordCopy,\n        editorState: computeDepositState(recordCopy, action.payload.community),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default depositReducer;\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { Formik } from \"formik\";\nimport _get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport {\n  ErrorLabel,\n  RadioField,\n  TextAreaField,\n  ErrorMessage,\n} from \"react-invenio-forms\";\nimport { Button, Checkbox, Form, Icon, Message, Modal } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\n\nexport class SubmitReviewModal extends Component {\n  componentDidMount() {\n    // A11y: Focus the first input field in the form\n    const firstFormFieldWrap = document.getElementById(\"accept-access-checkbox\");\n    const checkboxElem = firstFormFieldWrap.querySelector(\"input\");\n    checkboxElem?.focus();\n  }\n\n  ConfirmSubmitReviewSchema = Yup.object({\n    acceptAccessToRecord: Yup.bool().oneOf([true], i18next.t(\"You must accept this.\")),\n    reviewComment: Yup.string(),\n  });\n\n  render() {\n    const {\n      initialReviewComment,\n      isConfirmModalOpen,\n      community,\n      onClose,\n      onSubmit,\n      publishModalExtraContent,\n      directPublish,\n      errors,\n      loading,\n      record,\n    } = this.props;\n    const communityTitle = community.metadata.title;\n\n    const directPublishCase = () => {\n      headerTitle = i18next.t(\"Publish to community\");\n      msgWarningTitle = i18next.t(\n        \"Before publishing to the community, please read and check the following:\"\n      );\n      msgWarningText1 = i18next.t(\n        \"Your upload will be <bold>immediately published</bold> in '{{communityTitle}}'. You will no longer be able to change the files in the upload! However, you will still be able to update the record's metadata later.\",\n        { communityTitle }\n      );\n      submitBtnLbl = i18next.t(\"Publish record to community\");\n    };\n\n    let headerTitle, msgWarningTitle, msgWarningText1, submitBtnLbl;\n    // if record is passed and it is published\n    if (record?.is_published) {\n      headerTitle = i18next.t(\"Submit to community\");\n      msgWarningTitle = i18next.t(\n        \"Before submitting to community, please read and check the following:\"\n      );\n      submitBtnLbl = i18next.t(\"Submit to community\");\n    }\n    // else record is a draft\n    else {\n      if (directPublish) {\n        directPublishCase();\n      } else {\n        headerTitle = i18next.t(\"Submit for review\");\n        msgWarningTitle = i18next.t(\n          \"Before requesting review, please read and check the following:\"\n        );\n        msgWarningText1 = i18next.t(\n          \"If your upload is accepted by the community curators, it will be <bold>immediately published</bold>. Before that, you will still be able to modify metadata and files of this upload.\"\n        );\n        submitBtnLbl = i18next.t(\"Submit record for review\");\n      }\n    }\n\n    // acceptAfterPublishRecord checkbox is absent if record is published\n    const schema = () => {\n      if (record) {\n        return this.ConfirmSubmitReviewSchema;\n      } else {\n        const additionalValidationSchema = Yup.object({\n          acceptAfterPublishRecord: Yup.bool().oneOf(\n            [true],\n            i18next.t(\"You must accept this.\")\n          ),\n        });\n        return this.ConfirmSubmitReviewSchema.concat(additionalValidationSchema);\n      }\n    };\n\n    return (\n      <Formik\n        initialValues={{\n          acceptAccessToRecord: false,\n          acceptAfterPublishRecord: false,\n          reviewComment: initialReviewComment || \"\",\n        }}\n        onSubmit={onSubmit}\n        validationSchema={schema}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ values, handleSubmit }) => {\n          return (\n            <Modal\n              open={isConfirmModalOpen}\n              onClose={onClose}\n              size=\"small\"\n              closeIcon\n              closeOnDimmerClick={false}\n            >\n              <Modal.Header>{headerTitle}</Modal.Header>\n              <Modal.Content>\n                {errors && <ErrorMessage errors={errors} />}\n                <Message visible warning>\n                  <p>\n                    <Icon name=\"warning sign\" />\n                    {msgWarningTitle}\n                  </p>\n                </Message>\n                <Form>\n                  <Form.Field id=\"accept-access-checkbox\">\n                    <RadioField\n                      control={Checkbox}\n                      fieldPath=\"acceptAccessToRecord\"\n                      label={\n                        <Trans\n                          defaults={i18next.t(\n                            \"The '{{communityTitle}}' curators will have access to <bold>view</bold> and <bold>edit</bold> your upload's metadata and files.\",\n                            { communityTitle }\n                          )}\n                          values={{\n                            communityTitle,\n                          }}\n                          components={{ bold: <b /> }}\n                          shouldUnescape\n                        />\n                      }\n                      checked={_get(values, \"acceptAccessToRecord\") === true}\n                      onChange={({ data, formikProps }) => {\n                        formikProps.form.setFieldValue(\n                          \"acceptAccessToRecord\",\n                          data.checked\n                        );\n                      }}\n                      optimized\n                    />\n                    <ErrorLabel\n                      role=\"alert\"\n                      fieldPath=\"acceptAccessToRecord\"\n                      className=\"mt-0 mb-5\"\n                    />\n                  </Form.Field>\n                  {!record && (\n                    <Form.Field>\n                      <RadioField\n                        control={Checkbox}\n                        fieldPath=\"acceptAfterPublishRecord\"\n                        label={\n                          <Trans\n                            defaults={msgWarningText1}\n                            values={{\n                              communityTitle: communityTitle,\n                            }}\n                            components={{ bold: <b /> }}\n                          />\n                        }\n                        checked={_get(values, \"acceptAfterPublishRecord\") === true}\n                        onChange={({ data, formikProps }) => {\n                          formikProps.form.setFieldValue(\n                            \"acceptAfterPublishRecord\",\n                            data.checked\n                          );\n                        }}\n                        optimized\n                      />\n                      <ErrorLabel\n                        role=\"alert\"\n                        fieldPath=\"acceptAfterPublishRecord\"\n                        className=\"mt-0 mb-5\"\n                      />\n                    </Form.Field>\n                  )}\n                  {!directPublish && (\n                    <TextAreaField\n                      fieldPath=\"reviewComment\"\n                      label={i18next.t(\"Message to curators (optional)\")}\n                    />\n                  )}\n\n                  {publishModalExtraContent && (\n                    <div\n                      dangerouslySetInnerHTML={{ __html: publishModalExtraContent }}\n                    />\n                  )}\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button\n                  onClick={onClose}\n                  floated=\"left\"\n                  loading={loading}\n                  disabled={loading}\n                >\n                  {i18next.t(\"Cancel\")}\n                </Button>\n                <Button\n                  name=\"submitReview\"\n                  onClick={(event) => {\n                    handleSubmit(event);\n                  }}\n                  loading={loading}\n                  disabled={loading}\n                  positive={directPublish}\n                  primary={!directPublish}\n                  content={submitBtnLbl}\n                />\n              </Modal.Actions>\n            </Modal>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nSubmitReviewModal.propTypes = {\n  isConfirmModalOpen: PropTypes.bool.isRequired,\n  community: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialReviewComment: PropTypes.string,\n  publishModalExtraContent: PropTypes.string,\n  directPublish: PropTypes.bool,\n  errors: PropTypes.node, // TODO FIXME: Use a common error cmp to display errros.\n  loading: PropTypes.bool,\n  record: PropTypes.object.isRequired,\n};\n\nSubmitReviewModal.defaultProps = {\n  initialReviewComment: \"\",\n  publishModalExtraContent: undefined,\n  directPublish: false,\n  errors: undefined,\n  loading: false,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport { connect as connectFormik } from \"formik\";\nimport _get from \"lodash/get\";\nimport _omit from \"lodash/omit\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DepositStatus } from \"../../state/reducers/deposit\";\nimport { SubmitReviewModal } from \"./SubmitReviewModal\";\n\nclass SubmitReviewButtonComponent extends Component {\n  state = { isConfirmModalOpen: false };\n  static contextType = DepositFormSubmitContext;\n\n  openConfirmModal = () => this.setState({ isConfirmModalOpen: true });\n\n  closeConfirmModal = () => this.setState({ isConfirmModalOpen: false });\n\n  handleSubmitReview = ({ reviewComment }) => {\n    const { formik, directPublish } = this.props;\n    const { handleSubmit } = formik;\n    const { setSubmitContext } = this.context;\n\n    setSubmitContext(DepositFormSubmitActions.SUBMIT_REVIEW, {\n      reviewComment,\n      directPublish,\n    });\n    handleSubmit();\n    this.closeConfirmModal();\n  };\n\n  isDisabled = (numberOfFiles, disableSubmitForReviewButton) => {\n    const { formik } = this.props;\n    const { values, isSubmitting } = formik;\n\n    const filesEnabled = _get(values, \"files.enabled\", false);\n    const filesMissing = filesEnabled && !numberOfFiles;\n    return isSubmitting || filesMissing || disableSubmitForReviewButton;\n  };\n\n  render() {\n    const {\n      actionState,\n      actionStateExtra,\n      community,\n      disableSubmitForReviewButton,\n      directPublish,\n      formik,\n      isRecordSubmittedForReview,\n      numberOfFiles,\n      publishModalExtraContent,\n      ...ui\n    } = this.props;\n\n    const { isSubmitting } = formik;\n\n    const uiProps = _omit(ui, [\"dispatch\"]);\n\n    const { isConfirmModalOpen } = this.state;\n\n    const btnLblSubmitReview = isRecordSubmittedForReview\n      ? i18next.t(\"Submitted for review\")\n      : i18next.t(\"Submit for review\");\n    const buttonLbl = directPublish\n      ? i18next.t(\"Publish to community\")\n      : btnLblSubmitReview;\n\n    return (\n      <>\n        <Button\n          disabled={this.isDisabled(numberOfFiles, disableSubmitForReviewButton)}\n          name=\"SubmitReview\"\n          onClick={this.openConfirmModal}\n          positive={directPublish}\n          primary={!directPublish}\n          icon=\"upload\"\n          loading={isSubmitting && actionState === \"DRAFT_SUBMIT_REVIEW_STARTED\"}\n          labelPosition=\"left\"\n          content={buttonLbl}\n          {...uiProps}\n          type=\"button\" // needed so the formik form doesn't handle it as submit button i.e enable HTML validation on required input fields\n        />\n        {isConfirmModalOpen && (\n          <SubmitReviewModal\n            isConfirmModalOpen={isConfirmModalOpen}\n            initialReviewComment={actionStateExtra.reviewComment}\n            onSubmit={this.handleSubmitReview}\n            community={community}\n            onClose={this.closeConfirmModal}\n            publishModalExtraContent={publishModalExtraContent}\n            directPublish={directPublish}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nSubmitReviewButtonComponent.propTypes = {\n  actionState: PropTypes.string,\n  actionStateExtra: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  numberOfFiles: PropTypes.number,\n  disableSubmitForReviewButton: PropTypes.bool,\n  isRecordSubmittedForReview: PropTypes.bool.isRequired,\n  directPublish: PropTypes.bool,\n  formik: PropTypes.object.isRequired,\n  publishModalExtraContent: PropTypes.string,\n};\n\nSubmitReviewButtonComponent.defaultProps = {\n  actionState: undefined,\n  numberOfFiles: undefined,\n  disableSubmitForReviewButton: undefined,\n  publishModalExtraContent: undefined,\n  directPublish: false,\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n  actionStateExtra: state.deposit.actionStateExtra,\n  community: state.deposit.editorState.selectedCommunity,\n  isRecordSubmittedForReview: state.deposit.record.status === DepositStatus.IN_REVIEW,\n  disableSubmitForReviewButton:\n    state.deposit.editorState.ui.disableSubmitForReviewButton,\n  numberOfFiles: Object.values(state.files.entries).length,\n  publishModalExtraContent: state.deposit.config.publish_modal_extra,\n});\n\nexport const SubmitReviewButton = connect(\n  mapStateToProps,\n  null\n)(connectFormik(SubmitReviewButtonComponent));\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2022-2023 CERN.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { changeSelectedCommunity } from \"../../state/actions\";\nimport { CommunitySelectionModal } from \"../../components/CommunitySelectionModal\";\nimport { PublishButton } from \"./PublishButton\";\nimport { SubmitReviewButton } from \"./SubmitReviewButton\";\n\nclass SubmitReviewOrPublishComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n    };\n  }\n  render() {\n    const {\n      community,\n      changeSelectedCommunityFn,\n      showChangeCommunityButton,\n      showDirectPublishButton,\n      showSubmitForReviewButton,\n      record,\n      ...ui\n    } = this.props;\n    const { modalOpen } = this.state;\n    let result;\n\n    if (showSubmitForReviewButton) {\n      result = (\n        <SubmitReviewButton\n          directPublish={showDirectPublishButton}\n          {...ui}\n          fluid\n          className=\"mb-10\"\n        />\n      );\n    } else if (showChangeCommunityButton) {\n      result = (\n        <>\n          <CommunitySelectionModal\n            onCommunityChange={(community) => {\n              changeSelectedCommunityFn(community);\n            }}\n            onModalChange={(value) => this.setState({ modalOpen: value })}\n            modalOpen={modalOpen}\n            displaySelected\n            record={record}\n            chosenCommunity={community}\n            trigger={\n              <Button content={i18next.t(\"Change community\")} fluid className=\"mb-10\" />\n            }\n          />\n          <PublishButton\n            buttonLabel={i18next.t(\"Publish without community\")}\n            publishWithoutCommunity\n            {...ui}\n          />\n        </>\n      );\n    } else {\n      result = <PublishButton {...ui} />;\n    }\n    return result;\n  }\n}\n\nSubmitReviewOrPublishComponent.propTypes = {\n  community: PropTypes.object,\n  changeSelectedCommunityFn: PropTypes.func.isRequired,\n  showChangeCommunityButton: PropTypes.bool.isRequired,\n  showDirectPublishButton: PropTypes.bool.isRequired,\n  showSubmitForReviewButton: PropTypes.bool.isRequired,\n  record: PropTypes.object.isRequired,\n};\n\nSubmitReviewOrPublishComponent.defaultProps = {\n  community: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  community: state.deposit.editorState.selectedCommunity,\n  showDirectPublishButton: state.deposit.editorState.ui.showDirectPublishButton,\n  showChangeCommunityButton: state.deposit.editorState.ui.showChangeCommunityButton,\n  showSubmitForReviewButton: state.deposit.editorState.ui.showSubmitForReviewButton,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeSelectedCommunityFn: (community) =>\n    dispatch(changeSelectedCommunity(community)),\n});\n\nexport const SubmitReviewOrPublishButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SubmitReviewOrPublishComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"../../api/DepositFormSubmitContext\";\nimport { DRAFT_SAVE_STARTED } from \"../../state/types\";\nimport { scrollTop } from \"../../utils\";\nimport _omit from \"lodash/omit\";\nimport { connect as connectFormik } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nexport class SaveButtonComponent extends Component {\n  static contextType = DepositFormSubmitContext;\n\n  handleSave = (event) => {\n    const { formik } = this.props;\n    const { setSubmitContext } = this.context;\n    const { handleSubmit } = formik;\n\n    setSubmitContext(DepositFormSubmitActions.SAVE);\n    handleSubmit(event);\n    scrollTop();\n  };\n\n  render() {\n    const { actionState, formik, ...ui } = this.props;\n    const { isSubmitting } = formik;\n\n    const uiProps = _omit(ui, [\"dispatch\"]);\n\n    return (\n      <Button\n        name=\"save\"\n        disabled={isSubmitting}\n        onClick={(event) => this.handleSave(event)}\n        icon=\"save\"\n        loading={isSubmitting && actionState === DRAFT_SAVE_STARTED}\n        labelPosition=\"left\"\n        content={i18next.t(\"Save draft\")}\n        {...uiProps}\n      />\n    );\n  }\n}\n\nSaveButtonComponent.propTypes = {\n  formik: PropTypes.object.isRequired,\n  actionState: PropTypes.string,\n};\n\nSaveButtonComponent.defaultProps = {\n  actionState: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n});\n\nexport const SaveButton = connect(\n  mapStateToProps,\n  null\n)(connectFormik(SaveButtonComponent));\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport _get from \"lodash/get\";\nimport _isObject from \"lodash/isObject\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Message } from \"semantic-ui-react\";\nimport {\n  DISCARD_PID_FAILED,\n  DRAFT_DELETE_FAILED,\n  DRAFT_HAS_VALIDATION_ERRORS,\n  DRAFT_PREVIEW_FAILED,\n  DRAFT_PUBLISH_FAILED,\n  DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS,\n  DRAFT_SAVE_FAILED,\n  DRAFT_SAVE_SUCCEEDED,\n  DRAFT_SUBMIT_REVIEW_FAILED,\n  DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS,\n  FILE_IMPORT_FAILED,\n  FILE_UPLOAD_SAVE_DRAFT_FAILED,\n  RESERVE_PID_FAILED,\n} from \"../state/types\";\nimport { leafTraverse } from \"../utils\";\nimport PropTypes from \"prop-types\";\n\nconst defaultLabels = {\n  \"files.enabled\": i18next.t(\"Files\"),\n  \"metadata.resource_type\": i18next.t(\"Resource type\"),\n  \"metadata.title\": i18next.t(\"Title\"),\n  \"metadata.additional_titles\": i18next.t(\"Additional titles\"),\n  \"metadata.publication_date\": i18next.t(\"Publication date\"),\n  \"metadata.creators\": i18next.t(\"Creators\"),\n  \"metadata.contributors\": i18next.t(\"Contributors\"),\n  \"metadata.description\": i18next.t(\"Description\"),\n  \"metadata.additional_descriptions\": i18next.t(\"Additional descriptions\"),\n  \"metadata.rights\": i18next.t(\"Licenses\"),\n  \"metadata.languages\": i18next.t(\"Languages\"),\n  \"metadata.dates\": i18next.t(\"Dates\"),\n  \"metadata.version\": i18next.t(\"Version\"),\n  \"metadata.publisher\": i18next.t(\"Publisher\"),\n  \"metadata.related_identifiers\": i18next.t(\"Related works\"),\n  \"metadata.references\": i18next.t(\"References\"),\n  \"metadata.identifiers\": i18next.t(\"Alternate identifiers\"),\n  \"metadata.subjects\": i18next.t(\"Keywords and subjects\"),\n  \"access.embargo.until\": i18next.t(\"Embargo until\"),\n  \"pids.doi\": i18next.t(\"DOI\"),\n};\n\nconst ACTIONS = {\n  [DRAFT_SAVE_SUCCEEDED]: {\n    feedback: \"positive\",\n    message: i18next.t(\"Record successfully saved.\"),\n  },\n  [DRAFT_HAS_VALIDATION_ERRORS]: {\n    feedback: \"warning\",\n    message: i18next.t(\"Record saved with validation errors:\"),\n  },\n  [DRAFT_SAVE_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"The draft was not saved. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [DRAFT_PUBLISH_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"The draft was not published. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"The draft was not published. Record saved with validation errors:\"\n    ),\n  },\n  [DRAFT_SUBMIT_REVIEW_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"The draft was not submitted for review. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"The draft was not submitted for review. Record saved with validation errors:\"\n    ),\n  },\n  [DRAFT_DELETE_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Draft deletion failed. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [DRAFT_PREVIEW_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Draft preview failed. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [RESERVE_PID_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Identifier reservation failed. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [DISCARD_PID_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Identifier could not be discarded. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [FILE_UPLOAD_SAVE_DRAFT_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Draft save failed before file upload. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n  [FILE_IMPORT_FAILED]: {\n    feedback: \"negative\",\n    message: i18next.t(\n      \"Files import from the previous version failed. Please try again. If the problem persists, contact user support.\"\n    ),\n  },\n};\n\nclass DisconnectedFormFeedback extends Component {\n  constructor(props) {\n    super(props);\n    this.labels = {\n      ...defaultLabels,\n      ...props.labels,\n    };\n  }\n\n  /**\n   * Render error messages inline (if 1) or as list (if multiple).\n   *\n   * @param {Array<String>} messages\n   * @returns String or React node\n   */\n  renderErrorMessages(messages) {\n    const uniqueMessages = [...new Set(messages)];\n    if (uniqueMessages.length === 1) {\n      return messages[0];\n    } else {\n      return (\n        <ul>\n          {uniqueMessages.map((m) => (\n            <li key={m}>{m}</li>\n          ))}\n        </ul>\n      );\n    }\n  }\n\n  /**\n   * Return array of error messages from errorValue object.\n   *\n   * The error message(s) might be deeply nested in the errorValue e.g.\n   *\n   * errorValue = [\n   *   {\n   *     title: \"Missing value\"\n   *   }\n   * ];\n   *\n   * @param {object} errorValue\n   * @returns array of Strings (error messages)\n   */\n  toErrorMessages(errorValue) {\n    let messages = [];\n    let store = (l) => {\n      messages.push(l);\n    };\n    leafTraverse(errorValue, store);\n    return messages;\n  }\n\n  /**\n   * Return object with human readbable labels as keys and error messages as\n   * values given an errors object.\n   *\n   * @param {object} errors\n   * @returns object\n   */\n  toLabelledErrorMessages(errors) {\n    // Step 0 - Create object with collapsed 1st and 2nd level keys\n    //          e.g., {metadata: {creators: ,,,}} => {\"metadata.creators\": ...}\n    // For now, only for metadata, files and access.embargo\n    const metadata = errors.metadata || {};\n    const step0Metadata = Object.entries(metadata).map(([key, value]) => {\n      return [\"metadata.\" + key, value];\n    });\n    const files = errors.files || {};\n    const step0Files = Object.entries(files).map(([key, value]) => {\n      return [\"files.\" + key, value];\n    });\n    const access = errors.access?.embargo || {};\n    const step0Access = Object.entries(access).map(([key, value]) => {\n      return [\"access.embargo.\" + key, value];\n    });\n    const pids = errors.pids || {};\n    const step0Pids = _isObject(pids)\n      ? Object.entries(pids).map(([key, value]) => {\n          return [\"pids.\" + key, value];\n        })\n      : [[\"pids\", pids]];\n    const customFields = errors.custom_fields || {};\n    const step0CustomFields = Object.entries(customFields).map(([key, value]) => {\n      return [\"custom_fields.\" + key, value];\n    });\n    const step0 = Object.fromEntries(\n      step0Metadata\n        .concat(step0Files)\n        .concat(step0Access)\n        .concat(step0Pids)\n        .concat(step0CustomFields)\n    );\n\n    // Step 1 - Transform each error value into array of error messages\n    const step1 = Object.fromEntries(\n      Object.entries(step0).map(([key, value]) => {\n        return [key, this.toErrorMessages(value)];\n      })\n    );\n\n    // Step 2 - Group error messages by label\n    // (different error keys can map to same label e.g. title and\n    // additional_titles)\n    const labelledErrorMessages = {};\n    for (const key in step1) {\n      const label = this.labels[key] || \"Unknown field\";\n      let messages = labelledErrorMessages[label] || [];\n      labelledErrorMessages[label] = messages.concat(step1[key]);\n    }\n\n    return labelledErrorMessages;\n  }\n\n  render() {\n    const { errors: errorsProp, actionState } = this.props;\n\n    const errors = errorsProp || {};\n\n    const { feedback, message } = _get(ACTIONS, actionState, {\n      feedback: undefined,\n      message: undefined,\n    });\n\n    if (!message) {\n      // if no message to display, simply return null\n      return null;\n    }\n\n    const labelledMessages = this.toLabelledErrorMessages(errors);\n    const listErrors = Object.entries(labelledMessages).map(([label, messages]) => (\n      <Message.Item key={label}>\n        <b>{label}</b>: {this.renderErrorMessages(messages)}\n      </Message.Item>\n    ));\n\n    // errors not related to validation, following a different format {status:.., message:..}\n    const backendErrorMessage = errors.message;\n\n    return (\n      <Message\n        visible\n        positive={feedback === \"positive\"}\n        warning={feedback === \"warning\"}\n        negative={feedback === \"negative\"}\n        className=\"flashed top attached\"\n      >\n        <Grid container>\n          <Grid.Column width={15} textAlign=\"left\">\n            <strong>{backendErrorMessage || message}</strong>\n            {listErrors.length > 0 && <Message.List>{listErrors}</Message.List>}\n          </Grid.Column>\n        </Grid>\n      </Message>\n    );\n  }\n}\n\nDisconnectedFormFeedback.propTypes = {\n  errors: PropTypes.object,\n  actionState: PropTypes.string,\n  labels: PropTypes.object,\n};\n\nDisconnectedFormFeedback.defaultProps = {\n  errors: undefined,\n  actionState: undefined,\n  labels: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  actionState: state.deposit.actionState,\n  errors: state.deposit.errors,\n});\n\nexport const FormFeedback = connect(mapStateToProps, null)(DisconnectedFormFeedback);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport _join from \"lodash/join\";\n\nexport class DepositErrorHandler {\n  /* eslint-disable-next-line no-unused-vars */\n  extractErrors(error, record) {\n    const backendErrors = _get(error, \"response.data.errors\", []);\n    const backendErrorMessage = _get(error, \"response.data.message\", \"\");\n    let frontendErrors = { message: backendErrorMessage };\n    for (const fieldError of backendErrors) {\n      const errorPath = _join([...fieldError.parents, fieldError.field], \".\");\n      frontendErrors[errorPath] = fieldError.message;\n    }\n\n    return frontendErrors;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport axios from \"axios\";\nimport _get from \"lodash/get\";\n\nconst BASE_HEADERS = {\n  \"json\": { \"Content-Type\": \"application/json\" },\n  \"vnd+json\": {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/vnd.inveniordm.v1+json\",\n  },\n  \"octet-stream\": { \"Content-Type\": \"application/octet-stream\" },\n};\n\n/**\n * API client response.\n */\nexport class DepositApiClientResponse {\n  constructor(data, errors) {\n    this.data = data;\n    this.errors = errors;\n  }\n}\n\nexport class DepositApiClient {\n  /* eslint-disable no-unused-vars */\n  constructor(additionalApiConfig, createDraftURL, recordSerializer) {\n    if (this.constructor === DepositApiClient) {\n      throw new Error(\"Abstract\");\n    }\n\n    const additionalHeaders = _get(additionalApiConfig, \"headers\");\n    this.apiHeaders = Object.assign({}, BASE_HEADERS, additionalHeaders);\n\n    this.apiConfig = {\n      withCredentials: true,\n      xsrfCookieName: \"csrftoken\",\n      xsrfHeaderName: \"X-CSRFToken\",\n      headers: this.apiHeaders[\"vnd+json\"],\n    };\n    this.axiosWithConfig = axios.create(this.apiConfig);\n    this.cancelToken = axios.CancelToken;\n  }\n\n  async createDraft(draft) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async saveDraft(draft, draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async publishDraft(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async deleteDraft(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async reservePID(draftLinks, pidType) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async discardPID(draftLinks, pidType) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async createOrUpdateReview(draftLinks, communityId) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async deleteReview(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async submitReview(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\n/**\n * API Client for deposits.\n */\nexport class RDMDepositApiClient extends DepositApiClient {\n  constructor(additionalApiConfig, createDraftURL, recordSerializer) {\n    super(additionalApiConfig);\n    this.createDraftURL = createDraftURL;\n    this.recordSerializer = recordSerializer;\n  }\n\n  async _createResponse(axiosRequest) {\n    try {\n      const response = await axiosRequest();\n      const data = this.recordSerializer.deserialize(response.data || {});\n      const errors = this.recordSerializer.deserializeErrors(\n        response.data.errors || []\n      );\n      return new DepositApiClientResponse(data, errors);\n    } catch (error) {\n      const errorData = error.response.data;\n      throw new DepositApiClientResponse({}, errorData);\n    }\n  }\n\n  /**\n   * Calls the API to create a new draft.\n   *\n   * @param {object} draft - Serialized draft\n   */\n  async createDraft(draft) {\n    const payload = this.recordSerializer.serialize(draft);\n    return this._createResponse(() =>\n      this.axiosWithConfig.post(this.createDraftURL, payload, {\n        params: { expand: 1 },\n      })\n    );\n  }\n\n  /**\n   * Calls the API to read a pre-existing draft.\n   *\n   * @param {object} draftLinks - the draft links object\n   */\n  async readDraft(draftLinks) {\n    return this._createResponse(() =>\n      this.axiosWithConfig.get(draftLinks.self, {\n        params: { expand: 1 },\n      })\n    );\n  }\n\n  /**\n   * Calls the API to save a pre-existing draft.\n   *\n   * @param {object} draft - the draft payload\n   */\n  async saveDraft(draft, draftLinks) {\n    const payload = this.recordSerializer.serialize(draft);\n    return this._createResponse(() =>\n      this.axiosWithConfig.put(draftLinks.self, payload, {\n        params: { expand: 1 },\n      })\n    );\n  }\n\n  /**\n   * Publishes the draft by calling its publish link.\n   *\n   * @param {string} draftLinks - the URL to publish the draft\n   */\n  async publishDraft(draftLinks) {\n    return this._createResponse(() =>\n      this.axiosWithConfig.post(draftLinks.publish, {}, { params: { expand: 1 } })\n    );\n  }\n\n  /**\n   * Deletes the draft by calling DELETE on its self link.\n   *\n   * @param {string} draftLinks - the URL to delete the draft\n   */\n  async deleteDraft(draftLinks) {\n    return this._createResponse(() => this.axiosWithConfig.delete(draftLinks.self, {}));\n  }\n\n  /**\n   * Calls the API to reserve a PID.\n   *\n   */\n  async reservePID(draftLinks, pidType) {\n    return this._createResponse(() => {\n      const linkName = `reserve_${pidType}`;\n      const link = draftLinks[linkName];\n      return this.axiosWithConfig.post(\n        link,\n        {},\n        {\n          params: { expand: 1 },\n        }\n      );\n    });\n  }\n\n  /**\n   * Calls the API to discard a previously reserved PID.\n   *\n   */\n  async discardPID(draftLinks, pidType) {\n    return this._createResponse(() => {\n      const linkName = `reserve_${pidType}`;\n      const link = draftLinks[linkName];\n      return this.axiosWithConfig.delete(link, {\n        params: { expand: 1 },\n      });\n    });\n  }\n\n  /**\n   * Creates a review request in initial state for draft by calling its\n   * review link.\n   *\n   * @param {object} draftLinks - the draft links object\n   */\n  async createOrUpdateReview(draftLinks, communityId) {\n    return this._createResponse(() =>\n      this.axiosWithConfig.put(draftLinks.review, {\n        receiver: {\n          community: communityId,\n        },\n        type: \"community-submission\",\n      })\n    );\n  }\n\n  /**\n   * Deletes a review request associated with the draft using its review link.\n   *\n   * @param {object} draftLinks - the draft links object\n   */\n  async deleteReview(draftLinks) {\n    return this._createResponse(() =>\n      this.axiosWithConfig.delete(draftLinks.review, {})\n    );\n  }\n\n  /**\n   * Submits the draft for review by calling its submit-review link.\n   *\n   * @param {object} draftLinks - the draft links object\n   */\n  async submitReview(draftLinks, reviewComment) {\n    return this._createResponse(() => {\n      const payload = reviewComment\n        ? {\n            payload: {\n              content: reviewComment,\n              format: \"html\",\n            },\n          }\n        : {};\n      return this.axiosWithConfig.post(draftLinks[\"submit-review\"], payload);\n    });\n  }\n\n  /**\n   * Cancels the review for the draft by calling its cancel link.\n   *\n   * @param reviewLinks\n   * @param reviewComment\n   */\n  async cancelReview(reviewLinks, reviewComment) {\n    return this.axiosWithConfig.post(\n      reviewLinks.actions.cancel,\n      reviewComment\n        ? {\n            payload: {\n              content: reviewComment,\n              format: \"html\",\n            },\n          }\n        : {}\n    );\n  }\n}\n\n/**\n * Abstract class for File API Client.\n * @constructor\n * @abstract\n */\nexport class DepositFileApiClient {\n  constructor(additionalApiConfig) {\n    if (this.constructor === DepositFileApiClient) {\n      throw new Error(\"Abstract\");\n    }\n    const additionalHeaders = _get(additionalApiConfig, \"headers\", {});\n    this.apiHeaders = Object.assign({}, BASE_HEADERS, additionalHeaders);\n\n    const apiConfig = {\n      withCredentials: true,\n      xsrfCookieName: \"csrftoken\",\n      xsrfHeaderName: \"X-CSRFToken\",\n      headers: this.apiHeaders.json,\n    };\n    this.axiosWithConfig = axios.create(apiConfig);\n  }\n\n  isCancelled(error) {\n    return axios.isCancel(error);\n  }\n\n  initializeFileUpload(initializeUploadUrl, filename) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  uploadFile(uploadUrl, file, onUploadProgress, cancel) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  finalizeFileUpload(finalizeUploadUrl) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  deleteFile(fileLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\n/**\n * Default File API Client for deposits.\n */\nexport class RDMDepositFileApiClient extends DepositFileApiClient {\n  initializeFileUpload(initializeUploadUrl, filename) {\n    const payload = [\n      {\n        key: filename,\n      },\n    ];\n    return this.axiosWithConfig.post(initializeUploadUrl, payload, {});\n  }\n\n  uploadFile(uploadUrl, file, onUploadProgressFn, cancelFn) {\n    return this.axiosWithConfig.put(uploadUrl, file, {\n      headers: this.apiHeaders[\"octet-stream\"],\n      onUploadProgress: (event) => {\n        const percent = Math.floor((event.loaded / event.total) * 100);\n        onUploadProgressFn && onUploadProgressFn(percent);\n      },\n      cancelToken: new axios.CancelToken(cancelFn),\n    });\n  }\n\n  finalizeFileUpload(finalizeUploadUrl) {\n    return this.axiosWithConfig.post(finalizeUploadUrl, {});\n  }\n\n  importParentRecordFiles(draftLinks) {\n    const link = `${draftLinks.self}/actions/files-import`;\n    return this.axiosWithConfig.post(link, {});\n  }\n\n  deleteFile(fileLinks) {\n    return this.axiosWithConfig.delete(fileLinks.self);\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { BaseForm } from \"react-invenio-forms\";\nimport { connect } from \"react-redux\";\nimport {\n  DepositFormSubmitActions,\n  DepositFormSubmitContext,\n} from \"./DepositFormSubmitContext\";\nimport {\n  delete_,\n  discardPID,\n  preview,\n  publish,\n  reservePID,\n  save,\n  submitReview,\n} from \"../state/actions\";\nimport { scrollTop } from \"../utils\";\n\nclass DepositBootstrapComponent extends Component {\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", (e) => {\n      const { fileUploadOngoing } = this.props;\n      if (fileUploadOngoing) {\n        e.returnValue = \"\";\n        return \"\";\n      }\n    });\n    window.addEventListener(\"unload\", async () => {\n      // TODO: cancel all uploads\n      // Investigate if it's possible to wait for the deletion request to complete\n      // before unloading the page\n    });\n  }\n\n  submitContext = undefined;\n\n  setSubmitContext = (actionName, extra = {}) => {\n    this.submitContext = {\n      actionName: actionName,\n      extra: extra,\n    };\n  };\n\n  onFormSubmit = async (values, formikBag) => {\n    const {\n      saveAction,\n      publishAction,\n      submitReview,\n      previewAction,\n      deleteAction,\n      reservePIDAction,\n      discardPIDAction,\n    } = this.props;\n    const { actionName, extra } = this.submitContext;\n\n    let actionFunc = undefined;\n    const params = {};\n    switch (actionName) {\n      case DepositFormSubmitActions.SAVE:\n        actionFunc = saveAction;\n        break;\n      case DepositFormSubmitActions.PUBLISH:\n        actionFunc = publishAction;\n        break;\n      case DepositFormSubmitActions.PUBLISH_WITHOUT_COMMUNITY:\n        actionFunc = publishAction;\n        params[\"removeSelectedCommunity\"] = true;\n        break;\n      case DepositFormSubmitActions.SUBMIT_REVIEW:\n        actionFunc = submitReview;\n        params[\"reviewComment\"] = extra[\"reviewComment\"];\n        params[\"directPublish\"] = extra[\"directPublish\"];\n        break;\n      case DepositFormSubmitActions.PREVIEW:\n        actionFunc = previewAction;\n        break;\n      case DepositFormSubmitActions.DELETE:\n        actionFunc = deleteAction;\n        params[\"isDiscardingVersion\"] = extra[\"isDiscardingVersion\"];\n        break;\n      case DepositFormSubmitActions.RESERVE_PID:\n        actionFunc = reservePIDAction;\n        params[\"pidType\"] = extra[\"pidType\"];\n        break;\n      case DepositFormSubmitActions.DISCARD_PID:\n        actionFunc = discardPIDAction;\n        params[\"pidType\"] = extra[\"pidType\"];\n        break;\n      default:\n        throw Error(\"The submit btn must set the form action name.\");\n    }\n\n    try {\n      await actionFunc(values, params);\n    } catch (error) {\n      // make sure the error contains form errors, and not global errors.\n      if (error && error.errors) {\n        formikBag.setErrors(error.errors);\n      } else {\n        // scroll top to show the global error\n        scrollTop();\n      }\n    } finally {\n      // reset the action name after having handled it\n      this.submitContext = {};\n    }\n  };\n\n  render() {\n    const { errors, record, children, validate, validationSchema } = this.props;\n    return (\n      <DepositFormSubmitContext.Provider\n        value={{ setSubmitContext: this.setSubmitContext }}\n      >\n        <BaseForm\n          onSubmit={this.onFormSubmit}\n          formik={{\n            // enableReinitialise needed due to\n            // updated draft PID (and the endpoint URL as a consequence).\n            // After saving draft for the first time, a new PID is obtained,\n            // initial values need to be updated with draft record containing\n            // the new PID in its payload, otherwise a new PID\n            // is requested on each action, generating countless drafts\n            enableReinitialize: true,\n            initialValues: record,\n            // validate and validationSchema allow a function or schema to be\n            // passed in to enable formik's client-side form validation. If no\n            // values are passed in, no client-side validation is performed.\n            validate: validate,\n            validationSchema: validationSchema,\n            // errors need to be repopulated after form is reinitialised\n            ...(errors && { initialErrors: errors }),\n          }}\n        >\n          {children}\n        </BaseForm>\n      </DepositFormSubmitContext.Provider>\n    );\n  }\n}\n\nDepositBootstrapComponent.propTypes = {\n  errors: PropTypes.object,\n  record: PropTypes.object.isRequired,\n  children: PropTypes.node,\n  saveAction: PropTypes.func.isRequired,\n  publishAction: PropTypes.func.isRequired,\n  submitReview: PropTypes.func.isRequired,\n  previewAction: PropTypes.func.isRequired,\n  deleteAction: PropTypes.func.isRequired,\n  reservePIDAction: PropTypes.func.isRequired,\n  discardPIDAction: PropTypes.func.isRequired,\n  fileUploadOngoing: PropTypes.bool,\n  validate: PropTypes.func,\n  validationSchema: PropTypes.object,\n};\n\nDepositBootstrapComponent.defaultProps = {\n  errors: undefined,\n  children: undefined,\n  fileUploadOngoing: false,\n  validate: undefined,\n  validationSchema: undefined,\n};\n\nconst mapStateToProps = (state) => {\n  const { isFileUploadInProgress, ...files } = state.files;\n  return {\n    record: state.deposit.record,\n    errors: state.deposit.errors,\n    formState: state.deposit.formState,\n    fileUploadOngoing: isFileUploadInProgress,\n    files: files,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  publishAction: (values, { removeSelectedCommunity = false }) =>\n    dispatch(publish(values, { removeSelectedCommunity })),\n  submitReview: (values, { reviewComment, directPublish }) =>\n    dispatch(submitReview(values, { reviewComment, directPublish })),\n  saveAction: (values) => dispatch(save(values)),\n  previewAction: (values) => dispatch(preview(values)),\n  deleteAction: (values, { isDiscardingVersion }) =>\n    dispatch(delete_(values, { isDiscardingVersion })),\n  reservePIDAction: (values, { pidType }) => dispatch(reservePID(values, { pidType })),\n  discardPIDAction: (values, { pidType }) => dispatch(discardPID(values, { pidType })),\n});\n\nexport const DepositBootstrap = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DepositBootstrapComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport class DepositDraftsService {\n  /* eslint-disable no-unused-vars */\n  constructor(apiClient) {\n    if (this.constructor === DepositDraftsService) {\n      throw new Error(\"Abstract\");\n    }\n  }\n  async read(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n  async create(draft) {\n    throw new Error(\"Not implemented.\");\n  }\n  async save(draft) {\n    throw new Error(\"Not implemented.\");\n  }\n  async publish(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n  async delete(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n  async reservePID(draftLinks, pidType) {\n    throw new Error(\"Not implemented.\");\n  }\n  async discardPID(draftLinks, pidType) {\n    throw new Error(\"Not implemented.\");\n  }\n  async createOrUpdateReview(draftLinks, newCommunityId) {\n    throw new Error(\"Not implemented.\");\n  }\n  async deleteReview(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n  async submitReview(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class RDMDepositDraftsService extends DepositDraftsService {\n  constructor(apiClient) {\n    super();\n    this.apiClient = apiClient;\n  }\n\n  _draftAlreadyCreated(record) {\n    return !!record.id;\n  }\n\n  /**\n   * Creates the current draft (backend) and changes URL to match its edit URL.\n   */\n  async create(draft) {\n    return this.apiClient.createDraft(draft);\n  }\n\n  /**\n   * Read the current draft (backend).\n   */\n  async read(draftLinks) {\n    return this.apiClient.readDraft(draftLinks);\n  }\n\n  /**\n   * Saves the current draft (backend) and changes URL to match its edit URL.\n   */\n  async save(draft) {\n    return this._draftAlreadyCreated(draft)\n      ? this.apiClient.saveDraft(draft, draft.links)\n      : this.create(draft);\n  }\n\n  /**\n   * Publishes the current draft (backend) and redirects to its view URL.\n   */\n  async publish(draftLinks) {\n    return this.apiClient.publishDraft(draftLinks);\n  }\n\n  /**\n   * Deletes the current draft and redirects to uploads page.\n   */\n  async delete(draftLinks) {\n    return this.apiClient.deleteDraft(draftLinks);\n  }\n\n  /**\n   * Reserve a PID\n   */\n  async reservePID(draftLinks, pidType) {\n    return this.apiClient.reservePID(draftLinks, pidType);\n  }\n\n  /**\n   * Discard a previously reserved PID\n   */\n  async discardPID(draftLinks, pidType) {\n    return this.apiClient.discardPID(draftLinks, pidType);\n  }\n\n  /**\n   * Creates or updates a review request.\n   */\n  async createOrUpdateReview(draftLinks, newCommunityId) {\n    return this.apiClient.createOrUpdateReview(draftLinks, newCommunityId);\n  }\n\n  /**\n   * Deletes a review request associated with the draft.\n   */\n  async deleteReview(draftLinks) {\n    return this.apiClient.deleteReview(draftLinks);\n  }\n\n  /**\n   * Submits the draft for review.\n   */\n  async submitReview(draftLinks, reviewComment) {\n    return this.apiClient.submitReview(draftLinks, reviewComment);\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\n// Drives the business logic of the InvenioFormApp.\n// Defines what happens when a button is clicked.\n\nimport { UploadState } from \"../state/reducers/files\";\n\nclass UploaderQueue {\n  currents = [];\n  pending = [];\n\n  put(initializeUploadURL, file) {\n    this.pending.push({\n      initializeUploadURL: initializeUploadURL,\n      file: file,\n    });\n  }\n\n  get totalInProgress() {\n    return this.currents.length;\n  }\n\n  get next() {\n    // remove from the pending and add it to the currents\n    const nextFile = this.pending.shift();\n    if (nextFile !== undefined) {\n      this.currents.push(nextFile.file);\n    }\n\n    return nextFile;\n  }\n\n  markCompleted(file) {\n    const index = this.currents.indexOf(file);\n    if (index >= 0) {\n      // remove from the current\n      this.currents.splice(index, 1);\n    }\n  }\n}\n\nexport class UploadProgressNotifier {\n  /* eslint-disable no-unused-vars */\n  constructor(dispatcher) {\n    this.dispatcher = dispatcher;\n  }\n  onUploadAdded(filename) {\n    throw new Error(\"Not implemented.\");\n  }\n  onUploadStarted(filename, cancelFunc) {\n    throw new Error(\"Not implemented.\");\n  }\n  onUploadProgress(filename, percent) {\n    throw new Error(\"Not implemented.\");\n  }\n  onUploadCompleted(filename, size, checksum, links) {\n    throw new Error(\"Not implemented.\");\n  }\n  onUploadCancelled(filename) {\n    throw new Error(\"Not implemented.\");\n  }\n  onUploadFailed(filename) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class DepositFilesService {\n  constructor(fileApiClient, fileUploadConcurrency) {\n    if (this.constructor === DepositFilesService) {\n      throw new Error(\"Abstract\");\n    }\n  }\n\n  setProgressNotifier(progressNotifier) {\n    if (!(progressNotifier instanceof UploadProgressNotifier)) {\n      throw new Error(\n        \"Progress notifier must be an instance of `UploadProgressNotifier`\"\n      );\n    }\n    this.progressNotifier = progressNotifier;\n  }\n\n  async upload(initializeUploadURL, file, progressNotifier) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async delete(fileLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n\n  async importParentRecordFiles(draftLinks) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class RDMDepositFilesService extends DepositFilesService {\n  constructor(fileApiClient, fileUploadConcurrency) {\n    super();\n    this.fileApiClient = fileApiClient;\n    this.maxConcurrentUploads = fileUploadConcurrency || 3;\n    this.uploaderQueue = new UploaderQueue();\n  }\n\n  _initializeUpload = async (initializeUploadURL, file) => {\n    const response = await this.fileApiClient.initializeFileUpload(\n      initializeUploadURL,\n      file.name\n    );\n\n    // get the init file with the sent filename\n    const initializedFile = response.data.entries.filter(\n      (entry) => entry.key.normalize() === file.name.normalize()\n    )[0]; // this should throw an error if not found\n\n    return initializedFile;\n  };\n\n  _doUpload = async (uploadUrl, file) =>\n    await this.fileApiClient.uploadFile(\n      uploadUrl,\n      file,\n      (percent) => this.progressNotifier.onUploadProgress(file.name, percent),\n      (cancelFn) => this.progressNotifier.onUploadStarted(file.name, cancelFn)\n    );\n\n  _finalizeUpload = async (commitFileURL, file) => {\n    // Regardless of what is the status of the finalize step we start\n    // the next upload in the queue\n    this.uploaderQueue.markCompleted(file);\n    this._startNextUpload();\n    const response = await this.fileApiClient.finalizeFileUpload(commitFileURL);\n    return response.data;\n  };\n\n  _onError = (file, isCancelled = false) => {\n    if (isCancelled) {\n      this.progressNotifier.onUploadCancelled(file.name);\n    } else {\n      this.progressNotifier.onUploadFailed(file.name);\n    }\n    this.uploaderQueue.markCompleted(file);\n    this._startNextUpload();\n  };\n\n  _startNewUpload = async (initializeUploadURL, file) => {\n    let initializedFileMetadata;\n    try {\n      initializedFileMetadata = await this._initializeUpload(initializeUploadURL, file);\n    } catch (error) {\n      this._onError(file);\n      return;\n    }\n\n    const startUploadURL = initializedFileMetadata.links.content;\n    const commitFileURL = initializedFileMetadata.links.commit;\n    try {\n      await this._doUpload(startUploadURL, file);\n      const fileData = await this._finalizeUpload(commitFileURL, file);\n      this.progressNotifier.onUploadCompleted(\n        fileData.key,\n        fileData.size,\n        fileData.checksum,\n        fileData.links\n      );\n    } catch (error) {\n      console.error(error);\n      const isCancelled = this.fileApiClient.isCancelled(error);\n      this._onError(file, isCancelled);\n    }\n  };\n\n  _startNextUpload = async () => {\n    const shouldStartNewUpload =\n      this.uploaderQueue.totalInProgress < this.maxConcurrentUploads;\n\n    if (shouldStartNewUpload) {\n      const nextFile = this.uploaderQueue.next;\n      if (nextFile) {\n        await this._startNewUpload(nextFile.initializeUploadURL, nextFile.file);\n      }\n    }\n  };\n\n  upload = async (initializeUploadURL, file) => {\n    this.uploaderQueue.put(initializeUploadURL, file);\n    this.progressNotifier.onUploadAdded(file.name);\n\n    await this._startNextUpload();\n  };\n\n  delete = async (fileLinks) => {\n    return await this.fileApiClient.deleteFile(fileLinks);\n  };\n\n  importParentRecordFiles = async (draftLinks) => {\n    const response = await this.fileApiClient.importParentRecordFiles(draftLinks);\n\n    return response.data.entries.reduce(\n      (acc, file) => ({\n        ...acc,\n        [file.key]: {\n          status: UploadState.finished,\n          size: file.size,\n          name: file.key,\n          progressPercentage: 100,\n          checksum: file.checksum,\n          links: file.links,\n        },\n      }),\n      {}\n    );\n  };\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _defaults from \"lodash/defaults\";\nimport _isArray from \"lodash/isArray\";\nimport _isBoolean from \"lodash/isBoolean\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isNull from \"lodash/isNull\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isObject from \"lodash/isObject\";\nimport _mapValues from \"lodash/mapValues\";\nimport _pick from \"lodash/pick\";\nimport _pickBy from \"lodash/pickBy\";\nimport _set from \"lodash/set\";\nimport {\n  Field,\n  SchemaField,\n  AllowAdditionsVocabularyField,\n  FundingField,\n  RightsVocabularyField,\n  VocabularyField,\n} from \"../serializers\";\nimport { CustomField } from \"../customFields\";\n\nexport class DepositRecordSerializer {\n  /* eslint-disable no-unused-vars */\n  constructor(defaultLocale) {\n    if (this.constructor === DepositRecordSerializer) {\n      throw new Error(\"Abstract\");\n    }\n  }\n\n  deserialize(record) {\n    throw new Error(\"Not implemented.\");\n  }\n  deserializeErrors(errors) {\n    throw new Error(\"Not implemented.\");\n  }\n  serialize(record) {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class RDMDepositRecordSerializer extends DepositRecordSerializer {\n  constructor(defaultLocale, customFieldVocabularies = []) {\n    super();\n    this.defaultLocale = defaultLocale;\n    this.customFieldVocabularies = customFieldVocabularies;\n  }\n\n  get depositRecordSchema() {\n    return {\n      files: new Field({\n        fieldpath: \"files\",\n      }),\n      media_files: new Field({\n        fieldpath: \"media_files\",\n      }),\n      links: new Field({\n        fieldpath: \"links\",\n      }),\n      expanded: new Field({\n        fieldpath: \"expanded\",\n        deserializedDefault: {},\n      }),\n      pids: new Field({\n        fieldpath: \"pids\",\n        deserializedDefault: {},\n        serializedDefault: {},\n      }),\n      title: new Field({\n        fieldpath: \"metadata.title\",\n        deserializedDefault: \"\",\n      }),\n      additional_titles: new SchemaField({\n        fieldpath: \"metadata.additional_titles\",\n        schema: {\n          title: new Field({\n            fieldpath: \"title\",\n          }),\n          type: new VocabularyField({\n            fieldpath: \"type\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          lang: new VocabularyField({\n            fieldpath: \"lang\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n        },\n      }),\n      additional_descriptions: new SchemaField({\n        fieldpath: \"metadata.additional_descriptions\",\n        schema: {\n          description: new Field({\n            fieldpath: \"description\",\n          }),\n          type: new VocabularyField({\n            fieldpath: \"type\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          lang: new VocabularyField({\n            fieldpath: \"lang\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n        },\n      }),\n      creators: new SchemaField({\n        fieldpath: \"metadata.creators\",\n        schema: {\n          person_or_org: new Field({\n            fieldpath: \"person_or_org\",\n          }),\n          role: new VocabularyField({\n            fieldpath: \"role\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          affiliations: new AllowAdditionsVocabularyField({\n            fieldpath: \"affiliations\",\n            deserializedDefault: [],\n            serializedDefault: [],\n            labelField: \"name\",\n          }),\n        },\n      }),\n      contributors: new SchemaField({\n        fieldpath: \"metadata.contributors\",\n        schema: {\n          person_or_org: new Field({\n            fieldpath: \"person_or_org\",\n          }),\n          role: new VocabularyField({\n            fieldpath: \"role\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          affiliations: new AllowAdditionsVocabularyField({\n            fieldpath: \"affiliations\",\n            deserializedDefault: [],\n            serializedDefault: [],\n            labelField: \"name\",\n          }),\n        },\n      }),\n      resource_type: new VocabularyField({\n        fieldpath: \"metadata.resource_type\",\n        deserializedDefault: \"\",\n        serializedDefault: \"\",\n      }),\n      access: new Field({\n        fieldpath: \"access\",\n        deserializedDefault: {\n          record: \"public\",\n          files: \"public\",\n        },\n      }),\n      publication_date: new Field({\n        fieldpath: \"metadata.publication_date\",\n        deserializedDefault: \"\",\n      }),\n      dates: new SchemaField({\n        fieldpath: \"metadata.dates\",\n        schema: {\n          date: new Field({\n            fieldpath: \"date\",\n          }),\n          type: new VocabularyField({\n            fieldpath: \"type\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          description: new Field({\n            fieldpath: \"description\",\n          }),\n        },\n        deserializedDefault: [],\n      }),\n      languages: new VocabularyField({\n        fieldpath: \"metadata.languages\",\n        deserializedDefault: [],\n        serializedDefault: [],\n      }),\n      identifiers: new SchemaField({\n        fieldpath: \"metadata.identifiers\",\n        schema: {\n          scheme: new Field({\n            fieldpath: \"scheme\",\n          }),\n          identifier: new Field({\n            fieldpath: \"identifier\",\n          }),\n        },\n        deserializedDefault: [],\n      }),\n      related_identifiers: new SchemaField({\n        fieldpath: \"metadata.related_identifiers\",\n        schema: {\n          scheme: new Field({\n            fieldpath: \"scheme\",\n          }),\n          identifier: new Field({\n            fieldpath: \"identifier\",\n          }),\n          relation_type: new VocabularyField({\n            fieldpath: \"relation_type\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n          resource_type: new VocabularyField({\n            fieldpath: \"resource_type\",\n            deserializedDefault: \"\",\n            serializedDefault: \"\",\n          }),\n        },\n        deserializedDefault: [],\n      }),\n      references: new SchemaField({\n        fieldpath: \"metadata.references\",\n        schema: {\n          reference: new Field({\n            fieldpath: \"reference\",\n          }),\n        },\n        deserializedDefault: [],\n      }),\n      subjects: new AllowAdditionsVocabularyField({\n        fieldpath: \"metadata.subjects\",\n        deserializedDefault: [],\n        serializedDefault: [],\n        labelField: \"subject\",\n      }),\n      funding: new SchemaField({\n        fieldpath: \"metadata.funding\",\n        schema: {\n          award: new FundingField({\n            fieldpath: \"award\",\n            deserializedDefault: {},\n          }),\n          funder: new FundingField({\n            fieldpath: \"funder\",\n            deserializedDefault: {},\n          }),\n        },\n      }),\n      version: new Field({\n        fieldpath: \"metadata.version\",\n        deserializedDefault: \"\",\n      }),\n      rights: new RightsVocabularyField({\n        fieldpath: \"metadata.rights\",\n        deserializedDefault: [],\n        serializedDefault: [],\n        localeFields: [\"title\", \"description\"],\n      }),\n      custom_fields: new CustomField({\n        fieldpath: \"custom_fields\",\n        deserializedDefault: {},\n        serializedDefault: {},\n        vocabularyFields: this.customFieldVocabularies,\n      }),\n    };\n  }\n\n  /**\n   * Remove empty fields from record\n   * @method\n   * @param {object} obj - potentially empty object\n   * @returns {object} record - without empty fields\n   */\n  _removeEmptyValues(obj) {\n    if (_isArray(obj)) {\n      let mappedValues = obj.map((value) => this._removeEmptyValues(value));\n      let filterValues = mappedValues.filter((value) => {\n        if (_isBoolean(value) || _isNumber(value)) {\n          return value;\n        }\n        return !_isEmpty(value);\n      });\n      return filterValues;\n    } else if (_isObject(obj)) {\n      let mappedValues = _mapValues(obj, (value) => this._removeEmptyValues(value));\n      let pickedValues = _pickBy(mappedValues, (value) => {\n        if (_isArray(value) || _isObject(value)) {\n          return !_isEmpty(value);\n        }\n        return !_isNull(value);\n      });\n      return pickedValues;\n    }\n    return _isNumber(obj) || _isBoolean(obj) || obj ? obj : null;\n  }\n\n  /**\n   * Deserialize backend record into format compatible with frontend.\n   * @method\n   * @param {object} record - potentially empty object\n   * @returns {object} frontend compatible record object\n   */\n  deserialize(record) {\n    // NOTE: cloning now allows us to manipulate the copy with impunity\n    //       without affecting the original\n    const originalRecord = _pick(_cloneDeep(record), [\n      \"access\",\n      \"expanded\",\n      \"metadata\",\n      \"id\",\n      \"links\",\n      \"files\",\n      \"media_files\",\n      \"is_published\",\n      \"versions\",\n      \"parent\",\n      \"status\",\n      \"pids\",\n      \"ui\",\n      \"custom_fields\",\n    ]);\n\n    // FIXME: move logic in a more sophisticated PIDField that allows empty values\n    // to be sent in the backend\n    const savedPIDsFieldValue = originalRecord.pids || {};\n\n    // Remove empty null values from record. This happens when we create a new\n    // draft and the backend produces an empty record filled in with null\n    // values, array of null values etc.\n    // TODO: Backend should not attempt to provide empty values. It should just\n    //       return existing record in case of edit or {} in case of new.\n    let deserializedRecord = this._removeEmptyValues(originalRecord);\n\n    // FIXME: Add back pids field in case it was removed\n    deserializedRecord = {\n      ...deserializedRecord,\n      ...(!_isEmpty(savedPIDsFieldValue) ? { pids: savedPIDsFieldValue } : {}),\n    };\n\n    for (const key in this.depositRecordSchema) {\n      deserializedRecord = this.depositRecordSchema[key].deserialize(\n        deserializedRecord,\n        this.defaultLocale\n      );\n    }\n    return deserializedRecord;\n  }\n\n  /**\n   * Deserialize backend record errors into format compatible with frontend.\n   * @method\n   * @param {array} errors - array of error objects\n   * @returns {object} - object representing errors\n   */\n  deserializeErrors(errors) {\n    let deserializedErrors = {};\n\n    // TODO - WARNING: This doesn't convert backend error paths to frontend\n    //                 error paths. Doing so is non-trivial\n    //                 (re-using deserialize has some caveats)\n    //                 Form/Error UX is tackled in next sprint and this is good\n    //                 enough for now.\n    for (const e of errors) {\n      _set(deserializedErrors, e.field, e.messages.join(\" \"));\n    }\n\n    return deserializedErrors;\n  }\n\n  /**\n   * Serialize record to send to the backend.\n   * @method\n   * @param {object} record - in frontend format\n   * @returns {object} record - in API format\n   *\n   */\n  serialize(record) {\n    // NOTE: cloning nows allows us to manipulate the copy with impunity without\n    //       affecting the original\n    let originalRecord = _pick(_cloneDeep(record), [\n      \"access\",\n      \"metadata\",\n      \"id\",\n      \"links\",\n      \"files\",\n      \"media_files\",\n      \"pids\",\n      \"parent\",\n      \"custom_fields\",\n    ]);\n\n    // Save pids so they are not removed when an empty value is passed\n    let savedPIDsFieldValue = originalRecord.pids || {};\n\n    let serializedRecord = this._removeEmptyValues(originalRecord);\n\n    for (let key in this.depositRecordSchema) {\n      serializedRecord = this.depositRecordSchema[key].serialize(\n        serializedRecord,\n        this.defaultLocale\n      );\n    }\n\n    // Remove empty values again because serialization may add some back\n    serializedRecord = this._removeEmptyValues(serializedRecord);\n\n    // Add back pids field in case it was removed\n    serializedRecord = {\n      ...serializedRecord,\n      // always send a `pids` key even if it's empty so the backend doesn't depend on\n      // the previous state.\n      ...{ pids: _isEmpty(savedPIDsFieldValue) ? {} : savedPIDsFieldValue },\n    };\n\n    // Finally add back 'metadata' if absent\n    // We need to do this for backend validation, unless we mark metadata as\n    // required in the backend or find another alternative.\n    _defaults(serializedRecord, { metadata: {}, custom_fields: {} });\n\n    return serializedRecord;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport class DepositService {\n  constructor(draftsService, filesService) {\n    this.draftsService = draftsService;\n    this.filesService = filesService;\n  }\n\n  get drafts() {\n    return this.draftsService;\n  }\n\n  get files() {\n    return this.filesService;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { combineReducers } from \"redux\";\nimport depositReducer from \"./deposit\";\nimport fileReducer from \"./files\";\n\nexport default combineReducers({\n  deposit: depositReducer,\n  files: fileReducer,\n});\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./state/reducers\";\nimport { computeDepositState } from \"./state/reducers/deposit\";\nimport { UploadState } from \"./state/reducers/files\";\n\nconst preloadFiles = (files) => {\n  const _files = _cloneDeep(files);\n  return {\n    links: files.links || {},\n    entries: _get(_files, \"entries\", [])\n      .map((file) => {\n        let hasSize = file.size >= 0;\n        const fileState = {\n          name: file.key,\n          size: file.size || 0,\n          checksum: file.checksum || \"\",\n          links: file.links || {},\n        };\n        // TODO: fix this as the lack of size is not always an error e.g upload ongoing in another tab\n        return hasSize\n          ? {\n              status: UploadState.finished,\n              progressPercentage: 100,\n              ...fileState,\n            }\n          : { status: UploadState.pending, ...fileState };\n      })\n      .reduce((acc, current) => {\n        acc[current.name] = { ...current };\n        return acc;\n      }, {}),\n  };\n};\n\nexport function configureStore(appConfig) {\n  const { record, preselectedCommunity, files, config, permissions, ...extra } =\n    appConfig;\n\n  // when not passed, make sure that the value is `undefined` and not `null`\n  const _preselectedCommunity = preselectedCommunity || undefined;\n\n  const initialDepositState = {\n    record,\n    editorState: computeDepositState(record, _preselectedCommunity),\n    config,\n    permissions,\n    actionState: null,\n    actionStateExtra: {},\n  };\n\n  const preloadedState = {\n    deposit: initialDepositState,\n    files: preloadFiles(files || {}),\n  };\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument({ config, ...extra })))\n  );\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { UploadProgressNotifier } from \"../../api/DepositFilesService\";\nimport {\n  FILE_UPLOAD_ADDED,\n  FILE_UPLOAD_CANCELLED,\n  FILE_UPLOAD_FAILED,\n  FILE_UPLOAD_FINISHED,\n  FILE_UPLOAD_IN_PROGRESS,\n  FILE_UPLOAD_SET_CANCEL_FUNCTION,\n} from \"../../state/types\";\n\nexport class RDMUploadProgressNotifier extends UploadProgressNotifier {\n  onUploadAdded(filename) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_ADDED,\n        payload: {\n          filename: filename,\n        },\n      });\n  }\n\n  onUploadStarted(filename, cancelFn) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_SET_CANCEL_FUNCTION,\n        payload: { filename: filename, cancelUploadFn: cancelFn },\n      });\n  }\n\n  onUploadProgress(filename, percent) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_IN_PROGRESS,\n        payload: {\n          filename: filename,\n          percent: percent,\n        },\n      });\n  }\n\n  onUploadCompleted(filename, size, checksum, links) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_FINISHED,\n        payload: {\n          filename: filename,\n          size: size,\n          checksum: checksum,\n          links: links,\n        },\n      });\n  }\n\n  onUploadCancelled(filename) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_CANCELLED,\n        payload: {\n          filename: filename,\n        },\n      });\n  }\n\n  onUploadFailed(filename) {\n    this.dispatcher &&\n      this.dispatcher({\n        type: FILE_UPLOAD_FAILED,\n        payload: {\n          filename: filename,\n        },\n      });\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { I18nextProvider } from \"react-i18next\";\nimport { Provider } from \"react-redux\";\nimport {\n  DepositApiClient,\n  DepositFileApiClient,\n  RDMDepositApiClient,\n  RDMDepositFileApiClient,\n} from \"./DepositApiClient\";\nimport { DepositBootstrap } from \"./DepositBootstrap\";\nimport { DepositDraftsService, RDMDepositDraftsService } from \"./DepositDraftsService\";\nimport { DepositFilesService, RDMDepositFilesService } from \"./DepositFilesService\";\nimport {\n  DepositRecordSerializer,\n  RDMDepositRecordSerializer,\n} from \"./DepositRecordSerializer\";\nimport { DepositService } from \"./DepositService\";\nimport { configureStore } from \"../store\";\nimport { RDMUploadProgressNotifier } from \"../components/UploadProgressNotifier\";\n\nexport class DepositFormApp extends Component {\n  constructor(props) {\n    super(props);\n\n    const recordSerializer = props.recordSerializer\n      ? props.recordSerializer\n      : new RDMDepositRecordSerializer(\n          props.config.default_locale,\n          props.config.custom_fields.vocabularies\n        );\n\n    const apiHeaders = props.config.apiHeaders ? props.config.apiHeaders : null;\n    const additionalApiConfig = { headers: apiHeaders };\n\n    const apiClient = props.apiClient\n      ? props.apiClient\n      : new RDMDepositApiClient(\n          additionalApiConfig,\n          props.config.createUrl,\n          recordSerializer\n        );\n\n    const fileApiClient = props.fileApiClient\n      ? props.fileApiClient\n      : new RDMDepositFileApiClient(additionalApiConfig);\n\n    const draftsService = props.draftsService\n      ? props.draftsService\n      : new RDMDepositDraftsService(apiClient);\n\n    const filesService = props.filesService\n      ? props.filesService\n      : new RDMDepositFilesService(fileApiClient, props.config.fileUploadConcurrency);\n\n    const service = new DepositService(draftsService, filesService);\n\n    const appConfig = {\n      config: props.config,\n      record: recordSerializer.deserialize(props.record),\n      preselectedCommunity: props.preselectedCommunity,\n      files: props.files,\n      apiClient: apiClient,\n      fileApiClient: fileApiClient,\n      service: service,\n      permissions: props.permissions,\n      recordSerializer: recordSerializer,\n    };\n\n    this.store = configureStore(appConfig);\n\n    const progressNotifier = new RDMUploadProgressNotifier(this.store.dispatch);\n    filesService.setProgressNotifier(progressNotifier);\n  }\n\n  render() {\n    const { children, validate, validationSchema } = this.props;\n\n    return (\n      <Provider store={this.store}>\n        <I18nextProvider i18n={i18next}>\n          <DepositBootstrap validate={validate} validationSchema={validationSchema}>\n            {children}\n          </DepositBootstrap>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nDepositFormApp.propTypes = {\n  config: PropTypes.object.isRequired,\n  record: PropTypes.object.isRequired,\n  preselectedCommunity: PropTypes.object,\n  files: PropTypes.object,\n  permissions: PropTypes.object,\n  apiClient: PropTypes.instanceOf(DepositApiClient),\n  fileApiClient: PropTypes.instanceOf(DepositFileApiClient),\n  draftsService: PropTypes.instanceOf(DepositDraftsService),\n  filesService: PropTypes.instanceOf(DepositFilesService),\n  recordSerializer: PropTypes.instanceOf(DepositRecordSerializer),\n  children: PropTypes.node,\n  validate: PropTypes.func,\n  validationSchema: PropTypes.object,\n};\n\nDepositFormApp.defaultProps = {\n  preselectedCommunity: undefined,\n  permissions: undefined,\n  apiClient: undefined,\n  fileApiClient: undefined,\n  draftsService: undefined,\n  filesService: undefined,\n  recordSerializer: undefined,\n  files: undefined,\n  children: undefined,\n  validate: undefined,\n  validationSchema: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Icon, Popup } from \"semantic-ui-react\";\nimport { DepositStatus } from \"../../state/reducers/deposit\";\nimport PropTypes from \"prop-types\";\n\nconst STATUSES = {\n  [DepositStatus.IN_REVIEW]: {\n    color: \"warning\",\n    title: i18next.t(\"In review\"),\n    message: i18next.t(\n      \"Community curators will review your upload. Once accepted, it will be published.\"\n    ),\n  },\n  [DepositStatus.DECLINED]: {\n    color: \"negative\",\n    title: i18next.t(\"Declined\"),\n    message: i18next.t(\n      \"The request to submit this upload to the community was declined.\"\n    ),\n  },\n  [DepositStatus.EXPIRED]: {\n    color: \"expired\",\n    title: i18next.t(\"Expired\"),\n    message: i18next.t(\n      \"The request to submit this upload to the community has expired.\"\n    ),\n  },\n  [DepositStatus.PUBLISHED]: {\n    color: \"positive\",\n    title: i18next.t(\"Published\"),\n    message: i18next.t(\"Your upload is published.\"),\n  },\n  [DepositStatus.DRAFT_WITH_REVIEW]: {\n    color: \"neutral\",\n    title: i18next.t(\"Draft\"),\n    message: i18next.t(\n      \"Once your upload is complete, you can submit it for review to the community curators.\"\n    ),\n  },\n  [DepositStatus.DRAFT]: {\n    color: \"neutral\",\n    title: i18next.t(\"Draft\"),\n    message: i18next.t(\n      \"Once your upload is complete, you can publish or submit it for review to the community curators.\"\n    ),\n  },\n  [DepositStatus.NEW_VERSION_DRAFT]: {\n    color: \"neutral\",\n    title: i18next.t(\"New version draft\"),\n    message: i18next.t(\"Once your upload is complete, you can publish it.\"),\n  },\n};\n\nconst DepositStatusBoxComponent = ({ depositReview, depositStatus }) => {\n  const status = STATUSES[depositStatus];\n  if (!status) {\n    throw new Error(\"Status is undefined\");\n  }\n  const isReviewStatus = depositStatus === DepositStatus.IN_REVIEW;\n\n  return (\n    <Grid verticalAlign=\"middle\">\n      <Grid.Row centered className={`pt-5 pb-5 ${status.color}`}>\n        <Grid.Column\n          width={isReviewStatus ? 8 : 16}\n          textAlign={isReviewStatus ? \"left\" : \"center\"}\n        >\n          <span>{status.title}</span>\n          <Popup\n            trigger={<Icon className=\"ml-10\" name=\"info circle\" />}\n            content={status.message}\n          />\n        </Grid.Column>\n        {isReviewStatus && (\n          <Grid.Column width={8} textAlign=\"right\">\n            <Button\n              href={`/me/requests/${depositReview.id}`}\n              target=\"_blank\"\n              icon=\"external alternate\"\n              content={i18next.t(\"View request\")}\n              size=\"mini\"\n              className=\"transparent\"\n              title={i18next.t(\"Opens in new tab\")}\n            />\n          </Grid.Column>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nDepositStatusBoxComponent.propTypes = {\n  depositReview: PropTypes.bool,\n  depositStatus: PropTypes.string.isRequired,\n};\n\nDepositStatusBoxComponent.defaultProps = {\n  depositReview: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  depositStatus: state.deposit.record.status,\n  depositReview:\n    state.deposit.record.status !== DepositStatus.DRAFT &&\n    state.deposit.record.parent.review,\n});\n\nexport const DepositStatusBox = connect(\n  mapStateToProps,\n  null\n)(DepositStatusBoxComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021-2022 Graz University of Technology.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_rdm_records/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-invenio-forms\";\nimport { connect } from \"react-redux\";\nimport { Button, Container } from \"semantic-ui-react\";\nimport { changeSelectedCommunity } from \"../../state/actions\";\nimport { CommunitySelectionModal } from \"../CommunitySelectionModal\";\n\nclass CommunityHeaderComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n    };\n  }\n  render() {\n    const {\n      changeSelectedCommunity,\n      community,\n      imagePlaceholderLink,\n      showCommunitySelectionButton,\n      disableCommunitySelectionButton,\n      showCommunityHeader,\n      record,\n    } = this.props;\n    const { modalOpen } = this.state;\n\n    return (\n      showCommunityHeader && (\n        <Container\n          className=\"page-subheader-outer compact ml-0-mobile mr-0-mobile\"\n          fluid\n        >\n          <Container className=\"page-subheader\">\n            {community ? (\n              <>\n                <div className=\"page-subheader-element\">\n                  <Image\n                    rounded\n                    className=\"community-header-logo\"\n                    src={community.links?.logo || imagePlaceholderLink} // logo is undefined when new draft and no selection\n                    fallbackSrc={imagePlaceholderLink}\n                  />\n                </div>\n                <div className=\"page-subheader-element flex align-items-center\">\n                  {community.metadata.title}\n                </div>\n              </>\n            ) : (\n              <div className=\"page-subheader-element\">\n                {i18next.t(\n                  \"Select the community where you want to submit your record.\"\n                )}\n              </div>\n            )}\n            <div className=\"community-header-element flex align-items-center rel-ml-1\">\n              {showCommunitySelectionButton && (\n                <>\n                  <CommunitySelectionModal\n                    onCommunityChange={(community) => {\n                      changeSelectedCommunity(community);\n                      this.setState({ modalOpen: false });\n                    }}\n                    onModalChange={(value) => this.setState({ modalOpen: value })}\n                    modalOpen={modalOpen}\n                    chosenCommunity={community}\n                    displaySelected\n                    record={record}\n                    trigger={\n                      <Button\n                        className=\"community-header-button\"\n                        disabled={disableCommunitySelectionButton}\n                        onClick={() => this.setState({ modalOpen: true })}\n                        primary\n                        size=\"mini\"\n                        name=\"setting\"\n                        type=\"button\"\n                        content={\n                          community\n                            ? i18next.t(\"Change\")\n                            : i18next.t(\"Select a community\")\n                        }\n                      />\n                    }\n                  />\n                  {community && (\n                    <Button\n                      basic\n                      size=\"mini\"\n                      labelPosition=\"left\"\n                      className=\"community-header-button ml-5\"\n                      onClick={() => changeSelectedCommunity(null)}\n                      content={i18next.t(\"Remove\")}\n                      icon=\"close\"\n                      disabled={disableCommunitySelectionButton}\n                    />\n                  )}\n                </>\n              )}\n            </div>\n          </Container>\n        </Container>\n      )\n    );\n  }\n}\n\nCommunityHeaderComponent.propTypes = {\n  imagePlaceholderLink: PropTypes.string.isRequired,\n  community: PropTypes.object,\n  disableCommunitySelectionButton: PropTypes.bool.isRequired,\n  showCommunitySelectionButton: PropTypes.bool.isRequired,\n  showCommunityHeader: PropTypes.bool.isRequired,\n  changeSelectedCommunity: PropTypes.func.isRequired,\n  record: PropTypes.object.isRequired,\n};\n\nCommunityHeaderComponent.defaultProps = {\n  community: undefined,\n};\n\nconst mapStateToProps = (state) => ({\n  community: state.deposit.editorState.selectedCommunity,\n  disableCommunitySelectionButton:\n    state.deposit.editorState.ui.disableCommunitySelectionButton,\n  showCommunitySelectionButton:\n    state.deposit.editorState.ui.showCommunitySelectionButton,\n  showCommunityHeader: state.deposit.editorState.ui.showCommunityHeader,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeSelectedCommunity: (community) => dispatch(changeSelectedCommunity(community)),\n});\n\nexport const CommunityHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommunityHeaderComponent);\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const getInputFromDOM = (elementName) => {\n  const element = document.getElementsByName(elementName);\n  if (element.length > 0 && element[0].hasAttribute(\"value\")) {\n    return JSON.parse(element[0].value);\n  }\n  return null;\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _isArray from \"lodash/isArray\";\nimport _isObject from \"lodash/isObject\";\nimport { Field } from \"../serializers\";\n\nexport class CustomField extends Field {\n  constructor({\n    fieldpath,\n    deserializedDefault = null,\n    serializedDefault = null,\n    allowEmpty = false,\n    vocabularyFields = [],\n  }) {\n    super({ fieldpath, deserializedDefault, serializedDefault, allowEmpty });\n    this.vocabularyFields = vocabularyFields;\n  }\n\n  recursiveMapping(value, isVocabularyField, mapValue) {\n    // Since Arrays are a subset of Objects, if _isArray were the else if, we would never get to that condition.\n    let _value = null;\n    if (_isArray(value))\n      _value = value.map((v, i) => mapValue(v, i, isVocabularyField));\n    else if (_isObject(value) && !isVocabularyField) {\n      for (let key in value)\n        value[key] = this.recursiveMapping(value[key], isVocabularyField, mapValue);\n      _value = value;\n    } else _value = mapValue(value, null, isVocabularyField);\n    return _value;\n  }\n\n  #mapCustomFields(record, customFields, mapValue) {\n    if (customFields !== null) {\n      for (const [key, value] of Object.entries(customFields)) {\n        const isVocabularyField = this.vocabularyFields.includes(key);\n        const _value = this.recursiveMapping(value, isVocabularyField, mapValue);\n        record = _set(record, `custom_fields.${key}`, _value);\n      }\n    }\n  }\n\n  deserialize(record) {\n    const _deserialize = (value, i = undefined, isVocabulary = false) => {\n      if (isVocabulary && value?.id) {\n        return value.id;\n      }\n      // Add __key if i is passed i.e is an array. This is needed because of ArrayField\n      // internal implementation\n      // Note: if i is an array of strings, then we exclude the above as you cannot set\n      // a property on a string\n      if (i && typeof value === \"object\" && value !== null) value.__key = i;\n      return value;\n    };\n\n    const _record = _cloneDeep(record);\n    const customFields = _get(record, this.fieldpath, this.deserializedDefault);\n    this.#mapCustomFields(_record, customFields, _deserialize);\n    return _record;\n  }\n\n  serialize(record) {\n    const _serialize = (value, i = undefined, isVocabulary = false) => {\n      if (isVocabulary && typeof value === \"string\") {\n        return { id: value };\n      }\n      // Delete internal __key from the sent request payload\n      delete value.__key;\n      return value;\n    };\n    const _record = _cloneDeep(record);\n    const customFields = _get(record, this.fieldpath, this.serializedDefault);\n    this.#mapCustomFields(_record, customFields, _serialize);\n    return _record;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\n\nimport { FieldLabel, Input } from \"react-invenio-forms\";\nimport { Divider, Grid } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nexport class Imprint extends Component {\n  render() {\n    const {\n      fieldPath, // injected by the custom field loader via the `field` config property\n      title,\n      place,\n      isbn,\n      pages,\n      label,\n      icon,\n    } = this.props;\n    return (\n      <>\n        {label && (\n          <>\n            <FieldLabel htmlFor={fieldPath} icon={icon} label={label} />\n            <Divider fitted />\n          </>\n        )}\n        <Grid padded>\n          <Grid.Column width=\"12\">\n            <Input\n              fieldPath={`${fieldPath}.title`}\n              label={title.label}\n              placeholder={title.placeholder}\n            />\n            {title.description && (\n              <label className=\"helptext mb-0\">{title.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Input\n              fieldPath={`${fieldPath}.isbn`}\n              label={isbn.label}\n              placeholder={isbn.placeholder}\n            />\n            {isbn.description && (\n              <label className=\"helptext mb-0\">{isbn.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.place`}\n              label={place.label}\n              placeholder={place.placeholder}\n            />\n            {place.description && (\n              <label className=\"helptext mb-0\">{place.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.pages`}\n              label={pages.label}\n              placeholder={pages.placeholder}\n            />\n            {pages.description && (\n              <label className=\"helptext mb-0\">{pages.description}</label>\n            )}\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nImprint.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  title: PropTypes.object.isRequired,\n  place: PropTypes.object.isRequired,\n  isbn: PropTypes.object.isRequired,\n  pages: PropTypes.object.isRequired,\n  icon: PropTypes.string,\n  label: PropTypes.string,\n};\n\nImprint.defaultProps = {\n  icon: undefined,\n  label: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\n\nimport { FieldLabel, Input } from \"react-invenio-forms\";\nimport { Divider, Grid } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nexport class Journal extends Component {\n  render() {\n    const {\n      fieldPath, // injected by the custom field loader via the `field` config property\n      title,\n      volume,\n      issue,\n      pages,\n      issn,\n      icon,\n      label,\n    } = this.props;\n    return (\n      <>\n        {label && (\n          <>\n            <FieldLabel htmlFor={fieldPath} icon={icon} label={label} />\n            <Divider fitted />\n          </>\n        )}\n        <Grid padded>\n          <Grid.Column width=\"12\">\n            <Input\n              fieldPath={`${fieldPath}.title`}\n              label={title.label}\n              placeholder={title.placeholder}\n            />\n            {title.description && (\n              <label className=\"helptext mb-0\">{title.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Input\n              fieldPath={`${fieldPath}.issn`}\n              label={issn.label}\n              placeholder={issn.placeholder}\n            />\n            {issn.description && (\n              <label className=\"helptext mb-0\">{issn.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.volume`}\n              label={volume.label}\n              placeholder={volume.placeholder}\n            />\n            {volume.description && (\n              <label className=\"helptext mb-0\">{volume.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.issue`}\n              label={issue.label}\n              placeholder={issue.placeholder}\n            />\n            {issue.description && (\n              <label className=\"helptext mb-0\">{issue.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Input\n              fieldPath={`${fieldPath}.pages`}\n              label={pages.label}\n              placeholder={pages.placeholder}\n            />\n            {pages.description && (\n              <label className=\"helptext mb-0\">{pages.description}</label>\n            )}\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nJournal.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  title: PropTypes.object.isRequired,\n  volume: PropTypes.object.isRequired,\n  issue: PropTypes.object.isRequired,\n  pages: PropTypes.object.isRequired,\n  issn: PropTypes.object.isRequired,\n  icon: PropTypes.string,\n  label: PropTypes.string,\n};\n\nJournal.defaultProps = {\n  icon: undefined,\n  label: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\n\nimport { FieldLabel, Input } from \"react-invenio-forms\";\nimport { Divider, Grid } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nexport class Meeting extends Component {\n  render() {\n    const {\n      fieldPath, // injected by the custom field loader via the `field` config property\n      title,\n      acronym,\n      dates,\n      place,\n      url,\n      session,\n      session_part: sessionPart,\n      icon,\n      label,\n    } = this.props;\n    return (\n      <>\n        {label && (\n          <>\n            <FieldLabel htmlFor={fieldPath} icon={icon} label={label} />\n            <Divider fitted />\n          </>\n        )}\n        <Grid padded>\n          <Grid.Column width=\"12\">\n            <Input\n              fieldPath={`${fieldPath}.title`}\n              label={title.label}\n              placeholder={title.placeholder}\n            />\n            {title.description && (\n              <label className=\"helptext mb-0\">{title.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Input\n              fieldPath={`${fieldPath}.acronym`}\n              label={acronym.label}\n              placeholder={acronym.placeholder}\n            />\n            {acronym.description && (\n              <label className=\"helptext mb-0\">{acronym.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"12\">\n            <Input\n              fieldPath={`${fieldPath}.place`}\n              label={place.label}\n              placeholder={place.placeholder}\n            />\n            {place.description && (\n              <label className=\"helptext mb-0\">{place.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Input\n              fieldPath={`${fieldPath}.dates`}\n              label={dates.label}\n              placeholder={dates.placeholder}\n            />\n            {dates.description && (\n              <label className=\"helptext mb-0\">{dates.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"12\">\n            <Input\n              fieldPath={`${fieldPath}.url`}\n              label={url.label}\n              placeholder={url.placeholder}\n            />\n            {url.description && (\n              <label className=\"helptext mb-0\">{url.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.session`}\n              label={session.label}\n              placeholder={session.placeholder}\n            />\n            {session.description && (\n              <label className=\"helptext mb-0\">{session.description}</label>\n            )}\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <Input\n              fieldPath={`${fieldPath}.session_part`}\n              label={sessionPart.label}\n              placeholder={sessionPart.placeholder}\n            />\n            {sessionPart.description && (\n              <label className=\"helptext mb-0\">{sessionPart.description}</label>\n            )}\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nMeeting.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  title: PropTypes.object.isRequired,\n  acronym: PropTypes.object.isRequired,\n  session_part: PropTypes.object.isRequired,\n  session: PropTypes.object.isRequired,\n  url: PropTypes.object.isRequired,\n  dates: PropTypes.object.isRequired,\n  place: PropTypes.object.isRequired,\n  icon: PropTypes.string,\n  label: PropTypes.string,\n};\n\nMeeting.defaultProps = {\n  icon: undefined,\n  label: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\n\nimport { FieldLabel, Input } from \"react-invenio-forms\";\nimport { Divider, Grid } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nexport class Thesis extends Component {\n  render() {\n    const {\n      fieldPath, // injected by the custom field loader via the `field` config property\n      university,\n      icon,\n      label,\n    } = this.props;\n    return (\n      <>\n        {label && (\n          <>\n            <FieldLabel htmlFor={fieldPath} icon={icon} label={label} />\n            <Divider fitted />\n          </>\n        )}\n        <Grid padded>\n          <Grid.Column width=\"16\">\n            <Input\n              fieldPath={fieldPath}\n              label={university.label}\n              placeholder={university.placeholder}\n            />\n            {university.description && (\n              <label className=\"helptext mb-0\">{university.description}</label>\n            )}\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nThesis.propTypes = {\n  fieldPath: PropTypes.string.isRequired,\n  university: PropTypes.object.isRequired,\n  icon: PropTypes.string,\n  label: PropTypes.string,\n};\n\nThesis.defaultProps = {\n  icon: undefined,\n  label: undefined,\n};\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nimport _cloneDeep from \"lodash/cloneDeep\";\n\nexport class Field {\n  constructor({\n    fieldpath,\n    deserializedDefault = null,\n    serializedDefault = null,\n    allowEmpty = false,\n  }) {\n    this.fieldpath = fieldpath;\n    this.deserializedDefault = deserializedDefault;\n    this.serializedDefault = serializedDefault;\n    this.allowEmpty = allowEmpty;\n  }\n\n  deserialize(record) {\n    let fieldValue = _get(record, this.fieldpath, this.deserializedDefault);\n    if (fieldValue !== null) {\n      return _set(_cloneDeep(record), this.fieldpath, fieldValue);\n    }\n    return record;\n  }\n\n  serialize(record) {\n    let fieldValue = _get(record, this.fieldpath, this.serializedDefault);\n    if (fieldValue !== null) {\n      return _set(_cloneDeep(record), this.fieldpath, fieldValue);\n    }\n    return record;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport _isEqual from \"lodash/isEqual\";\n\nimport { Field } from \"./Field\";\n\nexport class DatesField extends Field {\n  /**\n   * Serialize frontend dates to backend dates.\n   * Strips it out if only default entry is there.\n   * @method\n   * @param {object} record - in frontend format\n   * @returns {object} record - in API format\n   */\n  serialize(record) {\n    const recordDates = _get(record, this.fieldpath, this.serializedDefault);\n    // Remove dates if only the default empty date is there\n    // NOTE: We have to do this because a date is show for UI sake, but if not\n    //       filled, it would be sent to backend and generate a validation\n    //       error\n    // NOTE: This check is because null values are stripped at first.\n    //       We might want to revisit that...\n    if (_isEqual(recordDates, [{ type: \"accepted\" }])) {\n      delete record.metadata.dates;\n    }\n\n    return record;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport _pick from \"lodash/pick\";\nimport _set from \"lodash/set\";\nimport { Field } from \"./Field\";\n\nexport class SchemaField extends Field {\n  /**\n   * IMPORTANT: This component is so far only for list subfields, since\n   * the use case of a single object with schema has not arisen yet.\n   */\n  constructor({ fieldpath, schema, deserializedDefault = [], serializedDefault = [] }) {\n    super({ fieldpath, deserializedDefault, serializedDefault });\n    this.schema = schema;\n    this.schemaKeys = Object.keys(this.schema);\n  }\n\n  /**\n   * Deserialize backend field given by `this.fieldPath` from `serialized`\n   * object into format compatible with frontend using `this.schema`.\n   * @method\n   * @param {object} serialized - in API format\n   * @returns {object} deserialized - in frontent format\n   */\n  deserialize(serialized, defaultLocale) {\n    const fieldValues = _get(serialized, this.fieldpath, this.deserializedDefault);\n    const deserializedElements = fieldValues.map((value, i) => {\n      let deserializedElement = _pick(value, this.schemaKeys);\n      this.schemaKeys.forEach((key) => {\n        deserializedElement = this.schema[key].deserialize(\n          deserializedElement,\n          defaultLocale\n        );\n      });\n      // Add __key\n      deserializedElement.__key = i;\n      return deserializedElement;\n    });\n\n    return _set(_cloneDeep(serialized), this.fieldpath, deserializedElements);\n  }\n\n  /**\n   * Serialize frontend field given by `this.fieldPath` from `deserialized`\n   * object into format compatible with backend using `this.schema`.\n   * @method\n   * @param {object} deserialized - in frontend format\n   * @returns {object} serialized - in API format\n   *\n   */\n  serialize(deserialized, defaultLocale) {\n    const fieldValues = _get(deserialized, this.fieldpath, this.serializedDefault);\n    const serializedElements = fieldValues.map((value) => {\n      let serializedElement = _pick(value, this.schemaKeys);\n      this.schemaKeys.forEach((key) => {\n        serializedElement = this.schema[key].serialize(\n          serializedElement,\n          defaultLocale\n        );\n      });\n      return serializedElement;\n    });\n    if (serializedElements !== null) {\n      return _set(_cloneDeep(deserialized), this.fieldpath, serializedElements);\n    }\n    return serializedElements;\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\nimport _cloneDeep from \"lodash/cloneDeep\";\n\nimport { Field } from \"../serializers\";\n\nexport class VocabularyField extends Field {\n  constructor({\n    fieldpath,\n    deserializedDefault = null,\n    serializedDefault = null,\n    labelField = \"name\",\n  }) {\n    super({ fieldpath, deserializedDefault, serializedDefault });\n    this.labelField = labelField;\n  }\n\n  /**\n   * Deserializes a given record.\n   *\n   * @param {object} record The record to be deserialized.\n   *\n   * @returns {object} Returns a deep copy of the given record, deserialized using the provided settings.\n   */\n  deserialize(record) {\n    /**\n     * Deserializes an object.\n     *\n     * If the object contains an id, its returned as-is.\n     *\n     * @param {object} value The object to be deserialized.\n     *\n     * @returns {(object|*)} Returns a clone of the given object or its 'id' property, if exists.\n     */\n    const _deserialize = (value) => {\n      if (value?.id) {\n        return value.id;\n      }\n    };\n\n    const fieldValue = _get(record, this.fieldpath, this.deserializedDefault);\n    let deserializedValue = null;\n    if (fieldValue !== null) {\n      deserializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_deserialize)\n        : _deserialize(fieldValue);\n    }\n\n    return _set(_cloneDeep(record), this.fieldpath, deserializedValue || fieldValue);\n  }\n\n  serialize(record) {\n    const _serialize = (value) => {\n      if (typeof value === \"string\") {\n        return { id: value };\n      }\n\n      return {\n        ...(value.id ? { id: value.id } : {}),\n        ...(value[this.labelField] && { [this.labelField]: value[this.labelField] }),\n      };\n    };\n\n    let fieldValue = _get(record, this.fieldpath, this.serializedDefault);\n    let serializedValue = null;\n    if (fieldValue !== null) {\n      serializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_serialize)\n        : _serialize(fieldValue); // fieldValue is a string\n    }\n\n    return _set(_cloneDeep(record), this.fieldpath, serializedValue || fieldValue);\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { Field } from \"../serializers\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\n\nexport class FundingField extends Field {\n  constructor({ fieldpath, deserializedDefault = null, serializedDefault = null }) {\n    super({ fieldpath, deserializedDefault, serializedDefault });\n  }\n\n  /**\n   * Deserializes a funding record.\n   *\n   * @param {object} record the funding record to be deserialized.\n   * @param {string} defaultLocale - The default locale\n   *\n   * @returns {object} the deserialized record.\n   */\n  deserialize(record, defaultLocale) {\n    /**\n     * Deserializes a record. In case the record contains a 'title' property, it will extract its 'en' property.\n     *\n     * @param {object} value The object to be deserialized.\n     *\n     * @todo record's title is deserialized reading an 'en' locale. This needs to take into account the current locale or pass that\n     * responsability to backend.\n     *\n     * @returns {(object|*)} Returns a deep copy of the given object.\n     */\n    const _deserialize = (value) => {\n      const deserializedValue = _cloneDeep(value);\n      if (value?.title) {\n        deserializedValue.title = value.title[defaultLocale];\n      }\n\n      if (value.identifiers) {\n        const allowedIdentifiers = [\"url\"];\n\n        allowedIdentifiers.forEach((identifier) => {\n          let identifierValue = null;\n          value.identifiers.forEach((v) => {\n            if (v.scheme === identifier) {\n              identifierValue = v.identifier;\n            }\n          });\n\n          if (identifierValue) {\n            deserializedValue[identifier] = identifierValue;\n          }\n        });\n\n        delete deserializedValue[\"identifiers\"];\n      }\n      return deserializedValue;\n    };\n\n    const fieldValue = _get(record, this.fieldpath, this.deserializedDefault);\n    let deserializedValue = null;\n    if (fieldValue !== null) {\n      deserializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_deserialize)\n        : _deserialize(fieldValue);\n    }\n\n    return _set(_cloneDeep(record), this.fieldpath, deserializedValue || fieldValue);\n  }\n\n  /**\n   * Serializes a funding record.\n   *\n   * @param {object} record\n   * @param {string} defaultLocale - The default locale\n   *\n   * @returns\n   */\n  serialize(record, defaultLocale) {\n    /**\n     * Serializes a record. Either returns a new object with the record's id or returns a deep copy of the record.\n     *\n     * @param {object} value\n     *\n     * @todo record's title is serialized forcing an 'en' locale. This needs to take into account the current locale or pass that\n     * responsability to backend.\n     *\n     * @returns an object containing the record's id, if it has an 'id' property.\n     */\n    const _serialize = (value) => {\n      if (value.id) {\n        return { id: value.id };\n      }\n\n      // Record is a custom record, without explicit 'id'\n      const clonedValue = _cloneDeep(value);\n      if (value.title) {\n        clonedValue.title = {\n          [defaultLocale]: value.title,\n        };\n      }\n\n      if (value.url) {\n        clonedValue.identifiers = [\n          {\n            identifier: value.url,\n            scheme: \"url\",\n          },\n        ];\n        delete clonedValue[\"url\"];\n      }\n\n      return clonedValue;\n    };\n\n    let fieldValue = _get(record, this.fieldpath, this.serializedDefault);\n    let serializedValue = null;\n    if (fieldValue !== null) {\n      serializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_serialize)\n        : _serialize(fieldValue);\n    }\n\n    return _set(_cloneDeep(record), this.fieldpath, serializedValue || fieldValue);\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { VocabularyField } from \"./VocabularyField\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\n\n/**\n * Serialize and deserialize rights field that can contain vocabulary values\n * and free text but sharing structure with the vocabulary values\n */\nexport class RightsVocabularyField extends VocabularyField {\n  constructor({\n    fieldpath,\n    deserializedDefault = null,\n    serializedDefault = null,\n    localeFields = [],\n  }) {\n    super({ fieldpath, deserializedDefault, serializedDefault });\n    this.localeFields = localeFields;\n  }\n\n  /**\n   * Deserializes the values in the format:\n   * {id: 'vocab_id'} for controlled vocabs and\n   * {<field_name>: 'field_name', <field_descripton>: 'field_descripton', ...}\n   * for user added entries\n   *\n   * @param {Object} record - Record to deserialize\n   * @param {String} defaultLocale - The default locale\n   * @returns\n   */\n  deserialize(record, defaultLocale) {\n    const fieldValue = _get(record, this.fieldpath, this.deserializedDefault);\n    const _deserialize = (value) => {\n      if (\"id\" in value) {\n        if (typeof value.title === \"string\") {\n          // Needed in case we pass a default value\n          return value;\n        }\n        return { id: value.id };\n      } else {\n        let deserializedValue = _cloneDeep(value);\n        this.localeFields.forEach((field) => {\n          if (value[field]) {\n            deserializedValue[field] = value[field][defaultLocale];\n          }\n        });\n        return deserializedValue;\n      }\n    };\n    let deserializedValue = null;\n    if (fieldValue !== null) {\n      deserializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_deserialize)\n        : _deserialize(fieldValue);\n    }\n    return _set(_cloneDeep(record), this.fieldpath, deserializedValue || fieldValue);\n  }\n\n  /**\n   * Serializes the values in the format:\n   * {id: 'vocab_id'} for controlled vocabs and\n   * {\n   *    <field_name>:\n   *      { '<default_locale>: 'field_name'},\n   *    <field_descripton>:\n   *      { <default_locale>: 'field_descripton'}\n   * }\n   * for user added entries\n   * @param {object} record - Record to serialize\n   * @param {string} defaultLocale - The default locale\n   * @returns\n   */\n  serialize(record, defaultLocale) {\n    let fieldValue = _get(record, this.fieldpath, this.serializedDefault);\n    let serializedValue = null;\n    const _serialize = (value) => {\n      let clonedValue = _cloneDeep(value);\n      if (\"id\" in value) {\n        return { id: value.id };\n      } else {\n        this.localeFields.forEach((field) => {\n          if (field in value) {\n            clonedValue[field] = { [defaultLocale]: value[field] };\n          }\n        });\n      }\n\n      return clonedValue;\n    };\n    if (fieldValue !== null) {\n      serializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_serialize)\n        : _serialize(fieldValue);\n    }\n\n    return _set(_cloneDeep(record), this.fieldpath, serializedValue || fieldValue);\n  }\n}\n","// This file is part of Invenio-RDM-Records\n// Copyright (C) 2020-2023 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio-RDM-Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { VocabularyField } from \"./VocabularyField\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport _set from \"lodash/set\";\n\nexport class AllowAdditionsVocabularyField extends VocabularyField {\n  deserialize(record) {\n    const fieldValue = _get(record, this.fieldpath, this.deserializedDefault);\n    // We deserialize the values in the format\n    // {id: 'vocab_id', <labelField>: 'vacab_name'} for controlled values\n    // and {<labelField>: 'vocab_name'} for user added entries\n    const _deserialize = (value) => ({\n      ...(value.id ? { id: value.id } : {}),\n      [this.labelField]: value[this.labelField],\n    });\n    let deserializedValue = null;\n    if (fieldValue !== null) {\n      deserializedValue = Array.isArray(fieldValue)\n        ? fieldValue.map(_deserialize)\n        : _deserialize(fieldValue);\n    }\n    return _set(_cloneDeep(record), this.fieldpath, deserializedValue || fieldValue);\n  }\n}\n","import TRANSLATE_EN from \"./en/translations.json\";\nimport TRANSLATE_DE from \"./de/translations.json\";\nimport TRANSLATE_EL from \"./el/translations.json\";\n\nexport const translations = {\n  el: { translation: TRANSLATE_EL },\n  en: { translation: TRANSLATE_EN },\n  de: { translation: TRANSLATE_DE },\n};\n","// This file is part of InvenioRdmRecords\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport i18n from \"i18next\";\n\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { translations } from \"./messages\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst options = {\n  fallbackLng: \"en\", // fallback keys\n  returnEmptyString: false,\n  debug: process.env.NODE_ENV === \"development\",\n  resources: translations,\n  keySeparator: false,\n  nsSeparator: false,\n  // specify language detection order\n  detection: {\n    order: [\"htmlTag\"],\n    // cache user language off\n    caches: [],\n  },\n  react: {\n    // Set empty - to allow html tags convert to trans tags\n    // HTML TAG | Trans TAG\n    //  <span>  | <1>\n    transKeepBasicHtmlNodesFor: [],\n  },\n};\n\nconst i18next = i18n.createInstance();\ni18next.use(LanguageDetector).use(initReactI18next).init(options);\n\nexport { i18next };\n"],"names":["CarouselItem","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","community","defaultLogo","className","showUploadBtn","React","Overridable","id","Item","concat","Image","size","src","links","logo","fallbackSrc","Content","Header","as","Grid","stackable","Column","computer","tablet","href","self_html","metadata","title","Button","content","i18next","t","icon","labelPosition","positive","slug","Description","_truncate","description","length","Component","propTypes","PropTypes","isRequired","defaultProps","component","CommunitiesCarousel","_this","_defineProperty","index","itemsPerPage","hits","state","data","i","parseInt","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","newIndex","activeIndex","animationDirection","_context","prev","next","setState","getDataIndex","stop","_x","apply","_this$state","intervalDelay","carouselTimer","setInterval","runCarousel","clearInterval","setCarouselTimer","_callee2","fetchUrl","response","_context2","cancellableFetch","withCancel","http","get","promise","sent","isLoading","t0","console","error","Container","fluid","container","width","Group","Placeholder","square","Line","Paragraph","_data$hits","_this$state2","sliceEnd","slice","map","fetchData","cancel","stopCarousel","_this2","_this$state3","_this$props2","animationSpeed","carouselSlides","startCarousel","renderPlaceholder","_isEmpty","onFocus","onBlur","verticalAlign","textAlign","Icon","inverted","role","name","onClick","onKeyDown","event","tabIndex","Transition","duration","animation","directional","FeaturedCommunities","errorMessage","message","undefined","columnNumber","widescreenColumnWidth","mobileColumnWidth","tabletColumnWidth","computerColumnWidth","Loader","active","inline","Message","negative","columns","centered","hit","FeaturedCommunity","mobile","widescreen","Segment","compact","CommunityTypeLabel","type","transparent","Label","horizontal","RestrictedLabel","access","CommunityItemComputer","_result$ui","_result$ui2","result","communityType","ui","title_l10n","canUpdate","permissions","can_update","wrapped","alt","visibility","website","organizations","target","rel","org","separator","settings_html","CommunityItemMobile","Row","CommunityItem","CommunityCompactItemComputer","_ui$type","_ui$permissions","actions","extraLabels","itemClassName","showPermissionLabel","detailUrl","isCommunityDefault","color","can_include_directly","InvenioPopup","popupId","trigger","ariaLabel","CommunityCompactItemMobile","CommunityCompactItem","CommunitiesResults","paginationOptions","total","currentResultsState","ResultsList","InvenioSearchPagination","CommunitiesSearchLayout","config","appName","_React$useState","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","basic","floated","SearchBar","placeholder","sortOptions","Sort","values","label","cmp","GridResponsiveSidebarColumn","open","onHideClick","children","SearchAppFacets","aggs","SearchAppResultsPane","layoutOptions","ResultsGridItemTemplate","Card","CommunitiesSearchBarElement","withState","passedPlaceholder","queryString","onInputChange","updateQueryState","currentQueryState","onSearch","_objectSpread","Input","action","onChange","_ref2","onKeyPress","CommunitiesEmptySearchResults","resetQuery","primary","ProtectionButtonsComponent","_len","args","Array","_key","formik","fieldPath","form","setFieldValue","_this$props3","disabled","_this$props4","publicColor","restrictedColor","widths","handlePublicButtonClick","handleRestrictionButtonClick","ProtectionButtons","_Component2","FastField","formikProps","_extends","MetadataAccess","publicMetadata","recordAccess","publicCommunity","communityAccess","FilesAccess","accessCommunity","metadataOnly","publicFiles","files","record","fullRecordRestricted","filesRestricted","filesButtonsDisplayed","Meta","disable","EmbargoCheckboxComponent","checked","Checkbox","field","EmbargoCheckboxField","embargoDisabled","change","EmbargoDateField","labelIcon","required","helpText","TextField","FieldLabel","htmlFor","EmbargoAccess","_access$embargo","_access$embargo2","_access$embargo3","recordPublic","filesPublic","communityPublic","embargoActive","embargo","embargoUntil","until","embargoReason","reason","embargoWasLifted","embargoEnabled","fmtDate","DateTime","fromISO","toLocaleString","DATE_FULL","List","Trans","Divider","hidden","TextAreaField","optimized","AccessMessage","fullyRestricted","fullyPublic","embargoedFiles","restrictedFiles","fullEmbargo","visible","warning","i18nKey","defaults","date","components","bold","AccessRightFieldCmp","showMetadataAccess","isGhostCommunity","is_ghost","isMetadataOnly","enabled","Form","Field","extra","AccessRightFieldComponent","connect","deposit","editorState","selectedCommunity","AccessRightField","emptyAdditionalDescription","lang","LanguagesField","multiple","clearable","initialOptions","serializeSuggestionsFunc","serializeSuggestions","uiProps","_objectWithoutProperties","_excluded","RemoteSelectField","suggestionAPIUrl","suggestionAPIHeaders","Accept","initialSuggestions","noQueryMessage","text","leafTraverse","obj","func","l","_typeof","options","sort","o1","o2","localeCompare","scrollTop","window","scrollTo","top","left","behavior","AdditionalDescriptionsField","recordUI","editorConfig","ArrayField","addButtonLabel","defaultNewValue","_recordUI$additional_","arrayHelpers","indexPath","fieldPathPrefix","RichInputField","remove","SelectField","suggestions","item","additional_descriptions","selectOnBlur","DescriptionsField","AffiliationsField","affiliations","affiliation","acronym","selectRef","getIn","serializeAffiliations","allowAdditions","onValueChange","selectedSuggestions","val","ref","search","CreatibutorsIdentifiers","e","prevState","selectedOptions","_unickBy","_toConsumableArray","option","valuesToOptions","noResultsMessage","selection","handleChange","onAddItem","handleIdentifierAddition","CREATIBUTOR_TYPE","ModalActions","NamesAutocompleteOptions","CreatibutorsModal","Yup","person_or_org","family_name","when","schema","isCreator","_","initialCreatibutor","isOrganization","given_name","initStatesFromInitialCreatibutor","personAffiliations","personIdentifiers","organizationAffiliations","organizationIdentifiers","saveAndContinueLabel","setTimeout","addLabel","editLabel","submittedCreatibutor","identifiersFieldPath","initialIdentifiers","_get","identifiers","identifier","arrayField","_find","submittedAffiliations","_map","formikBag","onCreatibutorChange","serializeCreatibutor","setSubmitting","resetForm","closeModal","openModal","changeContent","link","scheme","creatibutors","results","creatibutor","_creatibutor$identifi","affNames","forEach","idx","idString","push","makeIdEntry","Subheader","showPersonForm","autocompleteNames","selectedSuggestion","updateIdentifiersAndAffiliations","identifiersRef","affiliationsRef","_ref3","namesAutocompleteRef","current","personOrOrgPath","familyNameFieldPath","givenNameFieldPath","chosen","Object","entries","_ref4","_ref5","path","inputRef","createRef","_initialCreatibutor$p","_initialCreatibutor$a","_ref6","_ref7","affiliationsState","_ref8","searchQuery","roleOptions","ActionLabel","displayActionLabel","Formik","initialValues","deserializeCreatibutor","onSubmit","enableReinitialize","validationSchema","CreatorSchema","validateOnChange","validateOnBlur","_ref9","handleSubmit","typeFieldPath","organizationNameFieldPath","affiliationsFieldPath","Modal","onOpen","onClose","closeIcon","closeOnDimmerClick","RadioField","_ref10","autoFocus","_ref11","selectOnNavigation","searchInput","onPersonSearchChange","onOrganizationSearchChange","input","scrolling","Actions","CreatibutorsFieldItem","compKey","identifiersError","replaceCreatibutor","removeCreatibutor","moveCreatibutor","displayName","dropRef","_useDrag","useDrag","_useDrag2","drag","preview","_useDrop","useDrop","accept","hover","monitor","dragIndex","hoverIndex","isOver","shallow","collect","_useDrop2","drop","firstError","find","elem","includes","Ref","innerRef","selectedCreatibutor","some","height","_roleOptions$find$tex","_roleOptions$find","friendlyRole","renderRole","pointing","prompt","CreatibutorsFieldForm","formikArrayPush","_this$props$form","errors","initialErrors","formikArrayRemove","formikArrayReplace","replace","formikArrayMove","move","modal","creatibutorsList","formikInitialValues","initialError","creatibutorsError","DndProvider","backend","HTML5Backend","_creatibutorsError$in","isPerson","familyName","givenName","affiliationName","givenNameSuffix","creatibutorNameDisplay","handleOnContributorChange","CreatibutorsField","FieldArray","emptyDate","DatesField","currentValue","arrayOfValues","_step","_iterator","_createForOfIteratorHelper","requiredOptions","s","n","done","requiredOption","matchingValue","_filter","_matches","_isEqual","err","f","placeholderDate","showEmptyValue","array","getRequiredOption","hasRequiredDateValue","_has","hasRequiredTypeValue","hasRequiredDescriptionValue","GroupField","DRAFT_FETCHED","DRAFT_HAS_VALIDATION_ERRORS","DRAFT_SAVE_STARTED","DRAFT_SAVE_SUCCEEDED","DRAFT_SAVE_FAILED","DRAFT_PUBLISH_STARTED","DRAFT_PUBLISH_FAILED","DRAFT_PUBLISH_FAILED_WITH_VALIDATION_ERRORS","DRAFT_PREVIEW_STARTED","DRAFT_PREVIEW_FAILED","DRAFT_DELETE_STARTED","DRAFT_DELETE_FAILED","DRAFT_SUBMIT_REVIEW_STARTED","DRAFT_SUBMIT_REVIEW_FAILED","DRAFT_SUBMIT_REVIEW_FAILED_WITH_VALIDATION_ERRORS","RESERVE_PID_STARTED","RESERVE_PID_SUCCEEDED","RESERVE_PID_FAILED","DISCARD_PID_STARTED","DISCARD_PID_SUCCEEDED","DISCARD_PID_FAILED","FILE_UPLOAD_ADDED","FILE_UPLOAD_IN_PROGRESS","FILE_UPLOAD_FINISHED","FILE_UPLOAD_FAILED","FILE_UPLOAD_SAVE_DRAFT_FAILED","FILE_IMPORT_STARTED","FILE_IMPORT_SUCCESS","FILE_IMPORT_FAILED","FILE_DELETED_SUCCESS","FILE_DELETE_FAILED","FILE_UPLOAD_SET_CANCEL_FUNCTION","FILE_UPLOAD_CANCELLED","SET_COMMUNITY","changeURLAfterCreation","_changeURLAfterCreation","_callee10","draftURL","_context10","history","replaceState","saveDraftWithUrlUpdate","draft","draftsService","hasAlreadyId","mergingValues","save","custom_fields","abrupt","_x2","_x3","_saveDraft","_x4","_x5","_x6","_saveDraft2","_callee11","depositState","dispatchFn","failType","partialValidationActionType","draftHasValidationErrors","draftValidationErrorResponse","_depositState$editorS","_depositState$editorS2","communityStateMustBeChecked","shouldDeleteReview","shouldUpdateReview","draftWithLinks","_context11","payload","deleteReview","createOrUpdateReview","read","changeSelectedCommunity","_ref14","_callee9","dispatch","_context9","_x28","UploadState","uploading","finished","pending","initialState","_action$payload$filen","_action$payload","newState","remoteFileName","filename","normalize","progressPercentage","status","checksum","cancelUploadFn","actionState","percent","isFileUploadInProgress","_state$entries","afterCancellationEntriesState","_toPropertyKey","_state$entries2","afterDeletionEntriesState","isFileImportInProgress","NewVersionButton","onError","_useState","useState","_useState2","loading","setLoading","handleClick","post","versions","location","Popup","position","FileTableHeader","filesLocked","Table","HeaderCell","fitted","FileTableRow","_file$uploadState","_file$uploadState2","_file$uploadState3","_file$uploadState4","_file$uploadState5","_file$uploadState6","file","deleteFile","defaultPreview","setDefaultPreview","decimalSizeDisplay","isCancelling","setIsCancelling","_useState3","_useState4","isDeleting","setIsDeleting","isDefaultPreview","handleDelete","Cell","uploadState","isPending","style","fontSize","humanReadableBytes","Progress","isFailed","progress","autoSuccess","isFinished","isUploading","handleCancelUpload","FileUploadBox","filesList","dragText","uploadButtonIcon","uploadButtonText","openFileDialog","padded","FilesListTable","_useFormikContext","useFormikContext","formikDraft","Body","FileUploaderArea","filesEnabled","dropzoneParams","Dropzone","getRootProps","getInputProps","setDefaultPreviewFile","FileUploaderToolbar","filesSize","showMetadataOnlyToggle","quota","handleOnChangeMetadataOnly","maxFiles","maxfiles","maxStorage","FileUploaderComponent","isDraftRecord","hasParentRecord","uploadFiles","importParentFiles","importButtonIcon","importButtonText","warningMsg","setWarningMsg","lockFileUploader","fileState","reduce","totalSize","preventDropOnDocument","onDropAccepted","acceptedFiles","maxFileNumberReached","acceptedFilesSize","maxFileStorageReached","filesNames","duplicateFiles","filter","acceptedFile","header","list","noClick","noKeyboard","displayImportBtn","info","can_new_version","fileDetailsShape","Math","pow","FileUploader","_state$deposit$record","_state$deposit$record2","_state$files","Boolean","uploadFileUrl","service","drafts","upload","_callee3","getState","draftLinks","_context3","importParentRecordFiles","_x7","_x8","_x9","fileLinks","emptyIdentifier","IdentifiersField","schemeOptions","DepositFormSubmitActions","SAVE","PUBLISH","PUBLISH_WITHOUT_COMMUNITY","PREVIEW","DELETE","RESERVE_PID","DISCARD_PID","SUBMIT_REVIEW","DepositFormSubmitContext","setSubmitContext","PROVIDER_EXTERNAL","getFieldErrors","ReservePIDBtn","handleReservePID","UnreservePIDBtn","handleDiscardPID","ManagedUnmanagedSwitch","_Component3","onManagedUnmanagedChange","isManagedSelected","pidLabel","Radio","ManagedIdentifierComponent","_Component4","_len2","_key2","pidType","context","actionStateExtra","btnLabelDiscardPID","btnLabelGetPID","pidPlaceholder","hasIdentifier","ReserveBtn","UnreserveBtn","ManagedIdentifierCmp","UnmanagedIdentifierCmp","_Component5","_this3","newIdentifier","localIdentifier","onIdentifierChanged","prevProps","handleIdentifierUpdate","_this4","_this$props5","fieldError","CustomPIDField","_Component6","_this5","_this5$props","pid","provider","debounced","_debounce","_this5$props2","canBeManaged","canBeUnmanaged","canBeManagedAndUnmanaged","_this6","_this$props6","fieldLabel","isEditingPublishedRecord","managedHelpText","pidIcon","unmanagedHelpText","currentIdentifier","currentProvider","managedIdentifier","unmanagedIdentifier","isProviderExternal","hasManagedIdentifier","_isManagedSelected","userSelectedManaged","onExternalIdentifierChanged","PIDField","_Component7","_this7","_this7$props","Error","validatePropValues","LicenseFilter","updateQueryFilters","userSelectionFilters","filterValue","onToggleClicked","isChecked","isFilterActive","_isChecked","Menu","LicenseResults","serializeLicenses","serializeLicenseResult","description_l10n","_ref2$form","LicenseSearchBarComponent","autofocus","actionProps","setCurrentValue","executeSearch","Element","onBtnSearchClick","focusInput","focus","LicenseSearchBar","overriddenComponents","ModalTypes","LicenseSchema","shape","selectedLicense","url","LicenseModal","onLicenseChange","mode","searchConfig","initialLicenseProp","initialLicense","searchApi","InvenioSearchApi","OverridableContext","Provider","ReactSearchKit","urlHandlerApi","initialQueryState","Toggle","ResultsLoader","EmptyResults","axios","headers","filters","LicenseFieldItem","license","moveLicense","replaceLicense","removeLicense","initial","VisibleLicense","uiRights","right","uiRight","o","LicenseFieldForm","uiFieldPath","LicenseField","PublicationDateField","PublisherField","emptyReference","reference","ReferencesField","emptyRelatedWork","resource_type","relation_type","ResourceTypeField","fieldErrors","type_name","subtype_name","propsOptions","_label","restProps","frontEndOptions","createOptions","labelclassname","RelatedWorksField","marginBottom","relations","SubjectsField","limitTo","subjects","subject","prefix","limitToOptions","marginTop","Dropdown","defaultValue","preSearchChange","prepareSuggest","serializeSubjects","serializeAddedValue","emptyAdditionalTitle","AdditionalTitlesField","additional_titles","TitlesField","VersionField","ComingSoonField","tertiary","DISCARD_CHANGES_LBL","DISCARD_VERSION_LBL","DELETE_LBL","DISCARD_CHANGES_DLG","DISCARD_VERSION_DLG","DISCARD_DELETE_DLG","DialogText","actionLbl","DeleteButtonComponent","modalOpen","isPublished","isVersion","isDiscardingVersion","closeConfirmModal","draftExists","isSubmitting","_omit","capitalizedActionLbl","_capitalize","openConfirmModal","DeleteButton","is_published","connectFormik","PreviewButtonComponent","handlePreview","PreviewButton","CommunityContext","CommunityListItem","_getChosenCommunity","isInitialSubmission","_useContext","useContext","setLocalCommunity","getChosenCommunity","userCommunitiesMemberships","displaySelected","itemSelected","userMembership","invalidPermissionLevel","hasTheme","dedicatedUpload","isDisabled","CommunitySelectionSearch","allCommunities","apiConfigs","selectedConfig","_this$state$selectedC","selectedSearchApi","selectedAppId","appId","selectedInitialQueryState","toggleText","_this$props$apiConfig","myCommunities","parametrize","Pagination","page","CommunitySelectionModalComponent","localChosenCommunity","onCommunityChange","chosenCommunity","onModalChange","contextValue","setCommunity","extraContentComponents","modalHeader","handleClose","handleModalOpen","modalTrigger","CommunitySelectionModal","user_communities_memberships","PublishButtonComponent","isConfirmModalOpen","publishWithoutCommunity","numberOfFiles","buttonLabel","publishModalExtraContent","dangerouslySetInnerHTML","__html","handlePublish","PublishButton","publish_modal_extra","DepositStatus","hasStatus","computeDepositState","_record$parent3","_draftReview$receiver","_draftReview$receiver2","_record$parent4","depositStatusAllowsReviewDeletion","allowsReviewDeletionStates","depositStatusAllowsReviewUpdate","allowsReviewUpdateStates","depositStatusDisallowsSubmitForReview","disallowsSubmitForReviewStates","_selectedCommunity","_record$parent","_record$parent2","reviewCommunityId","parent","review","receiver","defaultCommunityId","communities","PUBLISHED","NEW_VERSION_DRAFT","expanded","getSelectedCommunityMetadata","communityIsSelected","draftReview","isReviewForSelectedCommunityCreated","DRAFT_WITH_REVIEW","isReviewForSelectedCommunityDeclinedOrExpired","DECLINED","EXPIRED","_isCommunityResolved","isRecordPublishedWithoutOrUnresolvedCommunity","_showDirectPublishButton","_showSubmitReviewButton","_showCommunitySelectionButton","showSubmitForReviewButton","showDirectPublishButton","disableSubmitForReviewButton","showChangeCommunityButton","showCommunitySelectionButton","showCommunityHeader","disableCommunitySelectionButton","_DepositStatus","DRAFT","IN_REVIEW","reviewComment","directPublish","recordCopy","isCommunityRestricted","SubmitReviewModal","acceptAccessToRecord","oneOf","checkboxElem","document","getElementById","querySelector","headerTitle","msgWarningTitle","msgWarningText1","submitBtnLbl","initialReviewComment","communityTitle","acceptAfterPublishRecord","ConfirmSubmitReviewSchema","additionalValidationSchema","ErrorMessage","control","shouldUnescape","ErrorLabel","SubmitReviewButtonComponent","isRecordSubmittedForReview","btnLblSubmitReview","buttonLbl","handleSubmitReview","SubmitReviewButton","SubmitReviewOrPublishComponent","changeSelectedCommunityFn","SubmitReviewOrPublishButton","SaveButtonComponent","handleSave","SaveButton","defaultLabels","ACTIONS","_ACTIONS","feedback","DisconnectedFormFeedback","labels","messages","uniqueMessages","Set","m","errorValue","_errors$access","step0Metadata","step0Files","step0Access","pids","step0Pids","_isObject","customFields","step0CustomFields","step0","fromEntries","step1","_ref12","toErrorMessages","labelledErrorMessages","errorsProp","_get2","labelledMessages","toLabelledErrorMessages","listErrors","_ref13","renderErrorMessages","backendErrorMessage","FormFeedback","BASE_HEADERS","DepositApiClientResponse","DepositApiClient","additionalApiConfig","createDraftURL","recordSerializer","constructor","additionalHeaders","apiHeaders","assign","apiConfig","withCredentials","xsrfCookieName","xsrfHeaderName","axiosWithConfig","cancelToken","_createDraft","_publishDraft","_deleteDraft","_callee4","_context4","_reservePID","_callee5","_context5","_discardPID","_callee6","_context6","_createOrUpdateReview","_callee7","communityId","_context7","_x10","_x11","_deleteReview","_callee8","_context8","_x12","_submitReview","_x13","RDMDepositApiClient","_DepositApiClient","_createResponse2","axiosRequest","errorData","deserialize","deserializeErrors","_x14","_createDraft2","serialize","_createResponse","params","expand","_x15","_readDraft","_callee12","_context12","self","_x16","_callee13","_context13","put","_x17","_x18","_publishDraft2","_callee14","_context14","publish","_x19","_deleteDraft2","_callee15","_context15","_x20","_reservePID2","_callee16","_context16","linkName","_x21","_x22","_discardPID2","_callee17","_this8","_context17","_x23","_x24","_createOrUpdateReview2","_callee18","_this9","_context18","_x25","_x26","_deleteReview2","_callee19","_this10","_context19","_x27","_submitReview2","_callee20","_this11","_context20","format","_x29","_cancelReview","_callee21","reviewLinks","_context21","_x30","_x31","DepositFileApiClient","json","initializeUploadUrl","uploadUrl","onUploadProgress","finalizeUploadUrl","RDMDepositFileApiClient","_DepositFileApiClient","onUploadProgressFn","cancelFn","floor","loaded","DepositBootstrapComponent","actionName","submitContext","saveAction","publishAction","submitReview","previewAction","deleteAction","reservePIDAction","discardPIDAction","_this$submitContext","actionFunc","t1","setErrors","finish","addEventListener","fileUploadOngoing","returnValue","validate","BaseForm","onFormSubmit","DepositBootstrap","formState","_ref3$removeSelectedC","removeSelectedCommunity","_ref4$removeSelectedC","_response","recordURL","reqResponse","nextURL","next_html","recordUrl","record_html","reservePID","discardPID","DepositDraftsService","apiClient","_read","_create","_save","_publish","_delete2","newCommunityId","RDMDepositDraftsService","_DepositDraftsService","_create2","createDraft","_read2","readDraft","_save2","_draftAlreadyCreated","saveDraft","create","_publish2","publishDraft","_delete3","deleteDraft","UploaderQueue","initializeUploadURL","currents","nextFile","shift","indexOf","splice","UploadProgressNotifier","dispatcher","cancelFunc","DepositFilesService","fileApiClient","fileUploadConcurrency","progressNotifier","_upload","_importParentRecordFiles","RDMDepositFilesService","_DepositFilesService","initializedFile","initializeFileUpload","entry","uploadFile","onUploadStarted","commitFileURL","uploaderQueue","markCompleted","_startNextUpload","finalizeFileUpload","onUploadCancelled","onUploadFailed","initializedFileMetadata","startUploadURL","fileData","isCancelled","_initializeUpload","_onError","commit","_doUpload","_finalizeUpload","onUploadCompleted","totalInProgress","maxConcurrentUploads","_startNewUpload","onUploadAdded","acc","DepositRecordSerializer","defaultLocale","RDMDepositRecordSerializer","_DepositRecordSeriali","customFieldVocabularies","fieldpath","media_files","deserializedDefault","serializedDefault","SchemaField","VocabularyField","creators","AllowAdditionsVocabularyField","labelField","contributors","publication_date","dates","languages","related_identifiers","references","funding","award","FundingField","funder","version","rights","RightsVocabularyField","localeFields","CustomField","vocabularyFields","_isArray","_removeEmptyValues","_isBoolean","_isNumber","mappedValues","_mapValues","_pickBy","_isNull","originalRecord","_pick","_cloneDeep","savedPIDsFieldValue","deserializedRecord","depositRecordSchema","deserializedErrors","_set","join","serializedRecord","_defaults","DepositService","filesService","combineReducers","depositReducer","fileReducer","preloadFiles","_files","hasSize","RDMUploadProgressNotifier","_UploadProgressNotifi","DepositFormApp","default_locale","vocabularies","createUrl","appConfig","preselectedCommunity","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","configureStore","setProgressNotifier","I18nextProvider","i18n","STATUSES","DepositStatusBoxComponent","depositReview","depositStatus","isReviewStatus","DepositStatusBox","CommunityHeaderComponent","_community$links","imagePlaceholderLink","rounded","CommunityHeader","getInputFromDOM","elementName","element","getElementsByName","hasAttribute","JSON","parse","_CustomField_brand","WeakSet","_Field","_ref$deserializedDefa","_ref$serializedDefaul","_ref$allowEmpty","allowEmpty","_ref$vocabularyFields","_classPrivateMethodInitSpec","isVocabularyField","mapValue","_value","v","recursiveMapping","_record","_assertClassBrand","_mapCustomFields","call","__key","_i","_Object$entries","_Object$entries$_i","Imprint","place","isbn","pages","Journal","volume","issue","issn","Meeting","session","sessionPart","session_part","Thesis","university","fieldValue","schemaKeys","keys","serialized","deserializedElements","deserializedElement","deserialized","serializedElements","serializedElement","_ref$labelField","_deserialize","deserializedValue","isArray","_serialize","serializedValue","identifierValue","clonedValue","_VocabularyField","_ref$localeFields","translations","el","translation","en","TRANSLATE_EN","de","TRANSLATE_DE","fallbackLng","returnEmptyString","debug","process","resources","keySeparator","nsSeparator","detection","order","caches","react","transKeepBasicHtmlNodesFor","createInstance","use","LanguageDetector","initReactI18next","init"],"sourceRoot":""}