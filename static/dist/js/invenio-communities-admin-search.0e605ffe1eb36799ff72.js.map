{"version":3,"file":"js/invenio-communities-admin-search.0e605ffe1eb36799ff72.js","mappings":"unBAgBO,IAAMA,EAAY,SAAAC,GACvB,SAAAD,EAAYE,GAAO,IAAAC,EAE0D,OAF1DC,EAAAA,EAAAA,GAAA,KAAAJ,GACjBG,EAAAE,EAAA,KAAAL,EAAA,CAAME,KAAOI,EAAAA,EAAAA,GAAAH,EAAA,aAAAI,EAAAA,EAAAA,GAAAC,IAAAA,MAQH,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMP,OALKL,EAAaP,EAAKD,MAAlBQ,SAAQG,EAAAC,KAAA,EAEdX,EAAKa,SAAS,CAAEC,SAAS,IACnBN,GAAmBO,EAAAA,EAAAA,YACvBC,EAAAA,EAAoCC,YAAYV,EAASW,MAAMC,WAChET,EAAAE,KAAA,EAC0BJ,EAAiBY,QAAO,OAA7CX,EAAYC,EAAAW,KAClBrB,EAAKa,SAAS,CAAEC,SAAS,EAAOL,aAAcA,EAAaa,OAAQZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEnEc,QAAQC,MAAKf,EAAAa,IACbvB,EAAKa,SAAS,CAAEY,MAAKf,EAAAa,GAAKT,SAAS,IAAS,yBAAAJ,EAAAgB,OAAA,GAAApB,EAAA,oBAlB9CN,EAAK2B,MAAQ,CAAElB,kBAAcmB,EAAWd,SAAS,EAAOW,WAAOG,GAAY5B,CAC7E,CAAC,OAAA6B,EAAAA,EAAAA,GAAAhC,EAAAC,IAAAgC,EAAAA,EAAAA,GAAAjC,EAAA,EAAAkC,IAAA,oBAAAC,MAED,WACEC,KAAKC,WACP,GAAC,CAAAH,IAAA,SAAAC,MAiBD,WAAS,IAAAG,EACPC,EAAyCH,KAAKN,MAAtClB,EAAY2B,EAAZ3B,aAAcK,EAAOsB,EAAPtB,QAASW,EAAKW,EAALX,MAC/BY,EAAgCJ,KAAKlC,MAA7BuC,EAAQD,EAARC,SAAUC,EAASF,EAATE,UACZC,EAAMC,EAAAA,SAASD,MAErB,OACEE,EAAAA,cAACC,EAAAA,EAAK,CAACC,KAAK,SAASC,KAAMN,GACzBG,EAAAA,cAACC,EAAAA,EAAMG,QAAO,KACZJ,EAAAA,cAACK,EAAAA,EAAM,CAACC,GAAG,MAAMC,EAAAA,EAAQC,EAAE,qBAC1BpC,GAAW4B,EAAAA,cAACS,EAAAA,EAAM,CAACC,OAAQtC,IAC3BW,GAASiB,EAAAA,cAACW,EAAAA,EAAY,CAACC,GAAG,4BAA4B7B,MAAOA,KAC5DX,IAAYW,GACZiB,EAAAA,cAACa,EAAAA,EAAK,CAACC,QAAM,EAACC,SAAO,EAACC,YAAU,GAC9BhB,EAAAA,cAACa,EAAAA,EAAMR,OAAM,KACXL,EAAAA,cAACa,EAAAA,EAAMI,IAAG,KACRjB,EAAAA,cAACa,EAAAA,EAAMK,WAAU,KAAEX,EAAAA,EAAQC,EAAE,eAC7BR,EAAAA,cAACa,EAAAA,EAAMK,WAAU,KAAEX,EAAAA,EAAQC,EAAE,aAGjCR,EAAAA,cAACa,EAAAA,EAAMM,KAAI,KACI,OAAZpD,QAAY,IAAZA,GAAkB,QAAN0B,EAAZ1B,EAAcqD,YAAI,IAAA3B,OAAA,EAAlBA,EAAoB2B,KAAKC,KAAI,SAACC,GAC7B,IAAMC,EAAYxB,EAAAA,SAASyB,QAAQF,EAAIG,YACvC,OACEzB,EAAAA,cAACa,EAAAA,EAAMI,IAAG,CAAC5B,IAAKiC,EAAIV,IAClBZ,EAAAA,cAACa,EAAAA,EAAMa,KAAI,CACTrC,IAAKiC,EAAIV,GACT,aAAYU,EAAIV,GAChBe,UAAU,kBAEV3B,EAAAA,cAAC4B,EAAAA,GAAa,CAACtC,MAAOgC,EAAIG,cAE5BzB,EAAAA,cAACa,EAAAA,EAAMa,KAAI,CAACG,UAAU,UACpB7B,EAAAA,cAAC8B,EAAAA,GAAa,CACZC,KAAK,OACLC,MAAM,SACN1C,MAAOiC,GAAazB,KAK9B,OAKPF,EAGP,IAAC,CAzEsB,CAASqC,EAAAA,WA4ElC9E,EAAa+E,UAAY,CACvBrE,SAAUsE,IAAAA,OAAiBC,WAC3BxC,SAAUuC,IAAAA,KAAeC,WACzBvC,UAAWsC,IAAAA,MAGbhF,EAAakF,aAAe,CAC1BxC,WAAW,E,mUCjGb,IASayC,E,qWAASC,CAAA,GATM,CAC1BC,OAAQ,SAACC,GAA6B,IAArBC,EAASC,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAG,KAC3B,MAAO,oBAAPE,OAA2BC,IAAKL,EAAQC,GAC1C,EACAK,QAAS,SAACN,GAA6B,IAArBC,EAASC,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAG,KAC5B,MAAO,oBAAPE,OAA2BC,IAAKL,EAAQC,GAAU,WACpD,I,glBCLF,IAkBapE,EAAsC,CACjDC,YAnBe,eAAAyE,GAAAtF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOqF,GAAW,OAAAtF,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvBgF,EAAAA,KAAKC,IAAIF,GAAY,cAAAjF,EAAAoF,OAAA,SAAApF,EAAAW,MAAA,wBAAAX,EAAAgB,OAAA,GAAApB,EAAA,KACnC,gBAFgByF,GAAA,OAAAL,EAAAM,MAAA,KAAAX,UAAA,KAoBfH,OAhBmB,eAAAe,GAAA7F,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6F,EAAOC,EAAWC,GAAO,IAAAC,EAAA,OAAAhG,IAAAA,MAAA,SAAAiG,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,OAG/C,OAFMyF,EAASD,EAAwB,eACvCA,EAAwB,eAAI,CAAE9C,GAAI+C,GAClCC,EAAA1F,KAAA,EACagF,EAAAA,KAAI,OAAQZ,EAAS,OAAQmB,GAAY,CACpD7E,KAAI2D,EAAA,GAAOmB,GACXG,QAAOtB,EAAAA,EAAA,GAAOW,EAAAA,KAAKW,SAAO,IAAEC,SAAUL,EAAUM,gBAChD,cAAAH,EAAAR,OAAA,SAAAQ,EAAAjF,MAAA,wBAAAiF,EAAA5E,OAAA,GAAAwE,EAAA,KACH,gBARoBQ,EAAAC,GAAA,OAAAV,EAAAD,MAAA,KAAAX,UAAA,KAiBnBI,QAPW,eAAAmB,GAAAxG,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwG,EAAO1B,GAAM,OAAA9E,IAAAA,MAAA,SAAAyG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cAAAkG,EAAAlG,KAAA,EACdgF,EAAAA,KAAKmB,KAAK/B,EAAUS,QAAQN,IAAQ,cAAA2B,EAAAhB,OAAA,SAAAgB,EAAAzF,MAAA,wBAAAyF,EAAApF,OAAA,GAAAmF,EAAA,KAClD,gBAFYG,GAAA,OAAAJ,EAAAZ,MAAA,KAAAX,UAAA,K,2bCL8B,IAErC4B,EAA6B,SAAAnH,GACjC,SAAAmH,EAAYlH,GAAO,IAAAC,EAKf,OALeC,EAAAA,EAAAA,GAAA,KAAAgH,GACjBjH,EAAAE,EAAA,KAAA+G,EAAA,CAAMlH,KAmBRI,EAAAA,EAAAA,GAAAH,EAAA,iBAKgB,WAAiB,IAAhBgC,EAAKqD,UAAAC,OAAA,QAAA1D,IAAAyD,UAAA,GAAAA,UAAA,GAAG,IACvBhD,EAAqErC,EAAKD,MAAlEmH,EAAiB7E,EAAjB6E,kBAAmBC,EAAgB9E,EAAhB8E,iBAAkBC,EAAmB/E,EAAnB+E,oBACxBpH,EAAK2B,MAAlB0F,WAESrF,IAIfkF,EAAkBI,QAAU,GAE9BtH,EAAKa,SAAS,CACZwG,SAAUrF,IAGZkF,EAAkBI,QAAUF,EACxBF,EAAkBI,QAAQC,QAAO,SAACC,GAAO,MAAoB,WAAfA,EAAQ,EAAe,IACrE,GAEJN,EAAkBI,QAAQG,KAAK,CAAC,SAAUzF,IAC1CmF,EAAiBD,GACnB,KAAC/G,EAAAA,EAAAA,GAAAH,EAAA,qBAEmB,WAClBA,EAAK0H,cAAc,IACrB,KAACvH,EAAAA,EAAAA,GAAAH,EAAA,mBAEiB,WAChBA,EAAK0H,cAAc,IACrB,KAACvH,EAAAA,EAAAA,GAAAH,EAAA,kBAEgB,WACfA,EAAK0H,cAAc,IACrB,IAtDE1H,EAAK2B,MAAQ,CACX0F,SAAU,KACVrH,CACJ,CAAC,OAAA6B,EAAAA,EAAAA,GAAAoF,EAAAnH,IAAAgC,EAAAA,EAAAA,GAAAmF,EAAA,EAAAlF,IAAA,oBAAAC,MAED,WACE,IAEM2F,EAFwB1F,KAAKlC,MAA3BmH,kBACuCI,QACPM,MAAK,SAACC,GAAG,OAAKA,EAAIC,SAAS,SAAS,IACxEH,GAEF1F,KAAKpB,SAAS,CACZwG,SAAUM,EAAW,IAG3B,GAAC,CAAA5F,IAAA,SAAAC,MAyCD,WACE,IAAQqF,EAAapF,KAAKN,MAAlB0F,SACR,OACE3E,EAAAA,cAACqF,EAAAA,EAAOC,MAAK,CAACC,OAAK,GACjBvF,EAAAA,cAACqF,EAAAA,EAAM,CACL1D,UAAU,uBACV6D,QAASjG,KAAKkG,kBACd/E,OAAqB,MAAbiE,GAEPpE,EAAAA,EAAQC,EAAE,cAEbR,EAAAA,cAACqF,EAAAA,EAAM,CACL1D,UAAU,uBACV6D,QAASjG,KAAKmG,gBACdhF,OAAqB,MAAbiE,GAEPpE,EAAAA,EAAQC,EAAE,YAEbR,EAAAA,cAACqF,EAAAA,EAAM,CACL1D,UAAU,uBACV6D,QAASjG,KAAKoG,eACdjF,OAAqB,MAAbiE,GAEPpE,EAAAA,EAAQC,EAAE,wBAInB,IAAC,CAvFgC,CAASyB,EAAAA,WA0F5CsC,EAA8BrC,UAAY,CACxCuC,iBAAkBtC,IAAAA,KAAeC,WACjCoC,kBAAmBrC,IAAAA,OAAiBC,WACpCsC,oBAAqBvC,IAAAA,MAGvBoC,EAA8BlC,aAAe,CAC3CqC,qBAAqB,GAGhB,IAAMkB,GAAuBC,EAAAA,EAAAA,IAAUtB,G,+QClGvC,IAAMuB,EAAkB,SAAA1I,GAAA,SAAA0I,IAAA,OAAAvI,EAAAA,EAAAA,GAAA,KAAAuI,GAAAtI,EAAA,KAAAsI,EAAAnD,UAAA,QAAAxD,EAAAA,EAAAA,GAAA2G,EAAA1I,IAAAgC,EAAAA,EAAAA,GAAA0G,EAAA,EAAAzG,IAAA,SAAAC,MAC7B,WACE,IAAAK,EAA4BJ,KAAKlC,MAAzB0I,EAAMpG,EAANoG,OAAQC,EAAOrG,EAAPqG,QAChB,OACEhG,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,OAAK2B,UAAU,2BACb3B,EAAAA,cAAA,OAAK2B,UAAU,sBACb3B,EAAAA,cAAA,OAAK2B,UAAU,sEACb3B,EAAAA,cAAC4F,EAAoB,CAAClB,qBAAmB,KAG3C1E,EAAAA,cAAA,OAAK2B,UAAU,sCACb3B,EAAAA,cAAC4F,EAAoB,CAAClB,qBAAmB,MAG7C1E,EAAAA,cAAA,OAAK2B,UAAU,cACb3B,EAAAA,cAACiG,EAAAA,GAAS,CAACC,OAAK,KAGlBlG,EAAAA,cAAA,OAAK2B,UAAU,yCACb3B,EAAAA,cAAA,OAAK2B,UAAU,gEAEb3B,EAAAA,cAACmG,EAAAA,GAAI,CAACC,OAAQL,EAAOM,iBAI3BrG,EAAAA,cAAA,OAAK2B,UAAU,aAGf3B,EAAAA,cAACsG,EAAAA,EAAI,KACHtG,EAAAA,cAACsG,EAAAA,EAAKC,OAAM,CACVC,SAAU,EACVC,OAAQ,GACRC,OAAQ,GACRC,YAAa,EACbC,WAAY,GAEZ5G,EAAAA,cAAC6G,EAAAA,GAAY,CAACC,KAAMf,EAAOe,KAAMd,QAASA,KAE5ChG,EAAAA,cAACsG,EAAAA,EAAKC,OAAM,CACVE,OAAQ,GACRC,OAAQ,GACRF,SAAU,GACVG,YAAa,GACbC,WAAY,IAEZ5G,EAAAA,cAAC+G,EAAAA,GAAoB,CACnBC,cAAejB,EAAOiB,cACtBhB,QAASA,MAMrB,IAAC,CAvD4B,CAAS/D,EAAAA,WA0DxC6D,EAAmB5D,UAAY,CAC7B6D,OAAQ5D,IAAAA,OAAiBC,WACzB4D,QAAS7D,IAAAA,QAGX2D,EAAmBzD,aAAe,CAChC2D,QAAS,I,qXChEJ,IAAMiB,EAAmB,SAAA7J,GAC9B,SAAA6J,EAAY5J,GAAO,IAAAC,EAKf,OALeC,EAAAA,EAAAA,GAAA,KAAA0J,GACjB3J,EAAAE,EAAA,KAAAyJ,EAAA,CAAM5J,KAAOI,EAAAA,EAAAA,GAAAH,EAAA,8BAAA0F,GAAAtF,EAAAA,EAAAA,GAAAC,IAAAA,MAaA,SAAAC,EAAOwI,GAAM,IAAAc,EAAAvH,EAAA9B,EAAAsJ,EAAAC,EAAA,OAAAzJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQxB,OAPMgJ,EAAoB5J,EAAK+J,QAAzBH,gBAAevH,EACqBrC,EAAKD,MAAzCQ,EAAQ8B,EAAR9B,SAAUsJ,EAAqBxH,EAArBwH,sBAElB7J,EAAKa,SAAS,CAAEC,SAAS,IAEzBd,EAAKgK,mBAAoBjJ,EAAAA,EAAAA,YACvBC,EAAAA,EAAoCyE,QAAQlF,IAC5CG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMZ,EAAKgK,kBAAkB5I,QAAO,OACpCpB,EAAKa,SAAS,CAAEC,SAAS,EAAOW,WAAOG,IACvCgI,EAAgB,CACdK,MAAOhH,EAAAA,EAAQC,EAAE,WACjBgH,QAASjH,EAAAA,EAAQC,EAAE,iCAAkC,CAAEI,GAAI/C,EAAS4J,OACpEC,KAAM,YAERP,IAAwBnJ,EAAAE,KAAA,oBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEV,cAAVA,EAAAa,GAAqB,CAAAb,EAAAE,KAAA,gBAAAF,EAAAoF,OAAA,kBAEzB9F,EAAKa,SAAS,CACZY,OAAO,OAAAf,EAAAa,SAAA,IAAAb,EAAAa,IAAe,QAAfuI,EAAApJ,EAAAa,GAAO8I,gBAAQ,IAAAP,GAAM,QAANA,EAAfA,EAAiBxI,YAAI,IAAAwI,OAAA,EAArBA,EAAuBQ,WAAO,OAAA5J,EAAAa,SAAA,IAAAb,EAAAa,QAAA,EAAIb,EAAAa,GAAO+I,SAChDxJ,SAAS,IAEXU,QAAQC,MAAKf,EAAAa,IAAQ,yBAAAb,EAAAgB,OAAA,GAAApB,EAAA,mBAExB,gBAAAyF,GAAA,OAAAL,EAAAM,MAAA,KAAAX,UAAA,EAzCc,KAyCdlF,EAAAA,EAAAA,GAAAH,EAAA,oBACkB,YAEjBuK,EADiCvK,EAAKD,MAA9BwK,uBAEV,IA5CEvK,EAAK2B,MAAQ,CACXb,SAAS,EACTW,WAAOG,GACP5B,CACJ,CAAC,OAAA6B,EAAAA,EAAAA,GAAA8H,EAAA7J,IAAAgC,EAAAA,EAAAA,GAAA6H,EAAA,EAAA5H,IAAA,uBAAAC,MAED,WACEC,KAAK+H,mBAAqB/H,KAAK+H,kBAAkBQ,QACnD,GAAC,CAAAzI,IAAA,SAAAC,MAsCD,WAAS,IAAAyI,EAAA,KACPrI,EAA2BH,KAAKN,MAAxBF,EAAKW,EAALX,MAAOX,EAAOsB,EAAPtB,QACPP,EAAa0B,KAAKlC,MAAlBQ,SACR,OACEmC,EAAAA,cAAAA,EAAAA,SAAA,KACGjB,GACCiB,EAAAA,cAACW,EAAAA,aAAY,CACXqH,OAAQzH,EAAAA,EAAQC,EAAE,sBAClBgH,QAASzI,EACTgD,KAAK,cACLJ,UAAU,kBACVsG,UAAQ,IAGZjI,EAAAA,cAACC,EAAAA,EAAMG,QAAO,KACXG,EAAAA,EAAQC,EAAE,qDAAsD,CAC/DI,GAAI/C,EAAS4J,OAEfzH,EAAAA,cAAA,SAAG,IAAEnC,EAASqK,SAASX,MAAM,KAAK,MAEpCvH,EAAAA,cAACC,EAAAA,EAAMkI,QAAO,KACZnI,EAAAA,cAACqF,EAAAA,EAAM,CAACG,QAASjG,KAAK6I,iBAAkBC,QAAQ,QAAO,SAGvDrI,EAAAA,cAACqF,EAAAA,EAAM,CACLiD,KAAK,QACLC,cAAc,OACdxG,KAAK,kBACLC,MAAM,MACNwF,QAASjH,EAAAA,EAAQC,EAAE,qBACnBgF,QAAS,SAACgD,GAAK,OAAKT,EAAKU,aAAaD,EAAM,EAC5CpK,QAASA,EACTsK,SAAUtK,KAKpB,IAAC,CAtF6B,CAAS6D,EAAAA,YAuFxCxE,EAAAA,EAAAA,GAvFYwJ,EAAmB,cAaT0B,EAAAA,IA4EvB1B,EAAoB/E,UAAY,CAC9BrE,SAAUsE,IAAAA,OAAiBC,WAC3ByF,qBAAsB1F,IAAAA,KAAeC,WACrC+E,sBAAuBhF,IAAAA,KAAeC,Y,oRChGwB,IAE3CwG,EAAoB,SAAAxL,GACvC,SAAAwL,EAAYvL,GAAO,IAAAC,EAMf,OANeC,EAAAA,EAAAA,GAAA,KAAAqL,GACjBtL,EAAAE,EAAA,KAAAoL,EAAA,CAAMvL,KAAOI,EAAAA,EAAAA,GAAAH,EAAA,gBAAAI,EAAAA,EAAAA,GAAAC,IAAAA,MAgBA,SAAAC,IAAA,IAAAiL,EAAAlB,EAAAmB,EAAAC,EAAA,OAAApL,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUX,OATM2K,EAAkBvL,EAAKD,MAAvBwL,cACRvL,EAAKa,SAAS,CAAEC,SAAS,IACb,mCACZd,EAAKgK,mBAAoBjJ,EAAAA,EAAAA,YACvB6E,EAAAA,KAAKC,IAFK,mCAEI,CACZU,QAAS,CACPmF,OAAQ,yCAGZhL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBZ,EAAKgK,kBAAkB5I,QAAO,OAA/CiJ,EAAQ3J,EAAAW,KACRmK,EAAUnB,EAAS/I,KAAKwC,KAAKA,KAE7B2H,EAAaD,EACf,CAAEG,KAAMH,EAAQ,GAAGI,WAAY5J,MAAOwJ,EAAQ,GAAGlI,GAAIvB,IAAKyJ,EAAQ,GAAGlI,IACrE,CAAC,EACLtD,EAAKa,SAAS,CACZ2K,QAASA,EACT1K,SAAS,EACT2K,WAAYA,IAEdF,EAAc,iBAAkBE,EAAWzJ,OAAOtB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAElDV,EAAKa,SAAS,CAAEC,SAAS,IACzBU,QAAQC,MAAKf,EAAAa,IAAI,yBAAAb,EAAAgB,OAAA,GAAApB,EAAA,oBAzCnBN,EAAK2B,MAAQ,CACX6J,aAAS5J,EACTd,SAAS,EACT2K,gBAAY7J,GACZ5B,CACJ,CAAC,OAAA6B,EAAAA,EAAAA,GAAAyJ,EAAAxL,IAAAgC,EAAAA,EAAAA,GAAAwJ,EAAA,EAAAvJ,IAAA,oBAAAC,MAED,WACEC,KAAK4J,cACP,GAAC,CAAA9J,IAAA,uBAAAC,MAED,WACEC,KAAK+H,mBAAqB/H,KAAK+H,kBAAkBQ,QACnD,GAAC,CAAAzI,IAAA,SAAAC,MAgCD,WACE,IAAAI,EAAyCH,KAAKN,MAAtCb,EAAOsB,EAAPtB,QAAS0K,EAAOpJ,EAAPoJ,QAASC,EAAUrJ,EAAVqJ,WAE1B,OAAI3K,EACK4B,EAAAA,cAACoJ,EAAAA,EAAW,CAAChL,QAASA,IAI7B4B,EAAAA,cAACqJ,EAAAA,SAAQ,CACPC,UAAQ,EACRC,MAAOhJ,EAAAA,EAAQC,EAAE,4BACjBsI,QAASA,EACTU,UAAU,iBACVC,aAAcV,EACdW,WAAW,GAGjB,IAAC,CAjEsC,CAASzH,EAAAA,WAoElD2G,EAAqB1G,UAAY,CAC/B2G,cAAe1G,IAAAA,KAAeC,Y,g5BC7DL,IAENuH,EAAa,SAAAvM,GAChC,SAAAuM,EAAYtM,GAAO,IAAAC,EAWd,OAXcC,EAAAA,EAAAA,GAAA,KAAAoM,GACjBrM,EAAAE,EAAA,KAAAmM,EAAA,CAAMtM,KAAOI,EAAAA,EAAAA,GAAAH,EAAA,8BAAA0F,GAAAtF,EAAAA,EAAAA,GAAAC,IAAAA,MAmBA,SAAAC,EAAOwI,GAAM,IAAAc,EAAAvH,EAAA9B,EAAAsJ,EAAAzD,EAAA0D,EAAA,OAAAzJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASxB,OARMgJ,EAAoB5J,EAAK+J,QAAzBH,gBAAevH,EACqBrC,EAAKD,MAAzCQ,EAAQ8B,EAAR9B,SAAUsJ,EAAqBxH,EAArBwH,sBACZzD,EAAOnB,EAAA,GAAQ6D,GAErB9I,EAAKa,SAAS,CAAEC,SAAS,IAEzBd,EAAKgK,mBAAoBjJ,EAAAA,EAAAA,YACvBC,EAAAA,EAAmC,OAAQT,EAAU6F,IACrD1F,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMZ,EAAKgK,kBAAkB5I,QAAO,OACpCpB,EAAKa,SAAS,CAAEC,SAAS,EAAOW,WAAOG,IACvCgI,EAAgB,CACdK,MAAOhH,EAAAA,EAAQC,EAAE,WACjBgH,QAASjH,EAAAA,EAAQC,EAAE,gCAAiC,CAAEI,GAAI/C,EAAS+C,KACnE8G,KAAM,YAERP,IAAwBnJ,EAAAE,KAAA,oBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEV,cAAVA,EAAAa,GAAqB,CAAAb,EAAAE,KAAA,gBAAAF,EAAAoF,OAAA,kBAEzB9F,EAAKa,SAAS,CACZY,OAAO,OAAAf,EAAAa,SAAA,IAAAb,EAAAa,IAAe,QAAfuI,EAAApJ,EAAAa,GAAO8I,gBAAQ,IAAAP,GAAM,QAANA,EAAfA,EAAiBxI,YAAI,IAAAwI,OAAA,EAArBA,EAAuBQ,WAAO,OAAA5J,EAAAa,SAAA,IAAAb,EAAAa,QAAA,EAAIb,EAAAa,GAAO+I,SAChDxJ,SAAS,IAEXU,QAAQC,MAAKf,EAAAa,IAAQ,yBAAAb,EAAAgB,OAAA,GAAApB,EAAA,mBAExB,gBAAAyF,GAAA,OAAAL,EAAAM,MAAA,KAAAX,UAAA,EAhDc,KAgDdlF,EAAAA,EAAAA,GAAAH,EAAA,oBAEkB,YAEjBuK,EADiCvK,EAAKD,MAA9BwK,uBAEV,KAACpK,EAAAA,EAAAA,GAAAH,EAAA,kBAEgB,WACf,MAAO,CACLsM,oBAAgB1K,EAChB2K,UAAM3K,EACN4K,mBAAe5K,EACf6K,YAAY,EAEhB,KAACtM,EAAAA,EAAAA,GAAAH,EAAA,oBAEkB,SAACuL,EAAevJ,GACjCuJ,EAAc,aAAcvJ,EAC9B,IAjEEhC,EAAK2B,MAAQ,CACXb,SAAS,EACTW,WAAOG,GAET5B,EAAK0M,gBAAkBC,EAAAA,GAAW,CAChCL,eAAgBK,EAAAA,KAAaX,WAC7BO,KAAMI,EAAAA,KACNH,cAAeG,EAAAA,KACfF,WAAYE,EAAAA,KAAWX,aACtBhM,CACL,CAAC,OAAA6B,EAAAA,EAAAA,GAAAwK,EAAAvM,IAAAgC,EAAAA,EAAAA,GAAAuK,EAAA,EAAAtK,IAAA,uBAAAC,MAED,WACEC,KAAK+H,mBAAqB/H,KAAK+H,kBAAkBQ,QACnD,GAAC,CAAAzI,IAAA,SAAAC,MAqDD,WAAS,IAAAyI,EAAA,KACPrI,EAA2BH,KAAKN,MAAxBF,EAAKW,EAALX,MAAOX,EAAOsB,EAAPtB,QAET8L,EAA0C,WAD3B3K,KAAKlC,MAAlBQ,SACkBsM,OAAOC,WACjC,OACEpK,EAAAA,cAACqK,EAAAA,OAAM,CACLC,SAAU/K,KAAKkJ,aACf8B,oBAAkB,EAClBC,cAAejL,KAAKkL,iBACpBC,kBAAkB,EAClBC,gBAAgB,EAChBC,iBAAkBrL,KAAKyK,kBAEtB,SAAAzG,GAA6C,IAA1C6C,EAAM7C,EAAN6C,OAAQqC,EAAYlF,EAAZkF,aAAcI,EAAatF,EAAbsF,cACxB,OACE7I,EAAAA,cAAAA,EAAAA,SAAA,KACGjB,GACCiB,EAAAA,cAACW,EAAAA,aAAY,CACXqH,OAAQzH,EAAAA,EAAQC,EAAE,oBAClBgH,QAASzI,EACTgD,KAAK,cACLJ,UAAU,kBACVsG,UAAQ,IAGZjI,EAAAA,cAACC,EAAAA,EAAMG,QAAO,KACZJ,EAAAA,cAAC6K,EAAAA,EAAI,CAAClJ,UAAU,cACd3B,EAAAA,cAACqF,EAAAA,EAAOC,MAAK,CAACwF,OAAQ,EAAG5E,OAAK,GAC5BlG,EAAAA,cAACqF,EAAAA,EAAM,CACLrD,MAAOoE,EAAO2D,WAAa,QAAU,GACrCrJ,OAAQ0F,EAAO2D,WAEfzK,OAAK,EACLkG,QAAS,SAACgD,EAAOuC,GAAI,OACnBhD,EAAKiD,iBAAiBnC,GAAe,EAAK,GAE7C,UAGD7I,EAAAA,cAACqF,EAAAA,EAAM,CACL3E,QAAS0F,EAAO2D,WAChB/H,MAAQoE,EAAO2D,WAAqB,GAAR,MAC5BzK,OAAO,EACPkG,QAAS,SAACgD,EAAOuC,GAAI,OACnBhD,EAAKiD,iBAAiBnC,GAAe,EAAM,GAE9C,YAIDzC,EAAO2D,YAAcG,GACrBlK,EAAAA,cAACiL,EAAAA,EAAO,CAAClJ,MAAI,EAACmJ,SAAO,EAACvJ,UAAU,WAC9B3B,EAAAA,cAACmL,EAAAA,EAAI,CAACC,KAAK,iBACV7K,EAAAA,EAAQC,EACP,+IAIL4F,EAAO2D,aAAeG,GACrBlK,EAAAA,cAACiL,EAAAA,EAAO,CAAClJ,MAAI,EAACkG,UAAQ,EAACtG,UAAU,WAC/B3B,EAAAA,cAACmL,EAAAA,EAAI,CAACC,KAAK,iBACV7K,EAAAA,EAAQC,EACP,yKAINR,EAAAA,cAACqL,EAAAA,EAAO,CAACC,QAAM,IACftL,EAAAA,cAAC6K,EAAAA,EAAKU,MAAK,KACTvL,EAAAA,cAAC4I,EAAoB,CAACC,cAAeA,KAEvC7I,EAAAA,cAAC6K,EAAAA,EAAKU,MAAK,KACTvL,EAAAA,cAACwL,EAAAA,UAAS,CACRhC,UAAU,gBACVD,MAAOhJ,EAAAA,EAAQC,EAAE,0BACjBiL,YAAalL,EAAAA,EAAQC,EACnB,oFAINR,EAAAA,cAAC6K,EAAAA,EAAKU,MAAK,KACTvL,EAAAA,cAAC0L,EAAAA,cAAa,CAAClC,UAAU,OAAOD,MAAOhJ,EAAAA,EAAQC,EAAE,QAAS0F,OAAK,OAIrElG,EAAAA,cAACC,EAAAA,EAAMkI,QAAO,KACZnI,EAAAA,cAACqF,EAAAA,EAAM,CAACG,QAASuC,EAAKK,iBAAkBC,QAAQ,QAAO,SAGvDrI,EAAAA,cAACqF,EAAAA,EAAM,CACLiD,KAAK,QACLC,cAAc,OACdxG,KAAK,kBACLC,MAAM,MACNwF,QAASjH,EAAAA,EAAQC,EAAE,iBACnBgF,QAAS,SAACgD,GAAK,OAAKC,EAAaD,EAAM,EACvCpK,QAASA,EACTsK,SAAUtK,KAKpB,GAGN,IAAC,CA9K+B,CAAS6D,EAAAA,YAASxE,EAAAA,EAAAA,GAA/BkM,EAAa,cAmBXhB,EAAAA,IA8JvBgB,EAAczH,UAAY,CACxBrE,SAAUsE,IAAAA,OAAiBC,WAC3B+E,sBAAuBhF,IAAAA,KAAeC,WACtCyF,qBAAsB1F,IAAAA,KAAeC,Y,oSC3LhC,IAAMuJ,GAAqB,SAAAvO,GAChC,SAAAuO,EAAYtO,GAAO,IAAAC,EAMf,OANeC,EAAAA,EAAAA,GAAA,KAAAoO,GACjBrO,EAAAE,GAAA,KAAAmO,EAAA,CAAMtO,KAAOI,EAAAA,EAAAA,GAAAH,EAAA,uBAQO,SAACsO,EAAC5I,GAAiD,IAA7C6I,EAAa7I,EAAb6I,cAAeC,EAAQ9I,EAAR8I,SAAUC,EAAa/I,EAAb+I,cAC3ClO,EAAaP,EAAKD,MAAlBQ,SAEc,WAAlBkO,EACFzO,EAAKa,SAAS,CACZ0B,WAAW,EACXmM,YAAazL,EAAAA,EAAQC,EAAE,oBACvByL,UACEjM,EAAAA,cAAC2J,EAAa,CACZxC,sBAAuB7J,EAAK4O,cAC5BrE,qBAAsBvK,EAAK6O,WAC3BtO,SAAUA,MAIW,YAAlBkO,EACTzO,EAAKa,SAAS,CACZ0B,WAAW,EACXmM,YAAazL,EAAAA,EAAQC,EAAE,qBACvByL,UACEjM,EAAAA,cAACiH,EAAmB,CAClBE,sBAAuB7J,EAAK4O,cAC5BrE,qBAAsBvK,EAAK6O,WAC3BtO,SAAUA,MAKhBP,EAAKa,SAAS,CACZ0B,WAAW,EACXmM,YAAaF,EACbG,UACEjM,EAAAA,cAACoM,EAAAA,GAAU,CACTC,UAAWN,EACXO,aAAcT,EACd1E,sBAAuB7J,EAAK4O,cAC5BrE,qBAAsBvK,EAAK6O,WAC3BtO,SAAUA,KAKpB,KAACJ,EAAAA,EAAAA,GAAAH,EAAA,cAEY,WACXA,EAAKa,SAAS,CACZ0B,WAAW,EACXmM,iBAAa9M,EACb+M,eAAW/M,GAEf,KAACzB,EAAAA,EAAAA,GAAAH,EAAA,iBAEe,WACd,IAAQiP,EAAoBjP,EAAKD,MAAzBkP,gBACRjP,EAAKa,SAAS,CACZ0B,WAAW,EACXmM,iBAAa9M,EACb+M,eAAW/M,IAEbqN,GACF,IAnEEjP,EAAK2B,MAAQ,CACXY,WAAW,EACXmM,iBAAa9M,EACb+M,eAAW/M,GACX5B,CACJ,CAAC,OAAA6B,EAAAA,EAAAA,GAAAwM,EAAAvO,IAAAgC,EAAAA,EAAAA,GAAAuM,EAAA,EAAAtM,IAAA,SAAAC,MAgED,WAAS,IAAAyI,EAAA,KACPpI,EAAuCJ,KAAKlC,MAApCmP,EAAO7M,EAAP6M,QAASC,EAAO9M,EAAP8M,QAAS5O,EAAQ8B,EAAR9B,SAC1B6B,EAA8CH,KAAKN,MAA3CY,EAASH,EAATG,UAAWmM,EAAWtM,EAAXsM,YAAaC,EAASvM,EAATuM,UAChC,OACEjM,EAAAA,cAAAA,EAAAA,SAAA,KACG0M,OAAOC,QAAQH,GAASnL,KAAI,SAAAkC,GAA+B,IAAAW,GAAA0I,EAAAA,EAAAA,GAAArJ,EAAA,GAA7B8I,EAASnI,EAAA,GAAE2I,EAAY3I,EAAA,GACpD,MAAkB,WAAdmI,GAA2BxO,EAASiP,gBAAgBC,WAgB/B,YAAdV,GAA2BxO,EAASiP,gBAAgBC,WAE3D/M,EAAAA,cAACyM,EAAO,CACNpN,IAAKgN,EACL7G,QAASuC,EAAKiF,oBACdnB,cAAegB,EAAaI,eAC5BnB,SAAUe,EAAa5D,KACvB8C,cAAeM,EACftK,MAAI,EACJmE,OAAK,EACLqC,cAAc,QAEdvI,EAAAA,cAACmL,EAAAA,EAAI,CAACC,KAAK,SACVyB,EAAa5D,MAGRpL,EAASiP,gBAAgBC,YAA4B,YAAdV,OAA5C,EAEHrM,EAAAA,cAACyM,EAAO,CACNpN,IAAKgN,EACL7G,QAASuC,EAAKiF,oBACdnB,cAAegB,EAAaI,eAC5BnB,SAAUe,EAAa5D,KACvB8C,cAAeM,GAEdQ,EAAa5D,MAvChBjJ,EAAAA,cAACyM,EAAO,CACNpN,IAAKgN,EACL7G,QAASuC,EAAKiF,oBACdnB,cAAegB,EAAaI,eAC5BnB,SAAUe,EAAa5D,KACvB8C,cAAeM,EACftK,MAAI,EACJmE,OAAK,EACLqC,cAAc,QAEdvI,EAAAA,cAACmL,EAAAA,EAAI,CAACC,KAAK,oBACVyB,EAAa5D,KAgCtB,IACAjJ,EAAAA,cAACkN,EAAAA,GAAW,CAACrN,UAAWA,EAAWhC,SAAUA,GAC1CmO,GAAehM,EAAAA,cAACC,EAAAA,EAAMI,OAAM,KAAE2L,IAC7BmB,KAASlB,IAAcA,GAIjC,IAAC,CAlI+B,CAAShK,EAAAA,W,ykBAqI3C0J,GAAsBzJ,UAAY,CAChCrE,SAAUsE,IAAAA,OAAiBC,WAC3BmK,gBAAiBpK,IAAAA,KAAeC,WAChCoK,QAASrK,IAAAA,MAAgB,CACvB8G,KAAM9G,IAAAA,OAAiBC,WACvB6K,eAAgB9K,IAAAA,OAAiBC,WACjCgL,MAAOjL,IAAAA,OAAiBC,aAE1BqK,QAAStK,IAAAA,MAGXwJ,GAAsBtJ,aAAe,CACnCoK,QAASpH,EAAAA,EACTmH,aAAStN,GCrJX,IAAMmO,GAAeC,SAASC,eAAe,yBAEvCC,IAAoBC,EAAAA,EAAAA,IAA4BJ,IAChDK,IAAsBC,EAAAA,EAAAA,aAAY7L,EAAAA,GAAe,CACrDC,KAAM,OACNC,MAAO,WAGH4L,GAAmBrL,GAAAA,GAAA,GACpBiL,IAAiB,IACpB,sCAAuCE,GACvC,4CAA6CvQ,EAAAA,EAC7C,wCAAyCwO,GACzC,mBAAoB7F,KAGtB+H,EAAAA,EAAAA,GACED,IACA,EACA,yBACA,EACAE,EAAAA,G,qEC7BWC,EAAkB,SAAChP,GAAK,IAAAqI,EAAA,OAC9B,OAALrI,QAAK,IAALA,GAAe,QAAVqI,EAALrI,EAAO4I,gBAAQ,IAAAP,GAAM,QAANA,EAAfA,EAAiBxI,YAAI,IAAAwI,OAAA,EAArBA,EAAuBQ,WAAgB,OAAL7I,QAAK,IAALA,OAAK,EAALA,EAAO6I,QAAO,EASrCoG,EAA2B,SAACjP,GAAK,IAAAkP,EAAAC,EAAAC,EAAA,MAAM,CAClDvG,QAAc,OAAL7I,QAAK,IAALA,GAAe,QAAVkP,EAALlP,EAAO4I,gBAAQ,IAAAsG,GAAM,QAANA,EAAfA,EAAiBrP,YAAI,IAAAqP,OAAA,EAArBA,EAAuBrG,QAChCwG,OAAa,OAALrP,QAAK,IAALA,GAAe,QAAVmP,EAALnP,EAAO4I,gBAAQ,IAAAuG,GAAM,QAANA,EAAfA,EAAiBtP,YAAI,IAAAsP,OAAA,EAArBA,EAAuBE,OAC/BC,OAAa,OAALtP,QAAK,IAALA,GAAe,QAAVoP,EAALpP,EAAO4I,gBAAQ,IAAAwG,GAAM,QAANA,EAAfA,EAAiBvP,YAAI,IAAAuP,OAAA,EAArBA,EAAuBE,OAChC,EAEYC,EAAwB,SAACC,GAAO,OAC3C7B,OAAOC,QAAQ4B,GAASlN,KAAI,SAAA2B,GAAA,IAAAO,GAAAqJ,EAAAA,EAAAA,GAAA5J,EAAA,GAAYwL,GAAFjL,EAAA,GAAYA,EAAA,UAAO,CACvD3C,GAAI4N,EAAW5N,GACf8G,KAAM8G,EAAW9G,KAClB,GAAE,C,uZCrBE,IAAM/G,EAAY,SAAAvD,GAAA,SAAAuD,IAAA,OAAApD,EAAAA,EAAAA,GAAA,KAAAoD,GAAAnD,EAAA,KAAAmD,EAAAgC,UAAA,QAAAxD,EAAAA,EAAAA,GAAAwB,EAAAvD,IAAAgC,EAAAA,EAAAA,GAAAuB,EAAA,EAAAtB,IAAA,SAAAC,MACvB,WACE,IAAQP,EAAUQ,KAAKlC,MAAf0B,MACR0P,GAA0BT,EAAAA,EAAAA,IAAyBjP,GAA7CqP,EAAMK,EAANL,OAAQxG,EAAO6G,EAAP7G,QAKd,OAHKA,IACHA,EAAU7I,EAAM6I,SAGhB5H,EAAAA,cAACiL,EAAAA,EAAO,CAACtJ,UAAU,cAAcsG,UAAQ,GACvCjI,EAAAA,cAACiL,EAAAA,EAAQ5K,OAAM,KAAEuH,GAChBwG,GACCpO,EAAAA,cAACiL,EAAAA,EAAQyD,KAAI,KACVN,EAAO/M,KAAI,SAACtC,GACX,OACEiB,EAAAA,cAACiL,EAAAA,EAAQ0D,KAAI,CAACtP,IAAKN,GAEA,YAAhBA,EAAM6P,OAAuB5O,EAAAA,cAAA,cAASjB,EAAM6P,MAAM,MACxB,IAA1B7P,EAAM8P,SAASjM,OACd7D,EAAM8P,SAAS,GAEf7O,EAAAA,cAACiL,EAAAA,EAAQyD,KAAI,KACV3P,EAAM8P,SAASxN,KAAI,SAACuG,GAAO,OAC1B5H,EAAAA,cAACiL,EAAAA,EAAQ0D,KAAI,CAACtP,IAAKuI,GAAUA,EAAuB,KAMhE,KAKV,IAAC,CAlCsB,CAAS3F,EAAAA,WAqClCtB,EAAauB,UAAY,CACvBnD,MAAOoD,IAAAA,OAAiBC,W","sources":["webpack://invenio-assets/./js/invenio_communities/administration/FeatureModal.js","webpack://invenio-assets/./js/invenio_communities/administration/api/routes.js","webpack://invenio-assets/./js/invenio_communities/administration/api/api.js","webpack://invenio-assets/./js/invenio_communities/administration/search/filters/DeletionStatusFilter.js","webpack://invenio-assets/./js/invenio_communities/administration/search/RecordSearchLayout.js","webpack://invenio-assets/./js/invenio_communities/administration/components/RestoreConfirmation.js","webpack://invenio-assets/./js/invenio_communities/administration/components/RemovalReasonsSelect.js","webpack://invenio-assets/./js/invenio_communities/administration/components/TombstoneForm.js","webpack://invenio-assets/./js/invenio_communities/administration/components/RecordResourceActions.js","webpack://invenio-assets/./js/invenio_communities/administration/search.js","webpack://invenio-assets/./js/invenio_communities/api/serializers.js","webpack://invenio-assets/./js/invenio_communities/members/components/ErrorMessage.js"],"sourcesContent":["// This file is part of InvenioCommunities\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\nimport { InvenioAdministrationCommunitiesApi } from \"./api\";\nimport { DateTime } from \"luxon\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withCancel } from \"react-invenio-forms\";\nimport { Header, Table, Loader, Modal } from \"semantic-ui-react\";\nimport { DateFormatter, BoolFormatter } from \"@js/invenio_administration\";\nimport { ErrorMessage } from \"@js/invenio_communities/members/components/ErrorMessage\";\nimport { i18next } from \"@translations/invenio_communities/i18next\";\n\nexport class FeatureModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { featuredList: undefined, loading: false, error: undefined };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const { resource } = this.props;\n    try {\n      this.setState({ loading: true });\n      const cancellableFetch = withCancel(\n        InvenioAdministrationCommunitiesApi.getFeatured(resource.links.featured)\n      );\n      const featuredList = await cancellableFetch.promise;\n      this.setState({ loading: false, featuredList: featuredList.data });\n    } catch (e) {\n      console.error(e);\n      this.setState({ error: e, loading: false });\n    }\n  };\n\n  render() {\n    const { featuredList, loading, error } = this.state;\n    const { children, modalOpen } = this.props;\n    const now = DateTime.now();\n\n    return (\n      <Modal role=\"dialog\" open={modalOpen}>\n        <Modal.Content>\n          <Header as=\"h2\">{i18next.t(\"Planned features\")}</Header>\n          {loading && <Loader active={loading} />}\n          {error && <ErrorMessage id=\"featured-community-errors\" error={error} />}\n          {!loading && !error && (\n            <Table celled striped collapsing>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>{i18next.t(\"Start date\")}</Table.HeaderCell>\n                  <Table.HeaderCell>{i18next.t(\"Active\")}</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {featuredList?.hits?.hits.map((row) => {\n                  const startDate = DateTime.fromISO(row.start_date);\n                  return (\n                    <Table.Row key={row.id}>\n                      <Table.Cell\n                        key={row.id}\n                        data-label={row.id}\n                        className=\"word-break-all\"\n                      >\n                        <DateFormatter value={row.start_date} />\n                      </Table.Cell>\n                      <Table.Cell textAlign=\"center\">\n                        <BoolFormatter\n                          icon=\"star\"\n                          color=\"yellow\"\n                          value={startDate <= now}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n              </Table.Body>\n            </Table>\n          )}\n        </Modal.Content>\n        {children}\n      </Modal>\n    );\n  }\n}\n\nFeatureModal.propTypes = {\n  resource: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  modalOpen: PropTypes.bool,\n};\n\nFeatureModal.defaultProps = {\n  modalOpen: false,\n};\n","import _get from \"lodash/get\";\n\nconst APIRoutesGenerators = {\n  delete: (record, idKeyPath = \"id\") => {\n    return `/api/communities/${_get(record, idKeyPath)}`;\n  },\n  restore: (record, idKeyPath = \"id\") => {\n    return `/api/communities/${_get(record, idKeyPath)}/restore`;\n  },\n};\n\nexport const APIRoutes = {\n  ...APIRoutesGenerators,\n};\n","import { APIRoutes } from \"./routes\";\nimport { http } from \"react-invenio-forms\";\n\nconst getFeatured = async (apiEndpoint) => {\n  return await http.get(apiEndpoint);\n};\n\nconst deleteCommunity = async (community, payload) => {\n  const reason = payload[\"removal_reason\"];\n  payload[\"removal_reason\"] = { id: reason };\n  // WARNING: Axios does not accept payload without data key\n  return await http.delete(APIRoutes.delete(community), {\n    data: { ...payload },\n    headers: { ...http.headers, if_match: community.revision_id },\n  });\n};\n\nconst restore = async (record) => {\n  return await http.post(APIRoutes.restore(record));\n};\n\nexport const InvenioAdministrationCommunitiesApi = {\n  getFeatured: getFeatured,\n  delete: deleteCommunity,\n  restore: restore,\n};\n","/*\n * // This file is part of Invenio-Communities\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-Communities is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Button } from \"semantic-ui-react\";\n\nclass DeletionStatusFilterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"P\",\n    };\n  }\n\n  componentDidMount() {\n    const { currentQueryState } = this.props;\n    const userSelectionFilters = currentQueryState.filters;\n    const openFilter = userSelectionFilters.find((obj) => obj.includes(\"status\"));\n    if (openFilter) {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        selected: openFilter[1],\n      });\n    }\n  }\n\n  /**\n   * Updates queryFilters based on selection and removing previous filters\n   * @param {string} selectedFilter indicates which button was clicked\n   * @param {string} value true if open requests and false if closed requests\n   */\n  filterRecords = (value = \"P\") => {\n    const { currentQueryState, updateQueryState, keepFiltersOnUpdate } = this.props;\n    const { selected } = this.state;\n\n    if (selected === value) {\n      return;\n    } else {\n      // remove other filters on change\n      currentQueryState.filters = [];\n    }\n    this.setState({\n      selected: value,\n    });\n\n    currentQueryState.filters = keepFiltersOnUpdate\n      ? currentQueryState.filters.filter((element) => element[0] !== \"status\")\n      : [];\n\n    currentQueryState.filters.push([\"status\", value]);\n    updateQueryState(currentQueryState);\n  };\n\n  retrievePublished = () => {\n    this.filterRecords(\"P\");\n  };\n\n  retrieveDeleted = () => {\n    this.filterRecords(\"D\");\n  };\n\n  retrieveMarked = () => {\n    this.filterRecords(\"X\");\n  };\n\n  render() {\n    const { selected } = this.state;\n    return (\n      <Button.Group basic>\n        <Button\n          className=\"record-search-filter\"\n          onClick={this.retrievePublished}\n          active={selected === \"P\"}\n        >\n          {i18next.t(\"Published\")}\n        </Button>\n        <Button\n          className=\"record-search-filter\"\n          onClick={this.retrieveDeleted}\n          active={selected === \"D\"}\n        >\n          {i18next.t(\"Deleted\")}\n        </Button>\n        <Button\n          className=\"record-search-filter\"\n          onClick={this.retrieveMarked}\n          active={selected === \"X\"}\n        >\n          {i18next.t(\"Scheduled for purge\")}\n        </Button>\n      </Button.Group>\n    );\n  }\n}\n\nDeletionStatusFilterComponent.propTypes = {\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  keepFiltersOnUpdate: PropTypes.bool,\n};\n\nDeletionStatusFilterComponent.defaultProps = {\n  keepFiltersOnUpdate: false,\n};\n\nexport const DeletionStatusFilter = withState(DeletionStatusFilterComponent);\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { SearchAppResultsPane } from \"@js/invenio_search_ui/components\";\nimport { SearchFacets } from \"@js/invenio_administration\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { DeletionStatusFilter } from \"./filters\";\nimport { SearchBar, Sort } from \"react-searchkit\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport class RecordSearchLayout extends Component {\n  render() {\n    const { config, appName } = this.props;\n    return (\n      <>\n        {/* auto column grid used instead of SUI grid for better searchbar width adjustment */}\n        <div className=\"auto-column-grid triple\">\n          <div className=\"flex column-mobile\">\n            <div className=\"mobile only rel-mb-1 flex align-items-center justify-space-between\">\n              <DeletionStatusFilter keepFiltersOnUpdate />\n            </div>\n\n            <div className=\"tablet only computer only rel-mr-2\">\n              <DeletionStatusFilter keepFiltersOnUpdate />\n            </div>\n          </div>\n          <div className=\"full-width\">\n            <SearchBar fluid />\n          </div>\n\n          <div className=\"flex align-items-center column-mobile\">\n            <div className=\"full-width flex align-items-center justify-end column-mobile\">\n              {/*<SearchFilters customFilters={customFilters} />*/}\n              <Sort values={config.sortOptions} />\n            </div>\n          </div>\n        </div>\n        <div className=\"rel-mb-1\">\n          {/*<FilterLabels ignoreFilters={[\"is_open\"]} />*/}\n        </div>\n        <Grid>\n          <Grid.Column\n            computer={4}\n            mobile={16}\n            tablet={16}\n            largeScreen={2}\n            widescreen={2}\n          >\n            <SearchFacets aggs={config.aggs} appName={appName} />\n          </Grid.Column>\n          <Grid.Column\n            mobile={16}\n            tablet={16}\n            computer={12}\n            largeScreen={14}\n            widescreen={14}\n          >\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n  }\n}\n\nRecordSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nRecordSearchLayout.defaultProps = {\n  appName: \"\",\n};\n","/*\n * // This file is part of Invenio-Communities\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { InvenioAdministrationCommunitiesApi } from \"../api\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport { withCancel, ErrorMessage } from \"react-invenio-forms\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport class RestoreConfirmation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: undefined,\n    };\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleSubmit = async (values) => {\n    const { addNotification } = this.context;\n    const { resource, actionSuccessCallback } = this.props;\n\n    this.setState({ loading: true });\n\n    this.cancellableAction = withCancel(\n      InvenioAdministrationCommunitiesApi.restore(resource)\n    );\n\n    try {\n      await this.cancellableAction.promise;\n      this.setState({ loading: false, error: undefined });\n      addNotification({\n        title: i18next.t(\"Success\"),\n        content: i18next.t(\"Community {{id}} was restored.\", { id: resource.slug }),\n        type: \"success\",\n      });\n      actionSuccessCallback();\n    } catch (error) {\n      if (error === \"UNMOUNTED\") return;\n\n      this.setState({\n        error: error?.response?.data?.message || error?.message,\n        loading: false,\n      });\n      console.error(error);\n    }\n  };\n  handleModalClose = () => {\n    const { actionCancelCallback } = this.props;\n    actionCancelCallback();\n  };\n\n  render() {\n    const { error, loading } = this.state;\n    const { resource } = this.props;\n    return (\n      <>\n        {error && (\n          <ErrorMessage\n            header={i18next.t(\"Unable to restore.\")}\n            content={error}\n            icon=\"exclamation\"\n            className=\"text-align-left\"\n            negative\n          />\n        )}\n        <Modal.Content>\n          {i18next.t(\"Are you sure you want to restore community #{{id}}\", {\n            id: resource.slug,\n          })}\n          <b>\"{resource.metadata.title}\"</b> ?\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.handleModalClose} floated=\"left\">\n            Close\n          </Button>\n          <Button\n            size=\"small\"\n            labelPosition=\"left\"\n            icon=\"trash alternate\"\n            color=\"red\"\n            content={i18next.t(\"Restore community\")}\n            onClick={(event) => this.handleSubmit(event)}\n            loading={loading}\n            disabled={loading}\n          />\n        </Modal.Actions>\n      </>\n    );\n  }\n}\n\nRestoreConfirmation.propTypes = {\n  resource: PropTypes.object.isRequired,\n  actionCancelCallback: PropTypes.func.isRequired,\n  actionSuccessCallback: PropTypes.func.isRequired,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown, http, withCancel } from \"react-invenio-forms\";\nimport { Dropdown as SUIDropdown } from \"semantic-ui-react\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport default class RemovalReasonsSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: undefined,\n      loading: false,\n      defaultOpt: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchOptions();\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  fetchOptions = async () => {\n    const { setFieldValue } = this.props;\n    this.setState({ loading: true });\n    const url = \"/api/vocabularies/removalreasons\";\n    this.cancellableAction = withCancel(\n      http.get(url, {\n        headers: {\n          Accept: \"application/vnd.inveniordm.v1+json\",\n        },\n      })\n    );\n    try {\n      const response = await this.cancellableAction.promise;\n      const options = response.data.hits.hits;\n\n      const defaultOpt = options\n        ? { text: options[0].title_l10n, value: options[0].id, key: options[0].id }\n        : {};\n      this.setState({\n        options: options,\n        loading: false,\n        defaultOpt: defaultOpt,\n      });\n      setFieldValue(\"removal_reason\", defaultOpt.value);\n    } catch (e) {\n      this.setState({ loading: false });\n      console.error(e);\n    }\n  };\n\n  render() {\n    const { loading, options, defaultOpt } = this.state;\n\n    if (loading) {\n      return <SUIDropdown loading={loading} />;\n    }\n\n    return (\n      <Dropdown\n        required\n        label={i18next.t(\"Unavailability statement\")}\n        options={options}\n        fieldPath=\"removal_reason\"\n        defaultValue={defaultOpt}\n        clearable={false}\n      />\n    );\n  }\n}\n\nRemovalReasonsSelect.propTypes = {\n  setFieldValue: PropTypes.func.isRequired,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport RemovalReasonsSelect from \"./RemovalReasonsSelect\";\nimport { InvenioAdministrationCommunitiesApi } from \"../api\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport { Formik } from \"formik\";\nimport {\n  withCancel,\n  ErrorMessage,\n  TextField,\n  TextAreaField,\n} from \"react-invenio-forms\";\nimport { Form, Button, Modal, Divider, Message, Icon } from \"semantic-ui-react\";\nimport { NotificationContext } from \"@js/invenio_administration\";\nimport * as Yup from \"yup\";\n\nexport default class TombstoneForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      error: undefined,\n    };\n    this.tombstoneSchema = Yup.object({\n      removal_reason: Yup.string().required(),\n      note: Yup.string(),\n      citation_text: Yup.string(),\n      is_visible: Yup.bool().required(),\n    });\n  }\n\n  componentWillUnmount() {\n    this.cancellableAction && this.cancellableAction.cancel();\n  }\n\n  static contextType = NotificationContext;\n\n  handleSubmit = async (values) => {\n    const { addNotification } = this.context;\n    const { resource, actionSuccessCallback } = this.props;\n    const payload = { ...values };\n\n    this.setState({ loading: true });\n\n    this.cancellableAction = withCancel(\n      InvenioAdministrationCommunitiesApi.delete(resource, payload)\n    );\n\n    try {\n      await this.cancellableAction.promise;\n      this.setState({ loading: false, error: undefined });\n      addNotification({\n        title: i18next.t(\"Success\"),\n        content: i18next.t(\"Community {{id}} was deleted.\", { id: resource.id }),\n        type: \"success\",\n      });\n      actionSuccessCallback();\n    } catch (error) {\n      if (error === \"UNMOUNTED\") return;\n\n      this.setState({\n        error: error?.response?.data?.message || error?.message,\n        loading: false,\n      });\n      console.error(error);\n    }\n  };\n\n  handleModalClose = () => {\n    const { actionCancelCallback } = this.props;\n    actionCancelCallback();\n  };\n\n  initFormValues = () => {\n    return {\n      removal_reason: undefined,\n      note: undefined,\n      citation_text: undefined,\n      is_visible: true,\n    };\n  };\n\n  handleVisibility = (setFieldValue, value) => {\n    setFieldValue(\"is_visible\", value);\n  };\n\n  render() {\n    const { error, loading } = this.state;\n    const { resource } = this.props;\n    const isPublic = resource.access.visibility === \"public\";\n    return (\n      <Formik\n        onSubmit={this.handleSubmit}\n        enableReinitialize\n        initialValues={this.initFormValues()}\n        validateOnChange={false}\n        validateOnBlur={false}\n        validationSchema={this.tombstoneSchema}\n      >\n        {({ values, handleSubmit, setFieldValue }) => {\n          return (\n            <>\n              {error && (\n                <ErrorMessage\n                  header={i18next.t(\"Unable to delete\")}\n                  content={error}\n                  icon=\"exclamation\"\n                  className=\"text-align-left\"\n                  negative\n                />\n              )}\n              <Modal.Content>\n                <Form className=\"full-width\">\n                  <Button.Group widths={2} fluid>\n                    <Button\n                      color={values.is_visible ? \"green\" : \"\"}\n                      active={values.is_visible}\n                      // }\n                      value\n                      onClick={(event, elem) =>\n                        this.handleVisibility(setFieldValue, true)\n                      }\n                    >\n                      Public\n                    </Button>\n                    <Button\n                      active={!values.is_visible}\n                      color={!values.is_visible ? \"red\" : \"\"}\n                      value={false}\n                      onClick={(event, elem) =>\n                        this.handleVisibility(setFieldValue, false)\n                      }\n                    >\n                      Hidden\n                    </Button>\n                  </Button.Group>\n                  {!values.is_visible && isPublic && (\n                    <Message icon warning className=\"display\">\n                      <Icon name=\"warning sign\" />\n                      {i18next.t(\n                        \"The tombstone is set to hidden but your record is public. Best practice is to provide a public tombstone when deactivating public records.\"\n                      )}\n                    </Message>\n                  )}\n                  {values.is_visible && !isPublic && (\n                    <Message icon negative className=\"display\">\n                      <Icon name=\"warning sign\" />\n                      {i18next.t(\n                        \"RISK INFORMATION LEAKAGE: The tombstone is set to public but your record is restricted. Please make sure no restricted information is shared in the tombstone below.\"\n                      )}\n                    </Message>\n                  )}\n                  <Divider hidden />\n                  <Form.Field>\n                    <RemovalReasonsSelect setFieldValue={setFieldValue} />\n                  </Form.Field>\n                  <Form.Field>\n                    <TextField\n                      fieldPath=\"citation_text\"\n                      label={i18next.t(\"Bibliographic citation\")}\n                      placeholder={i18next.t(\n                        \"Input citation text. Blank field will be filled with APA citation by default.\"\n                      )}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <TextAreaField fieldPath=\"note\" label={i18next.t(\"Note\")} fluid />\n                  </Form.Field>\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button onClick={this.handleModalClose} floated=\"left\">\n                  Close\n                </Button>\n                <Button\n                  size=\"small\"\n                  labelPosition=\"left\"\n                  icon=\"trash alternate\"\n                  color=\"red\"\n                  content={i18next.t(\"Delete record\")}\n                  onClick={(event) => handleSubmit(event)}\n                  loading={loading}\n                  disabled={loading}\n                />\n              </Modal.Actions>\n            </>\n          );\n        }}\n      </Formik>\n    );\n  }\n}\n\nTombstoneForm.propTypes = {\n  resource: PropTypes.object.isRequired,\n  actionSuccessCallback: PropTypes.func.isRequired,\n  actionCancelCallback: PropTypes.func.isRequired,\n};\n","/*\n * // This file is part of Invenio-App-Rdm\n * // Copyright (C) 2023 CERN.\n * //\n * // Invenio-App-Rdm is free software; you can redistribute it and/or modify it\n * // under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { RestoreConfirmation } from \"./RestoreConfirmation\";\nimport TombstoneForm from \"./TombstoneForm\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Icon } from \"semantic-ui-react\";\nimport { ActionModal, ActionForm } from \"@js/invenio_administration\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\n\nexport class RecordResourceActions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    };\n  }\n\n  onModalTriggerClick = (e, { payloadSchema, dataName, dataActionKey }) => {\n    const { resource } = this.props;\n\n    if (dataActionKey === \"delete\") {\n      this.setState({\n        modalOpen: true,\n        modalHeader: i18next.t(\"Delete community\"),\n        modalBody: (\n          <TombstoneForm\n            actionSuccessCallback={this.handleSuccess}\n            actionCancelCallback={this.closeModal}\n            resource={resource}\n          />\n        ),\n      });\n    } else if (dataActionKey === \"restore\") {\n      this.setState({\n        modalOpen: true,\n        modalHeader: i18next.t(\"Restore community\"),\n        modalBody: (\n          <RestoreConfirmation\n            actionSuccessCallback={this.handleSuccess}\n            actionCancelCallback={this.closeModal}\n            resource={resource}\n          />\n        ),\n      });\n    } else {\n      this.setState({\n        modalOpen: true,\n        modalHeader: dataName,\n        modalBody: (\n          <ActionForm\n            actionKey={dataActionKey}\n            actionSchema={payloadSchema}\n            actionSuccessCallback={this.handleSuccess}\n            actionCancelCallback={this.closeModal}\n            resource={resource}\n          />\n        ),\n      });\n    }\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    });\n  };\n\n  handleSuccess = () => {\n    const { successCallback } = this.props;\n    this.setState({\n      modalOpen: false,\n      modalHeader: undefined,\n      modalBody: undefined,\n    });\n    successCallback();\n  };\n\n  render() {\n    const { actions, Element, resource } = this.props;\n    const { modalOpen, modalHeader, modalBody } = this.state;\n    return (\n      <>\n        {Object.entries(actions).map(([actionKey, actionConfig]) => {\n          if (actionKey === \"delete\" && !resource.deletion_status.is_deleted) {\n            return (\n              <Element\n                key={actionKey}\n                onClick={this.onModalTriggerClick}\n                payloadSchema={actionConfig.payload_schema}\n                dataName={actionConfig.text}\n                dataActionKey={actionKey}\n                icon\n                fluid\n                labelPosition=\"left\"\n              >\n                <Icon name=\"trash alternate\" />\n                {actionConfig.text}\n              </Element>\n            );\n          } else if (actionKey === \"restore\" && resource.deletion_status.is_deleted) {\n            return (\n              <Element\n                key={actionKey}\n                onClick={this.onModalTriggerClick}\n                payloadSchema={actionConfig.payload_schema}\n                dataName={actionConfig.text}\n                dataActionKey={actionKey}\n                icon\n                fluid\n                labelPosition=\"left\"\n              >\n                <Icon name=\"undo\" />\n                {actionConfig.text}\n              </Element>\n            );\n          } else if (!resource.deletion_status.is_deleted && actionKey !== \"restore\") {\n            return (\n              <Element\n                key={actionKey}\n                onClick={this.onModalTriggerClick}\n                payloadSchema={actionConfig.payload_schema}\n                dataName={actionConfig.text}\n                dataActionKey={actionKey}\n              >\n                {actionConfig.text}\n              </Element>\n            );\n          }\n        })}\n        <ActionModal modalOpen={modalOpen} resource={resource}>\n          {modalHeader && <Modal.Header>{modalHeader}</Modal.Header>}\n          {!_isEmpty(modalBody) && modalBody}\n        </ActionModal>\n      </>\n    );\n  }\n}\n\nRecordResourceActions.propTypes = {\n  resource: PropTypes.object.isRequired,\n  successCallback: PropTypes.func.isRequired,\n  actions: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    payload_schema: PropTypes.object.isRequired,\n    order: PropTypes.number.isRequired,\n  }),\n  Element: PropTypes.node,\n};\n\nRecordResourceActions.defaultProps = {\n  Element: Button,\n  actions: undefined,\n};\n","// This file is part of InvenioCommunities\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { initDefaultSearchComponents } from \"@js/invenio_administration\";\nimport { createSearchAppInit } from \"@js/invenio_search_ui\";\nimport { RecordSearchLayout } from \"./search/RecordSearchLayout\";\nimport { FeatureModal } from \"./FeatureModal\";\nimport { parametrize } from \"react-overridable\";\nimport { NotificationController, BoolFormatter } from \"@js/invenio_administration\";\nimport { RecordResourceActions } from \"./components/RecordResourceActions\";\n\nconst domContainer = document.getElementById(\"invenio-search-config\");\n\nconst defaultComponents = initDefaultSearchComponents(domContainer);\nconst CustomBoolFormatter = parametrize(BoolFormatter, {\n  icon: \"star\",\n  color: \"yellow\",\n});\n\nconst overridenComponents = {\n  ...defaultComponents,\n  \"InvenioAdministration.BoolFormatter\": CustomBoolFormatter,\n  \"InvenioAdministration.ActionModal.feature\": FeatureModal,\n  \"InvenioAdministration.ResourceActions\": RecordResourceActions,\n  \"SearchApp.layout\": RecordSearchLayout,\n};\n\ncreateSearchAppInit(\n  overridenComponents,\n  true,\n  \"invenio-search-config\",\n  false,\n  NotificationController\n);\n","// This file is part of Invenio-communities\n// Copyright (C) 2022 CERN.\n//\n// Invenio-communities is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nexport const errorSerializer = (error) =>\n  error?.response?.data?.message || error?.message;\n\nexport const payloadSerializer = (content, format) => ({\n  payload: {\n    content,\n    format,\n  },\n});\n\nexport const communityErrorSerializer = (error) => ({\n  message: error?.response?.data?.message,\n  errors: error?.response?.data?.errors,\n  status: error?.response?.data?.status,\n});\n\nexport const bulkMembersSerializer = (members) =>\n  Object.entries(members).map(([memberId, memberData]) => ({\n    id: memberData.id,\n    type: memberData.type,\n  }));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message } from \"semantic-ui-react\";\nimport { communityErrorSerializer } from \"../../api/serializers\";\n\nexport class ErrorMessage extends Component {\n  render() {\n    const { error } = this.props;\n    let { errors, message } = communityErrorSerializer(error);\n\n    if (!message) {\n      message = error.message;\n    }\n    return (\n      <Message className=\"ml-20 mr-20\" negative>\n        <Message.Header>{message}</Message.Header>\n        {errors && (\n          <Message.List>\n            {errors.map((error) => {\n              return (\n                <Message.Item key={error}>\n                  {/* when there is no field Marshmallow returns _schema */}\n                  {error.field !== \"_schema\" && <strong>{error.field}: </strong>}\n                  {error.messages.length === 1 ? (\n                    error.messages[0]\n                  ) : (\n                    <Message.List>\n                      {error.messages.map((message) => (\n                        <Message.Item key={message}>{message}</Message.Item>\n                      ))}\n                    </Message.List>\n                  )}\n                </Message.Item>\n              );\n            })}\n          </Message.List>\n        )}\n      </Message>\n    );\n  }\n}\n\nErrorMessage.propTypes = {\n  error: PropTypes.object.isRequired,\n};\n"],"names":["FeatureModal","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","_asyncToGenerator","_regeneratorRuntime","_callee","resource","cancellableFetch","featuredList","_context","prev","next","setState","loading","withCancel","InvenioAdministrationCommunitiesApi","getFeatured","links","featured","promise","sent","data","t0","console","error","stop","state","undefined","_inherits","_createClass","key","value","this","fetchData","_featuredList$hits","_this$state","_this$props","children","modalOpen","now","DateTime","React","Modal","role","open","Content","Header","as","i18next","t","Loader","active","ErrorMessage","id","Table","celled","striped","collapsing","Row","HeaderCell","Body","hits","map","row","startDate","fromISO","start_date","Cell","className","DateFormatter","textAlign","BoolFormatter","icon","color","Component","propTypes","PropTypes","isRequired","defaultProps","APIRoutes","_objectSpread","delete","record","idKeyPath","arguments","length","concat","_get","restore","_ref","apiEndpoint","http","get","abrupt","_x","apply","_ref2","_callee2","community","payload","reason","_context2","headers","if_match","revision_id","_x2","_x3","_ref3","_callee3","_context3","post","_x4","DeletionStatusFilterComponent","currentQueryState","updateQueryState","keepFiltersOnUpdate","selected","filters","filter","element","push","filterRecords","openFilter","find","obj","includes","Button","Group","basic","onClick","retrievePublished","retrieveDeleted","retrieveMarked","DeletionStatusFilter","withState","RecordSearchLayout","config","appName","SearchBar","fluid","Sort","values","sortOptions","Grid","Column","computer","mobile","tablet","largeScreen","widescreen","SearchFacets","aggs","SearchAppResultsPane","layoutOptions","RestoreConfirmation","addNotification","actionSuccessCallback","_error$response","context","cancellableAction","title","content","slug","type","response","message","actionCancelCallback","cancel","_this2","header","negative","metadata","Actions","handleModalClose","floated","size","labelPosition","event","handleSubmit","disabled","NotificationContext","RemovalReasonsSelect","setFieldValue","options","defaultOpt","Accept","text","title_l10n","fetchOptions","SUIDropdown","Dropdown","required","label","fieldPath","defaultValue","clearable","TombstoneForm","removal_reason","note","citation_text","is_visible","tombstoneSchema","Yup","isPublic","access","visibility","Formik","onSubmit","enableReinitialize","initialValues","initFormValues","validateOnChange","validateOnBlur","validationSchema","Form","widths","elem","handleVisibility","Message","warning","Icon","name","Divider","hidden","Field","TextField","placeholder","TextAreaField","RecordResourceActions","e","payloadSchema","dataName","dataActionKey","modalHeader","modalBody","handleSuccess","closeModal","ActionForm","actionKey","actionSchema","successCallback","actions","Element","Object","entries","_slicedToArray","actionConfig","deletion_status","is_deleted","onModalTriggerClick","payload_schema","ActionModal","_isEmpty","order","domContainer","document","getElementById","defaultComponents","initDefaultSearchComponents","CustomBoolFormatter","parametrize","overridenComponents","createSearchAppInit","NotificationController","errorSerializer","communityErrorSerializer","_error$response2","_error$response3","_error$response4","errors","status","bulkMembersSerializer","members","memberData","_communityErrorSerial","List","Item","field","messages"],"sourceRoot":""}