{"version":3,"file":"js/3092.52e3578ec356f754946e.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_requests/search/RequestStatusFilterComponent.js","webpack://invenio-assets/./js/invenio_requests/search/RequestsSearchLayout.js","webpack://invenio-assets/./js/invenio_requests/components/RequestTypeIcon.js","webpack://invenio-assets/./js/invenio_requests/request/RequestStatusLabel.js","webpack://invenio-assets/./js/invenio_requests/search/ComputerTabletRequestItem.js","webpack://invenio-assets/./js/invenio_requests/search/MobileRequestItem.js","webpack://invenio-assets/./js/invenio_requests/search/RequestsEmptyResults.js","webpack://invenio-assets/./js/invenio_requests/search/RequestsResults.js"],"sourcesContent":["// This file is part of Invenio\n// Copyright (C) 2023 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { withState } from \"react-searchkit\";\nimport { Button } from \"semantic-ui-react\";\n\nclass RequestStatusFilterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { currentQueryState } = this.props;\n    const userSelectionFilters = currentQueryState.filters;\n    const openFilter = userSelectionFilters.find((obj) => obj.includes(\"is_open\"));\n    if (openFilter) {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        open: openFilter.includes(\"true\"),\n      });\n    }\n  }\n\n  /**\n   * Updates queryFilters based on selection and removing previous filters\n   * @param {string} OpenStatus true if open requests and false if closed requests\n   */\n  retrieveRequests = (OpenStatus) => {\n    const { currentQueryState, updateQueryState, keepFiltersOnUpdate } = this.props;\n    const { open } = this.state;\n\n    if (open === OpenStatus) {\n      return;\n    }\n    this.setState({\n      open: OpenStatus,\n    });\n    currentQueryState.filters = keepFiltersOnUpdate\n      ? currentQueryState.filters.filter((element) => element[0] !== \"is_open\")\n      : [];\n    currentQueryState.filters.push([\"is_open\", OpenStatus]);\n    updateQueryState(currentQueryState);\n  };\n\n  retrieveOpenRequests = () => {\n    this.retrieveRequests(true);\n  };\n\n  retrieveClosedRequests = () => {\n    this.retrieveRequests(false);\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <Button.Group basic>\n        <Button\n          className=\"request-search-filter\"\n          onClick={this.retrieveOpenRequests}\n          active={open === true}\n        >\n          {i18next.t(\"Open\")}\n        </Button>\n        <Button\n          className=\"request-search-filter\"\n          onClick={this.retrieveClosedRequests}\n          active={open === false}\n        >\n          {i18next.t(\"Closed\")}\n        </Button>\n      </Button.Group>\n    );\n  }\n}\n\nRequestStatusFilterComponent.propTypes = {\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  keepFiltersOnUpdate: PropTypes.bool,\n};\n\nRequestStatusFilterComponent.defaultProps = {\n  keepFiltersOnUpdate: false,\n};\n\nexport const RequestStatusFilter = withState(RequestStatusFilterComponent);\n","// This file is part of Invenio\n// Copyright (C) 2023 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport {\n  SearchAppFacets,\n  SearchAppResultsPane,\n} from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport { RequestStatusFilter } from \"./RequestStatusFilterComponent\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { GridResponsiveSidebarColumn } from \"react-invenio-forms\";\nimport { SearchBar } from \"react-searchkit\";\nimport { Button, Container, Grid } from \"semantic-ui-react\";\n\nexport const RequestsSearchLayout = ({ config, appName }) => {\n  const [sidebarVisible, setSidebarVisible] = React.useState(false);\n  return (\n    <Container>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column only=\"mobile tablet\" mobile={3} tablet={1}>\n            <Button\n              basic\n              size=\"medium\"\n              icon=\"sliders\"\n              onClick={() => setSidebarVisible(true)}\n              aria-label={i18next.t(\"Filter results\")}\n              className=\"rel-mb-1\"\n            />\n          </Grid.Column>\n\n          <Grid.Column\n            mobile={13}\n            tablet={4}\n            computer={3}\n            floated=\"right\"\n            className=\"text-align-right-mobile\"\n          >\n            <RequestStatusFilter className=\"rel-mb-1\" />\n          </Grid.Column>\n\n          <Grid.Column mobile={16} tablet={11} computer={9}>\n            <SearchBar placeholder={i18next.t(\"Search in my requests...\")} />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <GridResponsiveSidebarColumn\n            width={4}\n            open={sidebarVisible}\n            onHideClick={() => setSidebarVisible(false)}\n          >\n            <SearchAppFacets aggs={config.aggs} appName={appName} />\n          </GridResponsiveSidebarColumn>\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <SearchAppResultsPane\n              layoutOptions={config.layoutOptions}\n              appName={appName}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nRequestsSearchLayout.propTypes = {\n  config: PropTypes.object.isRequired,\n  appName: PropTypes.string,\n};\n\nRequestsSearchLayout.defaultProps = {\n  appName: undefined,\n};\n","// This file is part of InvenioRequests\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n// This file is part of InvenioRequests\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport class RequestTypeIcon extends Component {\n  render() {\n    const { type } = this.props;\n    return (\n      <Overridable id={`InvenioRequests.RequestTypeIcon.layout.${type}`}>\n        <Icon name=\"plus\" className=\"neutral\" />\n      </Overridable>\n    );\n  }\n}\n\nRequestTypeIcon.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Overridable.component(\n  \"InvenioRequests.RequestTypeIcon\",\n  RequestTypeIcon\n);\n","// This file is part of InvenioRequests\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n// This file is part of InvenioRequests\n// Copyright (C) 2022 CERN.\n//\n// Invenio RDM Records is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\nimport { Label } from \"semantic-ui-react\";\n\nclass RequestStatusLabel extends Component {\n  render() {\n    const { status } = this.props;\n    return (\n      <Overridable id={`RequestStatusLabel.layout.${status}`}>\n        <Label>{status}</Label>\n      </Overridable>\n    );\n  }\n}\n\nRequestStatusLabel.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nexport default Overridable.component(\n  \"InvenioRequests.RequestStatusLabel\",\n  RequestStatusLabel\n);\n","// This file is part of InvenioRDM\n// Copyright (C) 2023 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport { default as RequestTypeIcon } from \"@js/invenio_requests/components/RequestTypeIcon\";\nimport { Trans } from \"react-i18next\";\nimport React from \"react\";\nimport RequestTypeLabel from \"@js/invenio_requests/request/RequestTypeLabel\";\nimport RequestStatusLabel from \"@js/invenio_requests/request/RequestStatusLabel\";\nimport { RequestActionController } from \"@js/invenio_requests/request/actions/RequestActionController\";\nimport { Icon, Item } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { toRelativeTime } from \"react-invenio-forms\";\nimport { DateTime } from \"luxon\";\n\nexport const ComputerTabletRequestItem = ({\n  result,\n  updateQueryState,\n  currentQueryState,\n  detailsURL,\n}) => {\n  const createdDate = new Date(result.created);\n  let creatorName = \"\";\n  const isCreatorUser = \"user\" in result.created_by;\n  const isCreatorCommunity = \"community\" in result.created_by;\n  const isCreatorGuest = \"email\" in result.created_by;\n  if (isCreatorUser) {\n    creatorName =\n      result.expanded?.created_by.profile?.full_name ||\n      result.expanded?.created_by.username ||\n      result.created_by.user;\n  } else if (isCreatorCommunity) {\n    creatorName =\n      result.expanded?.created_by.metadata?.title || result.created_by.community;\n  } else if (isCreatorGuest) {\n    creatorName = result.created_by.email;\n  }\n\n  const getUserIcon = (receiver) => {\n    return receiver?.is_ghost ? \"user secret\" : \"users\";\n  };\n\n  return (\n    <Item key={result.id} className=\"computer tablet only flex\">\n      <div className=\"status-icon mr-10\">\n        <Item.Content verticalAlign=\"top\">\n          <Item.Extra>\n            <RequestTypeIcon type={result.type} />\n          </Item.Extra>\n        </Item.Content>\n      </div>\n      <Item.Content>\n        <Item.Extra>\n          {result.type && <RequestTypeLabel type={result.type} />}\n          {result.status && result.is_closed && (\n            <RequestStatusLabel status={result.status} />\n          )}\n          <div className=\"right floated\">\n            <RequestActionController\n              request={result}\n              actionSuccessCallback={() => updateQueryState(currentQueryState)}\n            />\n          </div>\n        </Item.Extra>\n        <Item.Header className={`truncate-lines-2 ${result.is_closed && \"mt-5\"}`}>\n          <a className=\"header-link\" href={detailsURL}>\n            {result.title}\n          </a>\n        </Item.Header>\n        <Item.Meta>\n          <small>\n            <Trans\n              defaults=\"Opened {{relativeTime}} by\"\n              values={{\n                relativeTime: toRelativeTime(\n                  createdDate.toISOString(),\n                  i18next.language\n                ),\n              }}\n            />{\" \"}\n            {creatorName}\n          </small>\n          <small className=\"right floated\">\n            {result.receiver.community && result.expanded?.receiver.metadata.title && (\n              <>\n                <Icon\n                  className=\"default-margin\"\n                  name={getUserIcon(result.expanded?.receiver)}\n                />\n                <span className=\"ml-5\">{result.expanded?.receiver.metadata.title}</span>\n              </>\n            )}\n            {result.expires_at && (\n              <span>\n                {i18next.t(\"Expires at: {{- expiringDate}}\", {\n                  expiringDate: DateTime.fromISO(result.expires_at).toLocaleString(\n                    i18next.language\n                  ),\n                })}\n              </span>\n            )}\n          </small>\n        </Item.Meta>\n      </Item.Content>\n    </Item>\n  );\n};\n\nComputerTabletRequestItem.propTypes = {\n  result: PropTypes.object.isRequired,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  detailsURL: PropTypes.string.isRequired,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2022 CERN.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport React from \"react\";\nimport RequestTypeLabel from \"@js/invenio_requests/request/RequestTypeLabel\";\nimport RequestStatusLabel from \"@js/invenio_requests/request/RequestStatusLabel\";\nimport { RequestActionController } from \"@js/invenio_requests/request/actions/RequestActionController\";\nimport { Icon, Item } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { Trans } from \"react-i18next\";\nimport { toRelativeTime } from \"react-invenio-forms\";\nimport { DateTime } from \"luxon\";\n\nexport const MobileRequestItem = ({\n  result,\n  updateQueryState,\n  currentQueryState,\n  detailsURL,\n}) => {\n  const createdDate = new Date(result.created);\n  let creatorName = \"\";\n  const isCreatorUser = \"user\" in result.created_by;\n  const isCreatorCommunity = \"community\" in result.created_by;\n  if (isCreatorUser) {\n    creatorName =\n      result.expanded?.created_by.profile?.full_name ||\n      result.expanded?.created_by.username ||\n      result.created_by.user;\n  } else if (isCreatorCommunity) {\n    creatorName =\n      result.expanded?.created_by.metadata?.title || result.created_by.community;\n  }\n\n  const getUserIcon = (receiver) => {\n    return receiver?.is_ghost ? \"user secret\" : \"users\";\n  };\n  const getTypeIcon = (type) => {\n    if (type === \"community-invitation\") return \"user plus\";\n    else return \"plus\";\n  };\n\n  return (\n    <Item key={result.id} className=\"mobile only flex\">\n      <Item.Content className=\"centered\">\n        <Item.Extra>\n          {result.type && <RequestTypeLabel type={result.type} />}\n          {result.status && result.is_closed && (\n            <RequestStatusLabel status={result.status} />\n          )}\n        </Item.Extra>\n        <Item.Header className=\"truncate-lines-2 rel-mt-1\">\n          <a className=\"header-link p-0\" href={detailsURL}>\n            <Icon\n              size=\"small\"\n              name={getTypeIcon(result.type)}\n              className=\"neutral mr-5\"\n            />\n            {result.title}\n          </a>\n        </Item.Header>\n        <Item.Meta>\n          <small>\n            <Trans\n              defaults=\"Opened {{relativeTime}} by\"\n              values={{\n                relativeTime: toRelativeTime(\n                  createdDate.toISOString(),\n                  i18next.language\n                ),\n              }}\n            />{\" \"}\n            {creatorName}\n          </small>\n          <small className=\"block rel-mt-1\">\n            {result.receiver.community && result.expanded?.receiver.metadata.title && (\n              <>\n                <Icon\n                  className=\"default-margin\"\n                  name={getUserIcon(result.expanded?.receiver)}\n                />\n                <span className=\"ml-5\">{result.expanded?.receiver.metadata.title}</span>\n              </>\n            )}\n            {result.expires_at && (\n              <span>\n                {i18next.t(\"Expires at: {{- expiringDate}}\", {\n                  expiringDate: DateTime.fromISO(result.expires_at).toLocaleString(\n                    i18next.language\n                  ),\n                })}\n              </span>\n            )}\n          </small>\n          {!result.is_closed && (\n            <div className=\"block rel-mt-1\">\n              <RequestActionController\n                request={result}\n                actionSuccessCallback={() => updateQueryState(currentQueryState)}\n              />\n            </div>\n          )}\n        </Item.Meta>\n      </Item.Content>\n    </Item>\n  );\n};\n\nMobileRequestItem.propTypes = {\n  result: PropTypes.object.isRequired,\n  updateQueryState: PropTypes.func.isRequired,\n  currentQueryState: PropTypes.object.isRequired,\n  detailsURL: PropTypes.string.isRequired,\n};\n","// This file is part of Invenio\n// Copyright (C) 2023 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nimport { withState } from \"react-searchkit\";\n\nexport const RequestsEmptyResults = ({\n  queryString,\n  userSelectionFilters,\n  updateQueryState,\n}) => {\n  const isOpen = userSelectionFilters.some(\n    (obj) => obj.includes(\"is_open\") && obj.includes(\"true\")\n  );\n  const filtersToNotReset = userSelectionFilters.find((obj) => obj.includes(\"is_open\"));\n  const elementsToReset = {\n    queryString: \"\",\n    page: 1,\n    filters: [filtersToNotReset],\n  };\n\n  const AllDone = () => {\n    return (\n      <Header as=\"h1\" icon>\n        {i18next.t(\"All done!\")}\n        <Header.Subheader>\n          {i18next.t(\"You've caught up with all open requests.\")}\n        </Header.Subheader>\n      </Header>\n    );\n  };\n\n  const NoResults = () => {\n    return (\n      <>\n        <Header icon>\n          <Icon name=\"search\" />\n          {i18next.t(\"No requests found!\")}\n        </Header>\n        {queryString && (\n          <Button primary onClick={() => updateQueryState(elementsToReset)}>\n            {i18next.t(\"Reset search\")}\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  const allRequestsDone = isOpen && !queryString;\n  return (\n    <Segment placeholder textAlign=\"center\">\n      {allRequestsDone ? <AllDone /> : <NoResults />}\n    </Segment>\n  );\n};\n\nRequestsEmptyResults.propTypes = {\n  queryString: PropTypes.string.isRequired,\n  userSelectionFilters: PropTypes.array.isRequired,\n  updateQueryState: PropTypes.func.isRequired,\n};\n\nexport const RequestsEmptyResultsWithState = withState(RequestsEmptyResults);\n","// This file is part of Invenio\n// Copyright (C) 2023 CERN.\n//\n// Invenio is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { InvenioSearchPagination } from \"@js/invenio_search_ui/components\";\nimport { i18next } from \"@translations/invenio_requests/i18next\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Count, ResultsList, Sort } from \"react-searchkit\";\nimport { Grid, Segment } from \"semantic-ui-react\";\n\nexport const RequestsResults = ({\n  sortOptions,\n  paginationOptions,\n  currentResultsState,\n}) => {\n  const { total } = currentResultsState.data;\n  return (\n    total && (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Segment>\n              <Grid>\n                <Grid.Row\n                  verticalAlign=\"middle\"\n                  className=\"small pt-5 pb-5 highlight-background\"\n                >\n                  <Grid.Column width={4}>\n                    <Count\n                      label={() => (\n                        <>\n                          {i18next.t(\"{{count}} results found\", {\n                            count: total,\n                          })}\n                        </>\n                      )}\n                    />\n                  </Grid.Column>\n                  <Grid.Column width={12} textAlign=\"right\">\n                    {sortOptions && (\n                      <Sort\n                        values={sortOptions}\n                        label={(cmp) => (\n                          <>\n                            <label className=\"mr-10\">{i18next.t(\"Sort by\")}</label>\n                            {cmp}\n                          </>\n                        )}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <ResultsList />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n        <InvenioSearchPagination paginationOptions={paginationOptions} />\n      </Grid>\n    )\n  );\n};\n\nRequestsResults.propTypes = {\n  sortOptions: PropTypes.object.isRequired,\n  paginationOptions: PropTypes.object.isRequired,\n  currentResultsState: PropTypes.object.isRequired,\n};\n"],"names":["RequestStatusFilterComponent","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","OpenStatus","_this$props","currentQueryState","updateQueryState","keepFiltersOnUpdate","state","open","setState","filters","filter","element","push","retrieveRequests","undefined","_inherits","_createClass","key","value","openFilter","this","find","obj","includes","React","Button","Group","basic","className","onClick","retrieveOpenRequests","active","i18next","t","retrieveClosedRequests","Component","propTypes","PropTypes","isRequired","defaultProps","RequestStatusFilter","withState","RequestsSearchLayout","_ref","config","appName","_React$useState","_React$useState2","_slicedToArray","sidebarVisible","setSidebarVisible","Container","Grid","Row","Column","only","mobile","tablet","size","icon","computer","floated","SearchBar","placeholder","GridResponsiveSidebarColumn","width","onHideClick","SearchAppFacets","aggs","SearchAppResultsPane","layoutOptions","RequestTypeIcon","arguments","type","Overridable","id","concat","Icon","name","component","RequestStatusLabel","status","Label","ComputerTabletRequestItem","_result$expanded4","_result$expanded5","_result$expanded6","_result$expanded","_result$expanded2","result","detailsURL","createdDate","Date","created","creatorName","isCreatorUser","created_by","isCreatorCommunity","isCreatorGuest","expanded","profile","full_name","username","user","_result$expanded3","metadata","title","community","email","receiver","Item","Content","verticalAlign","Extra","RequestTypeLabel","is_closed","RequestActionController","request","actionSuccessCallback","Header","href","Meta","Trans","defaults","values","relativeTime","toRelativeTime","toISOString","language","is_ghost","expires_at","expiringDate","DateTime","fromISO","toLocaleString","MobileRequestItem","RequestsEmptyResults","queryString","userSelectionFilters","isOpen","some","elementsToReset","page","AllDone","as","Subheader","NoResults","primary","allRequestsDone","Segment","textAlign","RequestsEmptyResultsWithState","RequestsResults","sortOptions","paginationOptions","total","currentResultsState","data","Count","label","count","Sort","cmp","ResultsList","InvenioSearchPagination"],"sourceRoot":""}