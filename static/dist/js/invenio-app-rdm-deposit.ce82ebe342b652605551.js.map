{"version":3,"file":"js/invenio-app-rdm-deposit.ce82ebe342b652605551.js","mappings":"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","sources":["webpack://invenio-assets/./js/invenio_app_rdm/deposit/RDMDepositForm.js","webpack://invenio-assets/./js/invenio_app_rdm/deposit/index.js","webpack://invenio-assets/./templates/custom_fields/ lazy ^\\.\\/.*\\.js$ namespace object"],"sourcesContent":["// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n// Copyright (C) 2021-2022 Graz University of Technology.\n// Copyright (C) 2022-2023 KTH Royal Institute of Technology.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport { i18next } from \"@translations/invenio_app_rdm/i18next\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React, { Component, createRef, Fragment } from \"react\";\nimport { AccordionField, CustomFields } from \"react-invenio-forms\";\nimport {\n  AccessRightField,\n  DescriptionsField,\n  CreatibutorsField,\n  DatesField,\n  DeleteButton,\n  DepositStatusBox,\n  FileUploader,\n  FormFeedback,\n  IdentifiersField,\n  PIDField,\n  PreviewButton,\n  LanguagesField,\n  LicenseField,\n  PublicationDateField,\n  PublishButton,\n  PublisherField,\n  ReferencesField,\n  RelatedWorksField,\n  ResourceTypeField,\n  SubjectsField,\n  TitlesField,\n  VersionField,\n  DepositFormApp,\n  CommunityHeader,\n  SaveButton,\n} from \"@js/invenio_rdm_records\";\nimport { FundingField } from \"@js/invenio_vocabularies\";\nimport { Card, Container, Grid, Ref, Sticky } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport Overridable from \"react-overridable\";\n\nexport class RDMDepositForm extends Component {\n  constructor(props) {\n    super(props);\n    this.config = props.config || {};\n    const { files, record } = this.props;\n\n    // TODO: Make ALL vocabulary be generated by backend.\n    // Currently, some vocabulary is generated by backend and some is\n    // generated by frontend here. Iteration is faster and abstractions can be\n    // discovered by generating vocabulary here. Once happy with vocabularies,\n    // then we can generate it in the backend.\n    this.vocabularies = {\n      metadata: {\n        ...this.config.vocabularies,\n\n        creators: {\n          ...this.config.vocabularies.creators,\n          type: [\n            { text: \"Person\", value: \"personal\" },\n            { text: \"Organization\", value: \"organizational\" },\n          ],\n        },\n\n        contributors: {\n          ...this.config.vocabularies.contributors,\n          type: [\n            { text: \"Person\", value: \"personal\" },\n            { text: \"Organization\", value: \"organizational\" },\n          ],\n        },\n        identifiers: {\n          ...this.config.vocabularies.identifiers,\n        },\n      },\n    };\n\n    // check if files are present\n    this.noFiles = false;\n    if (\n      !Array.isArray(files.entries) ||\n      (!files.entries.length && record.is_published)\n    ) {\n      this.noFiles = true;\n    }\n\n    // hide community header for branded communities\n    this.hide_community_selection = this.config.hide_community_selection || false;\n  }\n\n  formFeedbackRef = createRef();\n  sidebarRef = createRef();\n\n  render() {\n    const { record, files, permissions, preselectedCommunity, filesLocked } =\n      this.props;\n    const customFieldsUI = this.config.custom_fields.ui;\n    return (\n      <DepositFormApp\n        config={this.config}\n        record={record}\n        preselectedCommunity={preselectedCommunity}\n        files={files}\n        permissions={permissions}\n      >\n        <Overridable\n          id=\"InvenioAppRdm.Deposit.FormFeedback.container\"\n          labels={this.config.custom_fields.error_labels}\n          fieldPath=\"message\"\n        >\n          <FormFeedback\n            fieldPath=\"message\"\n            labels={this.config.custom_fields.error_labels}\n          />\n        </Overridable>\n\n        <Overridable id=\"InvenioAppRdm.Deposit.CommunityHeader.container\">\n          {!this.hide_community_selection && (\n            <CommunityHeader\n              imagePlaceholderLink=\"/static/images/square-placeholder.png\"\n              record={record}\n            />\n          )}\n        </Overridable>\n        <Container id=\"rdm-deposit-form\" className=\"rel-mt-1\">\n          <Grid className=\"mt-25\">\n            <Grid.Column mobile={16} tablet={16} computer={11}>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldFiles.container\"\n                record={record}\n                config={this.config}\n                noFiles={this.noFiles}\n              >\n                <AccordionField\n                  includesPaths={[\"files.enabled\"]}\n                  active\n                  label={i18next.t(\"Files\")}\n                >\n                  {this.noFiles && record.is_published && (\n                    <div className=\"text-align-center pb-10\">\n                      <em>{i18next.t(\"The record has no files.\")}</em>\n                    </div>\n                  )}\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.FileUploader.container\"\n                    record={record}\n                    config={this.config}\n                  >\n                    <FileUploader\n                      isDraftRecord={!record.is_published}\n                      quota={this.config.quota}\n                      decimalSizeDisplay={this.config.decimal_size_display}\n                      showMetadataOnlyToggle={permissions?.can_manage_files}\n                      filesLocked={filesLocked}\n                    />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldBasicInformation.container\"\n                config={this.config}\n                record={record}\n                vocabularies={this.vocabularies}\n              >\n                <AccordionField\n                  includesPaths={[\n                    \"metadata.resource_type\",\n                    \"metadata.title\",\n                    \"metadata.additional_titles\",\n                    \"metadata.publication_date\",\n                    \"metadata.creators\",\n                    \"metadata.description\",\n                    \"metadata.additional_descriptions\",\n                    \"metadata.rights\",\n                  ]}\n                  active\n                  label={i18next.t(\"Basic information\")}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.PIDField.container\"\n                    config={this.config}\n                    record={record}\n                  >\n                    <Fragment>\n                      {this.config.pids.map((pid) => (\n                        <Fragment key={pid.scheme}>\n                          <PIDField\n                            btnLabelDiscardPID={pid.btn_label_discard_pid}\n                            btnLabelGetPID={pid.btn_label_get_pid}\n                            canBeManaged={pid.can_be_managed}\n                            canBeUnmanaged={pid.can_be_unmanaged}\n                            fieldPath={`pids.${pid.scheme}`}\n                            fieldLabel={pid.field_label}\n                            isEditingPublishedRecord={\n                              record.is_published === true // is_published is `null` at first upload\n                            }\n                            managedHelpText={pid.managed_help_text}\n                            pidLabel={pid.pid_label}\n                            pidPlaceholder={pid.pid_placeholder}\n                            pidType={pid.scheme}\n                            unmanagedHelpText={pid.unmanaged_help_text}\n                            required\n                          />\n                        </Fragment>\n                      ))}\n                    </Fragment>\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.ResourceTypeField.container\"\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.resource_type\"\n                  >\n                    <ResourceTypeField\n                      options={this.vocabularies.metadata.resource_type}\n                      fieldPath=\"metadata.resource_type\"\n                      required\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.TitlesField.container\"\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.title\"\n                    record={record}\n                  >\n                    <TitlesField\n                      options={this.vocabularies.metadata.titles}\n                      fieldPath=\"metadata.title\"\n                      recordUI={record.ui}\n                      required\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.PublicationDateField.container\"\n                    fieldPath=\"metadata.publication_date\"\n                  >\n                    <PublicationDateField\n                      required\n                      fieldPath=\"metadata.publication_date\"\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.CreatorsField.container\"\n                    vocabularies={this.vocabularies}\n                    config={this.config}\n                    fieldPath=\"metadata.creators\"\n                  >\n                    <CreatibutorsField\n                      label={i18next.t(\"Creators\")}\n                      labelIcon=\"user\"\n                      fieldPath=\"metadata.creators\"\n                      roleOptions={this.vocabularies.metadata.creators.role}\n                      schema=\"creators\"\n                      autocompleteNames={this.config.autocomplete_names}\n                      required\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.DescriptionsField.container\"\n                    record={record}\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.description\"\n                  >\n                    <DescriptionsField\n                      fieldPath=\"metadata.description\"\n                      options={this.vocabularies.metadata.descriptions}\n                      recordUI={_get(record, \"ui\", null)}\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.LicenseField.container\"\n                    fieldPath=\"metadata.rights\"\n                  >\n                    <LicenseField\n                      fieldPath=\"metadata.rights\"\n                      searchConfig={{\n                        searchApi: {\n                          axios: {\n                            headers: {\n                              Accept: \"application/vnd.inveniordm.v1+json\",\n                            },\n                            url: \"/api/vocabularies/licenses\",\n                            withCredentials: false,\n                          },\n                        },\n                        initialQueryState: {\n                          filters: [[\"tags\", \"recommended\"]],\n                        },\n                      }}\n                      serializeLicenses={(result) => ({\n                        title: result.title_l10n,\n                        description: result.description_l10n,\n                        id: result.id,\n                        link: result.props.url,\n                      })}\n                    />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldRecommendedInformation.container\"\n                vocabularies={this.vocabularies}\n                config={this.config}\n                record={record}\n              >\n                <AccordionField\n                  includesPaths={[\n                    \"metadata.contributors\",\n                    \"metadata.subjects\",\n                    \"metadata.languages\",\n                    \"metadata.dates\",\n                    \"metadata.version\",\n                    \"metadata.publisher\",\n                  ]}\n                  active\n                  label={i18next.t(\"Recommended information\")}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.ContributorsField.container\"\n                    fieldPath=\"metadata.contributors\"\n                    vocabularies={this.vocabularies}\n                    config={this.config}\n                  >\n                    <CreatibutorsField\n                      addButtonLabel={i18next.t(\"Add contributor\")}\n                      label={i18next.t(\"Contributors\")}\n                      labelIcon=\"user plus\"\n                      fieldPath=\"metadata.contributors\"\n                      roleOptions={this.vocabularies.metadata.contributors.role}\n                      schema=\"contributors\"\n                      autocompleteNames={this.config.autocomplete_names}\n                      modal={{\n                        addLabel: \"Add contributor\",\n                        editLabel: \"Edit contributor\",\n                      }}\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.SubjectsField.container\"\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.subjects\"\n                    record={record}\n                  >\n                    <SubjectsField\n                      fieldPath=\"metadata.subjects\"\n                      initialOptions={_get(record, \"ui.subjects\", null)}\n                      limitToOptions={this.vocabularies.metadata.subjects.limit_to}\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.LanguagesField.container\"\n                    fieldPath=\"metadata.languages\"\n                    record={record}\n                  >\n                    <LanguagesField\n                      fieldPath=\"metadata.languages\"\n                      initialOptions={_get(record, \"ui.languages\", []).filter(\n                        (lang) => lang !== null\n                      )} // needed because dumped empty record from backend gives [null]\n                      serializeSuggestions={(suggestions) =>\n                        suggestions.map((item) => ({\n                          text: item.title_l10n,\n                          value: item.id,\n                          key: item.id,\n                        }))\n                      }\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.DateField.container\"\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.dates\"\n                  >\n                    <DatesField\n                      fieldPath=\"metadata.dates\"\n                      options={this.vocabularies.metadata.dates}\n                      showEmptyValue\n                    />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.VersionField.container\"\n                    fieldPath=\"metadata.version\"\n                  >\n                    <VersionField fieldPath=\"metadata.version\" />\n                  </Overridable>\n\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.PublisherField.container\"\n                    fieldPath=\"metadata.publisher\"\n                  >\n                    <PublisherField fieldPath=\"metadata.publisher\" />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldFunding.container\"\n                ui={this.accordionStyle}\n              >\n                <AccordionField\n                  includesPaths={[\"metadata.funding\"]}\n                  active\n                  label=\"Funding\"\n                  ui={this.accordionStyle}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.FundingField.container\"\n                    fieldPath=\"metadata.funding\"\n                  >\n                    <FundingField\n                      fieldPath=\"metadata.funding\"\n                      searchConfig={{\n                        searchApi: {\n                          axios: {\n                            headers: {\n                              Accept: \"application/vnd.inveniordm.v1+json\",\n                            },\n                            url: \"/api/awards\",\n                            withCredentials: false,\n                          },\n                        },\n                        initialQueryState: {\n                          sortBy: \"bestmatch\",\n                          sortOrder: \"asc\",\n                          layout: \"list\",\n                          page: 1,\n                          size: 5,\n                        },\n                      }}\n                      label=\"Awards\"\n                      labelIcon=\"money bill alternate outline\"\n                      deserializeAward={(award) => {\n                        return {\n                          title: award.title_l10n,\n                          number: award.number,\n                          funder: award.funder ?? \"\",\n                          id: award.id,\n                          ...(award.identifiers && {\n                            identifiers: award.identifiers,\n                          }),\n                          ...(award.acronym && { acronym: award.acronym }),\n                        };\n                      }}\n                      deserializeFunder={(funder) => {\n                        return {\n                          id: funder.id,\n                          name: funder.name,\n                          ...(funder.title_l10n && { title: funder.title_l10n }),\n                          ...(funder.pid && { pid: funder.pid }),\n                          ...(funder.country && { country: funder.country }),\n                          ...(funder.identifiers && {\n                            identifiers: funder.identifiers,\n                          }),\n                        };\n                      }}\n                      computeFundingContents={(funding) => {\n                        let headerContent,\n                          descriptionContent,\n                          awardOrFunder = \"\";\n\n                        if (funding.funder) {\n                          const funderName =\n                            funding.funder?.name ??\n                            funding.funder?.title ??\n                            funding.funder?.id ??\n                            \"\";\n                          awardOrFunder = \"funder\";\n                          headerContent = funderName;\n                          descriptionContent = \"\";\n\n                          // there cannot be an award without a funder\n                          if (funding.award) {\n                            const { acronym, title } = funding.award;\n                            awardOrFunder = \"award\";\n                            descriptionContent = funderName;\n                            headerContent = acronym ? `${acronym} — ${title}` : title;\n                          }\n                        }\n\n                        return { headerContent, descriptionContent, awardOrFunder };\n                      }}\n                    />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldAlternateIdentifiers.container\"\n                vocabularies={this.vocabularies}\n              >\n                <AccordionField\n                  includesPaths={[\"metadata.identifiers\"]}\n                  active\n                  label={i18next.t(\"Alternate identifiers\")}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.IdentifiersField.container\"\n                    vocabularies={this.vocabularies}\n                    fieldPath=\"metadata.identifiers\"\n                  >\n                    <IdentifiersField\n                      fieldPath=\"metadata.identifiers\"\n                      label={i18next.t(\"Alternate identifiers\")}\n                      labelIcon=\"barcode\"\n                      schemeOptions={this.vocabularies.metadata.identifiers.scheme}\n                      showEmptyValue\n                    />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldRelatedWorks.container\"\n                vocabularies={this.vocabularies}\n              >\n                <AccordionField\n                  includesPaths={[\"metadata.related_identifiers\"]}\n                  active\n                  label={i18next.t(\"Related works\")}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.RelatedWorksField.container\"\n                    fieldPath=\"metadata.related_identifiers\"\n                    vocabularies={this.vocabularies}\n                  >\n                    <RelatedWorksField\n                      fieldPath=\"metadata.related_identifiers\"\n                      options={this.vocabularies.metadata.identifiers}\n                      showEmptyValue\n                    />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              <Overridable\n                id=\"InvenioAppRdm.Deposit.AccordionFieldReferences.container\"\n                vocabularies={this.vocabularies}\n              >\n                <AccordionField\n                  includesPaths={[\"metadata.references\"]}\n                  active\n                  label={i18next.t(\"References\")}\n                >\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.ReferencesField.container\"\n                    fieldPath=\"metadata.references\"\n                    vocabularies={this.vocabularies}\n                  >\n                    <ReferencesField fieldPath=\"metadata.references\" showEmptyValue />\n                  </Overridable>\n                </AccordionField>\n              </Overridable>\n              {!_isEmpty(customFieldsUI) && (\n                <Overridable\n                  id=\"InvenioAppRdm.Deposit.CustomFields.container\"\n                  customFieldsUI={customFieldsUI}\n                >\n                  <CustomFields\n                    config={customFieldsUI}\n                    record={record}\n                    templateLoaders={[\n                      (widget) => import(`@templates/custom_fields/${widget}.js`),\n                      (widget) =>\n                        import(`@js/invenio_rdm_records/src/deposit/customFields`),\n                      (widget) => import(`react-invenio-forms`),\n                    ]}\n                    fieldPathPrefix=\"custom_fields\"\n                  />\n                </Overridable>\n              )}\n            </Grid.Column>\n            <Ref innerRef={this.sidebarRef}>\n              <Grid.Column\n                mobile={16}\n                tablet={16}\n                computer={5}\n                className=\"deposit-sidebar\"\n              >\n                <Sticky context={this.sidebarRef} offset={20}>\n                  <Overridable id=\"InvenioAppRdm.Deposit.CardDepositStatusBox.container\">\n                    <Card>\n                      <Card.Content>\n                        <DepositStatusBox />\n                      </Card.Content>\n                      <Card.Content>\n                        <Grid relaxed>\n                          <Grid.Column\n                            computer={8}\n                            mobile={16}\n                            className=\"pb-0 left-btn-col\"\n                          >\n                            <SaveButton fluid />\n                          </Grid.Column>\n\n                          <Grid.Column\n                            computer={8}\n                            mobile={16}\n                            className=\"pb-0 right-btn-col\"\n                          >\n                            <PreviewButton fluid />\n                          </Grid.Column>\n\n                          <Grid.Column width={16} className=\"pt-10\">\n                            <PublishButton fluid />\n                          </Grid.Column>\n                        </Grid>\n                      </Card.Content>\n                    </Card>\n                  </Overridable>\n                  <Overridable\n                    id=\"InvenioAppRdm.Deposit.AccessRightField.container\"\n                    fieldPath=\"access\"\n                  >\n                    <AccessRightField\n                      label={i18next.t(\"Visibility\")}\n                      labelIcon=\"shield\"\n                      fieldPath=\"access\"\n                      showMetadataAccess={permissions?.can_manage_record_access}\n                    />\n                  </Overridable>\n                  {permissions?.can_delete_draft && (\n                    <Overridable\n                      id=\"InvenioAppRdm.Deposit.CardDeleteButton.container\"\n                      record={record}\n                    >\n                      <Card>\n                        <Card.Content>\n                          <DeleteButton fluid />\n                        </Card.Content>\n                      </Card>\n                    </Overridable>\n                  )}\n                </Sticky>\n              </Grid.Column>\n            </Ref>\n          </Grid>\n        </Container>\n      </DepositFormApp>\n    );\n  }\n}\n\nRDMDepositForm.propTypes = {\n  config: PropTypes.object.isRequired,\n  record: PropTypes.object.isRequired,\n  preselectedCommunity: PropTypes.object,\n  files: PropTypes.object,\n  permissions: PropTypes.object,\n  filesLocked: PropTypes.bool,\n};\n\nRDMDepositForm.defaultProps = {\n  preselectedCommunity: undefined,\n  permissions: null,\n  files: null,\n  filesLocked: false,\n};\n","// This file is part of InvenioRDM\n// Copyright (C) 2020-2022 CERN.\n// Copyright (C) 2020-2022 Northwestern University.\n//\n// Invenio App RDM is free software; you can redistribute it and/or modify it\n// under the terms of the MIT License; see LICENSE file for more details.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getInputFromDOM } from \"@js/invenio_rdm_records/\";\nimport { RDMDepositForm } from \"./RDMDepositForm\";\nimport { OverridableContext, overrideStore } from \"react-overridable\";\n\nconst overriddenComponents = overrideStore.getAll();\n\nReactDOM.render(\n  <OverridableContext.Provider value={overriddenComponents}>\n    <RDMDepositForm\n      record={getInputFromDOM(\"deposits-record\")}\n      preselectedCommunity={getInputFromDOM(\"deposits-draft-community\")}\n      files={getInputFromDOM(\"deposits-record-files\")}\n      config={getInputFromDOM(\"deposits-config\")}\n      permissions={getInputFromDOM(\"deposits-record-permissions\")}\n      filesLocked={getInputFromDOM(\"deposits-record-locked-files\")}\n    />\n  </OverridableContext.Provider>,\n  document.getElementById(\"deposit-form\")\n);\n","var map = {\n\t\"./AIUsageField.js\": [\n\t\t57149,\n\t\t5373,\n\t\t6267,\n\t\t9777,\n\t\t5941,\n\t\t7501,\n\t\t4218,\n\t\t742,\n\t\t6528,\n\t\t3532,\n\t\t1751,\n\t\t226,\n\t\t5848\n\t],\n\t\"./BookSeriesField.js\": [\n\t\t15668,\n\t\t5668\n\t],\n\t\"./ImprintISBNField.js\": [\n\t\t75157,\n\t\t5157\n\t],\n\t\"./ImprintPagesField.js\": [\n\t\t9005,\n\t\t9005\n\t],\n\t\"./ImprintPlaceField.js\": [\n\t\t72188,\n\t\t2188\n\t],\n\t\"./ImprintTitleField.js\": [\n\t\t50519,\n\t\t519\n\t],\n\t\"./JournalIssueField.js\": [\n\t\t38078,\n\t\t8078\n\t],\n\t\"./Notes.js\": [\n\t\t36845,\n\t\t6845\n\t],\n\t\"./UserDefinedTags.js\": [\n\t\t34809,\n\t\t742,\n\t\t4809\n\t],\n\t\"./Volumes.js\": [\n\t\t74059,\n\t\t4059\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 34222;\nmodule.exports = webpackAsyncContext;"],"names":["RDMDepositForm","_Component","props","_this","_classCallCheck","_callSuper","_defineProperty","createRef","config","_this$props","files","record","vocabularies","metadata","_objectSpread","creators","type","text","value","contributors","identifiers","noFiles","Array","isArray","entries","length","is_published","hide_community_selection","_inherits","_createClass","key","_this$props2","this","permissions","preselectedCommunity","filesLocked","customFieldsUI","custom_fields","ui","React","DepositFormApp","Overridable","id","labels","error_labels","fieldPath","FormFeedback","CommunityHeader","imagePlaceholderLink","Container","className","Grid","Column","mobile","tablet","computer","AccordionField","includesPaths","active","label","i18next","t","FileUploader","isDraftRecord","quota","decimalSizeDisplay","decimal_size_display","showMetadataOnlyToggle","can_manage_files","Fragment","pids","map","pid","scheme","PIDField","btnLabelDiscardPID","btn_label_discard_pid","btnLabelGetPID","btn_label_get_pid","canBeManaged","can_be_managed","canBeUnmanaged","can_be_unmanaged","concat","fieldLabel","field_label","isEditingPublishedRecord","managedHelpText","managed_help_text","pidLabel","pid_label","pidPlaceholder","pid_placeholder","pidType","unmanagedHelpText","unmanaged_help_text","required","ResourceTypeField","options","resource_type","TitlesField","titles","recordUI","PublicationDateField","CreatibutorsField","labelIcon","roleOptions","role","schema","autocompleteNames","autocomplete_names","DescriptionsField","descriptions","_get","LicenseField","searchConfig","searchApi","axios","headers","Accept","url","withCredentials","initialQueryState","filters","serializeLicenses","result","title","title_l10n","description","description_l10n","link","addButtonLabel","modal","addLabel","editLabel","SubjectsField","initialOptions","limitToOptions","subjects","limit_to","LanguagesField","filter","lang","serializeSuggestions","suggestions","item","DatesField","dates","showEmptyValue","VersionField","PublisherField","accordionStyle","FundingField","sortBy","sortOrder","layout","page","size","deserializeAward","award","_award$funder","number","funder","acronym","deserializeFunder","name","country","computeFundingContents","funding","headerContent","descriptionContent","awardOrFunder","_ref","_ref2","_funding$funder$name","_funding$funder","_funding$funder2","_funding$funder3","funderName","_funding$award","IdentifiersField","schemeOptions","RelatedWorksField","ReferencesField","_isEmpty","CustomFields","templateLoaders","widget","fieldPathPrefix","Ref","innerRef","sidebarRef","Sticky","context","offset","Card","Content","DepositStatusBox","relaxed","SaveButton","fluid","PreviewButton","width","PublishButton","AccessRightField","showMetadataAccess","can_manage_record_access","can_delete_draft","DeleteButton","Component","propTypes","PropTypes","isRequired","defaultProps","undefined","overriddenComponents","overrideStore","getAll","ReactDOM","OverridableContext","Provider","getInputFromDOM","document","getElementById","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","all","slice","keys","Object","module","exports"],"sourceRoot":""}