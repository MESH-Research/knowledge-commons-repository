"""
InvenioRDM settings for Knowledge Commons Repository project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://inveniordm.docs.cern.ch/reference/configuration/.
"""
from datetime import datetime
from invenio_records_resources.services.custom_fields import TextCF
from marshmallow_utils.fields import SanitizedHTML
from invenio_i18n import lazy_gettext as _
from invenio_rdm_records.contrib.imprint import (
    IMPRINT_CUSTOM_FIELDS,
    IMPRINT_CUSTOM_FIELDS_UI,
    IMPRINT_NAMESPACE,
)
from invenio_rdm_records.contrib.journal import (
    JOURNAL_CUSTOM_FIELDS,
    JOURNAL_CUSTOM_FIELDS_UI,
    JOURNAL_NAMESPACE,
)
# from invenio_rdm_records.contrib.thesis import (
#     THESIS_CUSTOM_FIELDS,
#     THESIS_CUSTOM_FIELDS_UI,
#     THESIS_NAMESPACE,
# )
# from invenio_rdm_records.contrib.meeting import (
#     MEETING_CUSTOM_FIELDS,
#     MEETING_CUSTOM_FIELDS_UI,
#     MEETING_NAMESPACE,
# )


def _(x):  # needed to avoid start time failure with lazy strings
    return x

# Custom fields for deposit metadata

RDM_NAMESPACES = {
    "notes": "",
    # **JOURNAL_NAMESPACE,
    # **IMPRINT_NAMESPACE,
    # **THESIS_NAMESPACE,
    # **MEETING_NAMESPACE,
}

RDM_CUSTOM_FIELDS = [
    TextCF(  # a simple text input field
        name="notes",
        field_cls=SanitizedHTML,
    ),
    # *JOURNAL_CUSTOM_FIELDS,
    # # meeting
    # *MEETING_CUSTOM_FIELDS,
    # # imprint
    # *IMPRINT_CUSTOM_FIELDS,
    # # thesis
    # *THESIS_CUSTOM_FIELDS,
]

# Hide "meeting" section in the landing page
# MEETING_CUSTOM_FIELDS_UI["hidden"] = True

# Create a "Publishing Information" section in the deposit form and add multiple fields
RDM_CUSTOM_FIELDS_UI = [
    {
        "section": _("Discussion"),
        "fields": [
            dict(
                field="notes:notes",
                ui_widget="RichInput",
                props=dict(
                    label=_("Notes"),
                    placeholder="Notes go here",
                    icon="pencil",
                    description=_("other notes")
                )
            )
        ]
    },
    # {
    #     "section": _("Publishing information"),
    #     "hidden": True,
    #     "fields": [
    #         *JOURNAL_CUSTOM_FIELDS_UI["fields"],
    #         # *IMPRINT_CUSTOM_FIELDS_UI["fields"],
    #         # *THESIS_CUSTOM_FIELDS_UI["fields"],
    #     ],
# },
    # MEETING_CUSTOM_FIELDS_UI,
]

THEME_SHOW_FRONTPAGE_INTRO_SECTION = False

SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://knowledge-commons-repository:knowledge-commons-repository@localhost/knowledge-commons-repository"

# Setup for migration (from caltech)
RATELIMIT_AUTHENTICATED_USER = "25000 per hour;500 per minute"

# Setup deposit form quota (from caltech)
APP_RDM_DEPOSIT_FORM_QUOTA = {
    "maxFiles": 100,
    "maxStorage": 500000000000,
}

# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

# Define the value of the cache control header `max-age` returned by the server when serving
# public files. Files will be cached by the browser for the provided number of seconds.
# See flask documentation for more information:
# https://flask.palletsprojects.com/en/2.1.x/config/#SEND_FILE_MAX_AGE_DEFAULT
SEND_FILE_MAX_AGE_DEFAULT = 300

# SECURITY WARNING: keep the secret key used in production secret!
# Do not commit it to a source code repository.
# ** Stored in .env.private **
SECRET_KEY="CHANGE_ME"

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
# TODO: remove localhost for production
APP_ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1', 'invenio-dev.hcommons-staging.org']


# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

# TODO: Set
# SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://knowledge-commons-repository:knowledge-commons-repository@localhost/knowledge-commons-repository"


# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

APP_DEFAULT_SECURE_HEADERS = {
    'content_security_policy': {
        'default-src': [
            "'self'",
            'data:', # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "blob:",            # for pdf preview
            # Add your own policies here (e.g. analytics)
        ],
    },
    'content_security_policy_report_only': False,
    'content_security_policy_report_uri': None,
    'force_file_save': False,
    'force_https': True,
    'force_https_permanent': False,
    'frame_options': 'sameorigin',
    'frame_options_allow_from': None,
    'session_cookie_http_only': True,
    'session_cookie_secure': True,
    'strict_transport_security': True,
    'strict_transport_security_include_subdomains': True,
    'strict_transport_security_max_age': 31556926,  # One year in seconds
    'strict_transport_security_preload': False,
}


# Flask-Babel
# ===========
# See https://python-babel.github.io/flask-babel/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = 'en'
# Default time zone
BABEL_DEFAULT_TIMEZONE = 'Europe/Zurich'


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
I18N_LANGUAGES = [
    # ('de', _('German')),
    # ('tr', _('Turkish')),
]


# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = "Knowledge Commons Repository"
# Header logo
# TODO: change
THEME_LOGO = 'images/invenio-rdm.svg'


# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = './less/theme.less'


# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

# TODO: Set with your own hostname when deploying to production
SITE_UI_URL = "https://localhost"
SITE_API_URL = "https://localhost/api"

APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "publication_date": lambda: datetime.now().strftime("%Y-%m-%d"),
    "rights": [
        {
            "id": "cc-by-4.0",
            "title": "Creative Commons Attribution 4.0 International",
            "description": ("The Creative Commons Attribution license allows "
                            "re-distribution and re-use of a licensed work "
                            "on the condition that the creator is "
                            "appropriately credited."),
            "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
        }
    ],
    "publisher": "MESH Research",
}

# See https://github.com/inveniosoftware/invenio-app-rdm/blob/master/invenio_app_rdm/config.py
APP_RDM_DEPOSIT_FORM_AUTOCOMPLETE_NAMES = 'search' # "search_only" or "off"


# Invenio-RDM-Records
# ===================
# See https://inveniordm.docs.cern.ch/customize/dois/
# TODO: set up
DATACITE_ENABLED = False
DATACITE_USERNAME = ""
# ** set in .env.private **
# DATACITE_PASSWORD = ""
DATACITE_PREFIX = ""
DATACITE_TEST_MODE = True
DATACITE_DATACENTER_SYMBOL = ""

# Authentication - Invenio-Accounts and Invenio-OAuthclient
# =========================================================
# See: https://inveniordm.docs.cern.ch/customize/authentication/

# Invenio-Accounts
# ----------------
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py
ACCOUNTS_LOCAL_LOGIN_ENABLED = True  # enable local login
SECURITY_REGISTERABLE = True  # local login: allow users to register
SECURITY_RECOVERABLE = True  # local login: allow users to reset the password
SECURITY_CHANGEABLE = True  # local login: allow users to change psw
SECURITY_CONFIRMABLE = True  # local login: users can confirm e-mail address
# TODO: change before production
SECURITY_LOGIN_WITHOUT_CONFIRMATION = True # require users to confirm email before being able to login

# Invenio-OAuthclient
# -------------------
# See https://github.com/inveniosoftware/invenio-oauthclient/blob/master/invenio_oauthclient/config.py

OAUTHCLIENT_REMOTE_APPS = {}  # configure external login providers

from invenio_oauthclient.views.client import auto_redirect_login
ACCOUNTS_LOGIN_VIEW_FUNCTION = auto_redirect_login  # autoredirect to external login if enabled
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = False  # allow users to change profile info (name, email, etc...)

# OAI-PMH
# =======
# See https://github.com/inveniosoftware/invenio-oaiserver/blob/master/invenio_oaiserver/config.py

# TODO: change in production
OAISERVER_ID_PREFIX = "invenio-dev.hcommons-staging.org"
"""The prefix that will be applied to the generated OAI-PMH ids."""

# Invenio-Search
# --------------

SEARCH_INDEX_PREFIX = "knowledge-commons-repository-"
