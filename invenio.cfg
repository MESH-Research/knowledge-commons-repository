"""
InvenioRDM settings for Knowledge Commons Repository project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://inveniordm.docs.cern.ch/reference/configuration/.
"""
from datetime import datetime
import idutils

from invenio_i18n import lazy_gettext as _

from invenio_oauthclient.views.client import auto_redirect_login

from invenio_rdm_records.config import (
    RDM_RECORDS_IDENTIFIERS_SCHEMES,
    RDM_RECORDS_PERSONORG_SCHEMES,
    always_valid,
)
from invenio_rdm_records.contrib.imprint import (
    IMPRINT_CUSTOM_FIELDS,
    # IMPRINT_CUSTOM_FIELDS_UI,
    IMPRINT_NAMESPACE,
)
from invenio_rdm_records.contrib.journal import (
    JOURNAL_CUSTOM_FIELDS,
    JOURNAL_NAMESPACE,
)
from invenio_rdm_records.contrib.thesis import (
    THESIS_CUSTOM_FIELDS,
    THESIS_CUSTOM_FIELDS_UI,
    THESIS_NAMESPACE,
)
from invenio_rdm_records.contrib.meeting import (
    MEETING_CUSTOM_FIELDS,
    MEETING_CUSTOM_FIELDS_UI,
    MEETING_NAMESPACE,
)
from invenio_rdm_records.contrib.codemeta import (
    CODEMETA_CUSTOM_FIELDS,
    CODEMETA_CUSTOM_FIELDS_UI,
    CODEMETA_NAMESPACE,
)
from invenio_rdm_records.resources.stats.event_builders import build_record_unique_id
from invenio_rdm_records.services.pids import providers
from invenio_rdm_records.services.stats import permissions_policy_lookup_factory

from invenio_records_resources.services.custom_fields import TextCF

from invenio_saml.handlers import acs_handler_factory

from invenio_stats.aggregations import StatAggregator
from invenio_stats.contrib.event_builders import build_file_unique_id
from invenio_stats.processors import EventsIndexer, anonymize_user, flag_robots
from invenio_stats.queries import TermsQuery
# from invenio_stats.tasks import StatsAggregationTask, StatsEventTask

from knowledge_commons_repository.metadata_fields.kcr_metadata_fields import (
    KCR_CUSTOM_FIELDS,
    KCR_ADMIN_INFO_SECTION_UI,
    KCR_IMPRINT_SECTION_EXTRAS_UI,
    KCR_MEETING_SECTION_EXTRAS_UI,
    KCR_THESIS_SECTION_EXTRAS_UI,
    KCR_CONTENT_WARNING_FIELD_UI,
    KCR_NAMESPACE,
)
from knowledge_commons_repository.metadata_fields.kcr_volumes_fields import (
    KCR_VOLUMES_FIELDS,
    KCR_VOLUMES_FIELDS_UI,
)
from knowledge_commons_repository.metadata_fields.kcr_notes_fields import (
    KCR_NOTES_FIELDS,
    KCR_NOTES_SECTION_UI,
)
from knowledge_commons_repository.metadata_fields.kcr_user_tags_fields import (
    KCR_USER_TAGS_FIELDS,
    KCR_USER_TAGS_SECTION_UI,
)
from knowledge_commons_repository.metadata_fields.hclegacy_metadata_fields import (
    HCLEGACY_NAMESPACE,
    HCLEGACY_CUSTOM_FIELDS,
    HCLEGACY_INFO_SECTION_UI,
)
from knowledge_commons_repository.metadata_fields.hclegacy_groups_for_deposit import (
    HCLEGACY_GROUPS_FOR_DEPOSIT_FIELD,
)
from knowledge_commons_repository.metadata_fields.kcr_ai_field import (
    KCR_AI_USAGE_FIELDS,
    KCR_AI_USAGE_FIELDS_UI,
)
from knowledge_commons_repository.metadata_fields.imprint_fields import (
    KCR_IMPRINT_CUSTOM_FIELDS_UI,
)
from knowledge_commons_repository.metadata_fields.journal_fields import (
    KCR_JOURNAL_CUSTOM_FIELDS_UI,
)
from knowledge_commons_repository.metadata_fields.kcr_series_field import (
    KCR_SERIES_FIELDS,
    KCR_SERIES_FIELDS_UI,
)


# def _(x):  # needed to avoid start time failure with lazy strings
#     return x


# Custom fields for deposit metadata

RDM_NAMESPACES = {
    **JOURNAL_NAMESPACE,
    **IMPRINT_NAMESPACE,
    **THESIS_NAMESPACE,
    **MEETING_NAMESPACE,
    **CODEMETA_NAMESPACE,
    **KCR_NAMESPACE,
    **HCLEGACY_NAMESPACE,
}

RDM_CUSTOM_FIELDS = [
    *JOURNAL_CUSTOM_FIELDS,
    *MEETING_CUSTOM_FIELDS,
    *IMPRINT_CUSTOM_FIELDS,
    *THESIS_CUSTOM_FIELDS,
    *CODEMETA_CUSTOM_FIELDS,
    *KCR_CUSTOM_FIELDS,
    *KCR_VOLUMES_FIELDS,
    *KCR_NOTES_FIELDS,
    *KCR_USER_TAGS_FIELDS,
    *HCLEGACY_CUSTOM_FIELDS,
    *HCLEGACY_GROUPS_FOR_DEPOSIT_FIELD,
    *KCR_AI_USAGE_FIELDS,
    *KCR_SERIES_FIELDS,
]

# Hide "meeting" section in the landing page
# MEETING_CUSTOM_FIELDS_UI["hidden"] = True

# Create a "Publishing Information" section in the deposit form and add multiple fields
RDM_CUSTOM_FIELDS_UI = [
    THESIS_CUSTOM_FIELDS_UI,
    {
        "section": _("KCR thesis information"),
        "hidden": False,
        "fields": [
            *KCR_THESIS_SECTION_EXTRAS_UI,
        ],
    },
    KCR_JOURNAL_CUSTOM_FIELDS_UI,
    KCR_IMPRINT_CUSTOM_FIELDS_UI,
    KCR_SERIES_FIELDS_UI,
    {
        "section": _("KCR Book information"),
        "hidden": False,
        "fields": [*KCR_IMPRINT_SECTION_EXTRAS_UI, *KCR_VOLUMES_FIELDS_UI],
    },
    MEETING_CUSTOM_FIELDS_UI,
    {
        "section": _("KCR Conference information"),
        "fields": [*KCR_MEETING_SECTION_EXTRAS_UI],
    },
    {"section": _("Content warning"), "fields": [KCR_CONTENT_WARNING_FIELD_UI]},
    KCR_USER_TAGS_SECTION_UI,
    KCR_NOTES_SECTION_UI,
    KCR_ADMIN_INFO_SECTION_UI,
    CODEMETA_CUSTOM_FIELDS_UI,
    KCR_AI_USAGE_FIELDS_UI,
    HCLEGACY_INFO_SECTION_UI,
]

THEME_SHOW_FRONTPAGE_INTRO_SECTION = False

THEME_TWITTERHANDLE = ""
"""Twitter handle."""

# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

SQLALCHEMY_DATABASE_URI = "postgresql+psycopg2://knowledge-commons-repository:knowledge-commons-repository@localhost/knowledge-commons-repository"

# Invenio-S3
# ==========
# s3://hcommons-dev-invenio/hcommons-dev-invenio/
S3_ENDPOINT_URL = "https://hcommons-dev-invenio.s3.amazonaws.com/hcommons-dev-invenio"
S3_REGION_NAME = "us-east-1"

# FIXME: change for production
# Setup for migration (from caltech)
# RATELIMIT_AUTHENTICATED_USER = "25000 per hour;500 per minute"
RATELIMIT_ENABLED = False

# Setup deposit form quota (from caltech)
# APP_RDM_DEPOSIT_FORM_QUOTA = {
#     "maxFiles": 100,
#     "maxStorage": 500000000000,
# }

# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

# Define the value of the cache control header `max-age` returned by the server when serving
# public files. Files will be cached by the browser for the provided number of seconds.
# See flask documentation for more information:
# https://flask.palletsprojects.com/en/2.1.x/config/#SEND_FILE_MAX_AGE_DEFAULT
SEND_FILE_MAX_AGE_DEFAULT = 300

# SECURITY WARNING: keep the secret key used in production secret!
# Do not commit it to a source code repository.
# ** Stored in .env.private **
SECRET_KEY = "CHANGE_ME"

# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
# TODO: remove localhost for production
APP_ALLOWED_HOSTS = [
    "0.0.0.0",
    "localhost",
    "127.0.0.1",
    "localhost:5000",
    "127.0.0.1:5000",
    "10.98.11.198",
    "invenio-dev.hcommons-staging.org",
    "18.210.54.2",
]
# TODO: 18.210.54.2 is  SSL load balancer

# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

# APP_RDM_ROUTES = {
#     "index": "/",
#     "robots": "/robots.txt",
#     "help_search": "/help/search",
#     "help_statistics": "/help/statistics",
#     "record_search": "/search",
#     "record_detail": "/records/<pid_value>",
#     "record_export": "/records/<pid_value>/export/<export_format>",
#     "record_file_preview": "/records/<pid_value>/preview/<path:filename>",
#     "record_file_download": "/records/<pid_value>/files/<path:filename>",
#     "record_from_pid": "/<any({schemes}):pid_scheme>/<path:pid_value>",
#     "record_latest": "/records/<pid_value>/latest",
#     "dashboard_home": "/me",
#     "deposit_create": "/uploads/new",
#     "deposit_edit": "/uploads/<pid_value>",
# }

APP_DEFAULT_SECURE_HEADERS = {
    "content_security_policy": {
        "default-src": [
            "'self'",
            "'unsafe-inline'",  # for inline scripts and styles
            "blob:",  # for pdf preview
            "hcommons-dev-invenio.s3.amazonaws.com",
            "127.0.0.1",
            "localhost",
            "10.95.11.198",
            "18.210.54.2",  # TODO: SSL load balancer
            "hcommons-staging.org",
            "*.hcommons-staging.org",
            "fonts.googleapis.com",
            "https://khan.github.io/tota11y/dist/tota11y.min.js",
        ],
        "img-src": [
            "'self'",
            "data:",  # for images
            "blob:",
            "hcommons-dev-invenio.s3.amazonaws.com",
            "127.0.0.1",
            "localhost",
            "10.98.11.40",
            "18.210.54.2",  # TODO: SSL load balancer
            "hcommons-staging.org",
            "*.hcommons-staging.org",
        ],
        "font-src": ["'self'", "data:", "fonts.gstatic.com"],  # for fonts
    },
    "content_security_policy_report_only": False,
    "content_security_policy_report_uri": None,
    "force_file_save": False,
    "force_https": False,  # TODO: was True by default
    "force_https_permanent": False,
    "frame_options": "sameorigin",
    "frame_options_allow_from": None,
    "session_cookie_http_only": True,
    "session_cookie_secure": True,
    # FIXME: change for production
    "strict_transport_security": False,  # TODO: was True by default
    "strict_transport_security_include_subdomains": False,  # TODO: was True by default
    # 'strict_transport_security_max_age': 31556926,  # One year in seconds
    # 'strict_transport_security_preload': False,
}


# Flask-Babel
# ===========
# See https://python-babel.github.io/flask-babel/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = "en"
# Default time zone
BABEL_DEFAULT_TIMEZONE = "Europe/Zurich"


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
I18N_LANGUAGES = [
    # ('de', _('German')),
    # ('tr', _('Turkish')),
]


# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = "Knowledge Commons Repository"
# Header logo
# TODO: change
THEME_LOGO = "images/Network_Black-edited-line-with-color.jpg"


# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = "./less/theme.less"
# APP_RDM_RECORD_LANDING_PAGE_TEMPLATE = (
#     "knowledge_commons_repository/records/detail.html"
# )
APP_RDM_RECORD_LANDING_PAGE_TEMPLATE = "invenio_modular_detail_page/detail.html"
# APP_RDM_DETAIL_SIDE_BAR_TEMPLATES = [
#     "invenio_app_rdm/records/details/side_bar/manage_menu.html",
#     "invenio_app_rdm/records/details/side_bar/metrics.html",
#     "invenio_app_rdm/records/details/side_bar/versions.html",
#     "invenio_app_rdm/records/details/side_bar/external_resources.html",
#     "invenio_app_rdm/records/details/side_bar/communities.html",
#     "invenio_app_rdm/records/details/side_bar/keywords_subjects.html",
#     "invenio_app_rdm/records/details/side_bar/details.html",
#     "invenio_app_rdm/records/details/side_bar/licenses.html",
#     "invenio_app_rdm/records/details/side_bar/export.html",
# ]

# top-level objects are sections in sidebar
# available sections defined in DetailRightSidebar.jsx:
# "details", "manage_menu", "downloads", "sidebar_details", "versions", "citation", "communities", "keywords_subjects", "export", "social_share"
APP_RDM_DETAIL_SIDEBAR_SECTIONS_RIGHT = [
    {"section": _("Manage")},
    {
        "section": _("Download"),
        "component_name": "SidebarDownloadSection",
        "props": [
            "defaultPreviewFile",
            "files",
            "fileTabIndex",
            "hasFiles",
            "isPreview",
            "permissions",
            "previewFileUrl",
            "record",
            "setActivePreviewFile",
            "setActiveTab",
            "tabbedSections",
            "totalFileSize",
        ],
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Communities"),
        "component_name": "CommunitiesBanner",
        "props": ["community", "isPreviewSubmissionRequest"],
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Content Warning"),
        "component_name": "ContentWarning",
        "props": ["record"],
    },
    {
        "section": _("Versions"),
        "component_name": "VersionsDropdownSection",
        "props": ["isPreview", "record"],
        "show_heading": False,
    },
    {
        "section": _("Keywords & Subjects"),
        "component_name": "SidebarSubjectsSection",
        "props": ["record"],
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Cite this"),
        "component_name": "CitationSection",
        "props": ["record", "citationStyles", "citationStyleDefault"],
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Details"),
        "component_name": "SidebarDetailsSection",
        "props": [
            "customFieldsUi",
            "doiBadgeUrl",
            "identifierSchemes",
            "landingUrls",
            "record",
        ],
        "subsections": [
            # {"section": "Resource type"},
            {"section": "Published in"},
            {"section": "Imprint"},
            {"section": "Publisher"},
            {"section": "Awarding university"},
            {"section": "Conference"},
            {"section": "Publication date"},
            {"section": "Languages"},
            {"section": "Formats"},
            {"section": "Sizes"},
            {"section": "DOI badge"},
        ],
        "show_heading": False,
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Licenses"),
        "component_name": "SidebarRightsSection",
        "props": ["rights"],
        "show": "tablet computer only",
    },
    {
        "section": _("Export"),
        "component_name": "SidebarExportSection",
        "props": ["isPreview", "recordExporters", "record"],
        "show": "computer large monitor widescreen only",
    },
    {
        "section": _("Share"),
        "component_name": "SidebarSharingSection",
        "props": ["record"],
        "show": "computer large monitor widescreen only",
    },
]
APP_RDM_DETAIL_SIDEBAR_SECTIONS_LEFT = []

# top-level objects are tabs in main detail page column
# available subsections defined in DetailMainTab.jsx:
# "descriptions", "preview"
APP_RDM_DETAIL_MAIN_SECTIONS = [
    {"section": _("Title"), "component_name": "RecordTitle", "props": ["title"]},
    {
        "section": _("Contributors"),
        "component_name": "CreatibutorsShortList",
        "props": [
            "creators",
            "contributors",
            "iconsRor",
            "iconsOrcid",
            "iconsGnd",
            "iconsHcUsername",
            "landingUrls",
        ],
    },
    {
        "section": "Tabs",
        "component_name": "DetailMainTabs",
        "subsections": [
            {
                "section": _("Content"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "section": _("Descriptions"),
                        "component_name": "Descriptions",
                        "props": [
                            "description",
                            "additionalDescriptions",
                            "hasFiles",
                            "permissions",
                        ],
                    },
                    {
                        "section": _("Preview"),
                        "component_name": "FilePreviewWrapper",
                        "props": [
                            "activePreviewFile",
                            "defaultPreviewFile",
                            "files",
                            "isPreview",
                            "hasFiles",
                            "hasPreviewableFiles",
                            "permissions",
                            "previewFile",
                            "previewFileUrl",
                            "record",
                            "setActivePreviewFile",
                            "totalFileSize",
                        ],
                    },
                ],
                "tab": True,
                "props": [],
            },
            {
                "section": _("Details"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "section": _("Publication"),
                        "component_name": "PublishingDetails",
                        "props": [
                            "customFieldsUi",
                            "doiBadgeUrl",
                            "hasFiles",
                            "iconsHcUsername",
                            "iconsGnd",
                            "iconsOrcid",
                            "iconsRor",
                            "identifierSchemes",
                            "landingUrls",
                            "localizedStats",
                            "record",
                            "showDecimalSizes",
                        ],
                        "subsections": [
                            {
                                "section": _("Contributors"),
                                "subsections": [
                                    {"section": "Contributors"},
                                ],
                                "show": "mobile only",
                            },
                            {
                                "section": _("Publication"),
                                "subsections": [
                                    {"section": "URLs"},
                                    {"section": "Published in"},
                                    {"section": "Imprint"},
                                    {"section": "Publisher"},
                                    {"section": "Awarding university"},
                                    {"section": "Conference"},
                                    {"section": "Languages"},
                                    {"section": "Publication date"},
                                    {"section": "Additional dates"},
                                    {"section": "Formats"},
                                    {"section": "Sizes"},
                                ],
                            },
                            {
                                "section": _("Additional titles"),
                                "subsections": [
                                    {"section": "Additional titles"},
                                ],
                            },
                            {
                                "section": _("Funding"),
                                "subsections": [{"section": "Funding"}],
                            },
                            {
                                "section": _("Identifiers"),
                                "subsections": [
                                    {"section": "DOI"},
                                    {"section": "Alternate identifiers"},
                                ],
                            },
                            {
                                "section": _("Related"),
                                "subsections": [
                                    {"section": "Related identifiers"},
                                ],
                            },
                            {
                                "section": _("References"),
                                "subsections": [
                                    {"section": "References"},
                                ],
                            },
                            {
                                "section": _("AI Usage"),
                                "subsections": [
                                    {
                                        "section": "kcr:ai_usage",
                                        "subsections": [
                                            {"section": "ai_used"},
                                            {"section": "ai_description"},
                                        ],
                                    }
                                ],
                            },
                            {
                                "section": _("Analytics"),
                                "subsections": [
                                    {
                                        "section": "Analytics",
                                    }
                                ],
                                "show": "mobile only",
                            },
                        ],
                    }
                ],
                "tab": True,
                "props": [],
            },
            {
                "section": _("Contributors"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "section": "Contributors",
                        "component_name": "Creatibutors",
                        "subsections": [],
                        "props": [
                            "creators",
                            "contributors",
                            "iconsRor",
                            "iconsOrcid",
                            "iconsGnd",
                            "iconsHcUsername",
                            "landingUrls",
                        ],
                    }
                ],
                "tab": True,
                "props": [],
                "show": "tablet computer only",
            },
            {
                "section": _("Analytics"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "section": "Analytics",
                        "component_name": "Analytics",
                        "props": [
                            "hasFiles",
                            "localizedStats",
                            "showDecimalSizes",
                            "record",
                        ],
                    }
                ],
                "tab": True,
                "props": [],
                "show": "tablet computer only",
            },
            {
                "section": _("Subjects"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "component_name": "MainSubjectsSection",
                        "props": ["record"],
                    }
                ],
                "tab": True,
                "props": [],
                "show": "mobile tablet only",
            },
            {
                "section": _("Files"),
                "component_name": "DetailMainTab",
                "subsections": [
                    {
                        "section": "FilesPreview",
                        "component_name": "FilePreview",
                        "props": [
                            "activePreviewFile",
                            "files",
                            "isPreview",
                            "hasFiles",
                            "hasPreviewableFiles",
                            "permissions",
                            "previewFile",
                            "previewFileUrl",
                            "record",
                            "setActivePreviewFile",
                            "totalFileSize",
                        ],
                    },
                    {
                        "section": "FilesBox",
                        "component_name": "FileListBox",
                        "props": [
                            "files",
                            "isPreview",
                            "hasFiles",
                            "permissions",
                            "previewFile",
                            "previewFileUrl",
                            "previewTabIndex",
                            "record",
                            "setActivePreviewFile",
                            "setActiveTab",
                            "showDecimalSizes",
                            "totalFileSize",
                        ],
                    },
                ],
                "tab": True,
                "props": [],
            },
        ],
    },
]


# Invenio-Records-Resources
# =========================
# See https://github.com/inveniosoftware/invenio-records-resources/blob/master/invenio_records_resources/config.py

APP_RDM_DEPOSIT_FORM_TEMPLATE = "invenio_modular_deposit_form/deposit.html"

APP_RDM_DEPOSIT_FORM_DEFAULTS = {
    "publication_date": lambda: datetime.now().strftime("%Y-%m-%d"),
    # "rights": [
    #     {
    #         "id": "cc-by-4.0",
    #         "title": "Creative Commons Attribution 4.0 International",
    #         "description": ("The Creative Commons Attribution license allows "
    #                         "re-distribution and re-use of a licensed work "
    #                         "on the condition that the creator is "
    #                         "appropriately credited."),
    #         "link": "https://creativecommons.org/licenses/by/4.0/legalcode",
    #     }
    # ],
    # "publisher": "MESH Research",
    "related_identifiers": [],
}

APP_RDM_DEPOSIT_FORM_AUTOCOMPLETE_NAMES = "search"  # "search_only" or "off"


# Invenio-RDM-Records
# ===================
# See https://inveniordm.docs.cern.ch/customize/dois/
# TODO: set up
DATACITE_ENABLED = True
# ** set in .env.private **
DATACITE_PREFIX = "10.17613"
DATACITE_TEST_MODE = True
DATACITE_DATACENTER_SYMBOL = "MSU.CORE"

# Persistent identifiers configuration
#
RDM_PERSISTENT_IDENTIFIER_PROVIDERS = [
    # DataCite DOI provider
    providers.DataCitePIDProvider(
        "datacite",
        client=providers.DataCiteClient("datacite", config_prefix="DATACITE"),
        label=_("DOI"),
    ),
    # DOI provider for externally managed DOIs
    providers.ExternalPIDProvider(
        "external",
        "doi",
        validators=[providers.BlockedPrefixes(config_names=["DATACITE_PREFIX"])],
        label=_("DOI"),
    ),
    # OAI identifier
    providers.OAIPIDProvider(
        "oai",
        label=_("OAI ID"),
    ),
]

RDM_RECORDS_IDENTIFIERS_SCHEMES.update(
    {
        "hclegacy-pid": {
            "label": _("Humanities Commons Legacy PID"),
            "validator": always_valid,
            "datacite": "Other",
        },
        "hclegacy-record-id": {
            "label": _("Humanities Commons Legacy Record ID"),
            "validator": always_valid,
            "datacite": "Other",
        },
        "datacite-doi": {
            "label": _("DOI (DataCite)"),
            "validator": idutils.is_doi,
            "datacite": "DOI",
        },
    }
)

RDM_RECORDS_PERSONORG_SCHEMES.update(
    {
        "hcid": {"label": _("hcid"), "validator": always_valid, "datacite": "Other"},
        "hc_username": {
            "label": _("hc_username"),
            "validator": always_valid,
            "datacite": "Other",
        },
    }
)

RDM_PERSISTENT_IDENTIFIERS = {
    # DOI automatically removed if DATACITE_ENABLED is False.
    "doi": {
        "providers": ["datacite", "external"],
        "required": True,
        "label": _("DOI"),
        "validator": idutils.is_doi,
        "normalizer": idutils.normalize_doi,
    },
    "oai": {
        "providers": ["oai"],
        "required": True,
        "label": _("OAI"),
    },
}

# Authentication - Invenio-Accounts and Invenio-OAuthclient
# =========================================================
# See: https://inveniordm.docs.cern.ch/customize/authentication/

# Invenio-Accounts
# ----------------
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py
ACCOUNTS_LOCAL_LOGIN_ENABLED = True  # enable local login
SECURITY_REGISTERABLE = True  # local login: allow users to register
SECURITY_RECOVERABLE = True  # local login: allow users to reset the password
SECURITY_CHANGEABLE = True  # local login: allow users to change psw
SECURITY_CONFIRMABLE = True  # local login: users can confirm e-mail address
# TODO: change before production
SECURITY_LOGIN_WITHOUT_CONFIRMATION = (
    True  # require users to confirm email before being able to login
)

# Invenio-SAML
# ----------------
OAUTHCLIENT_LOGIN_USER_TEMPLATE = "invenio_saml/login_user.html"

# Base URL for the extensions endpoint.
SSO_SAML_DEFAULT_BLUEPRINT_PREFIX = "/saml"

# URL route for the metadata request.
SSO_SAML_DEFAULT_METADATA_ROUTE = "/metadata/<idp>"

# URL route for the SP login.
SSO_SAML_DEFAULT_SSO_ROUTE = "/login/<idp>"

# URL route to handle the IdP login request.
SSO_SAML_DEFAULT_ACS_ROUTE = "/authorized/<idp>"

# URL route for the SP logout.
SSO_SAML_DEFAULT_SLO_ROUTE = "/slo/<idp>"

# URL route to handle the IdP logout request.
SSO_SAML_DEFAULT_SLS_ROUTE = "/sls/<idp>"

SSO_SAML_IDPS = {
    # name your authentication provider
    "knowledgeCommons": {
        # Basic info
        "title": "Knowledge Commons",
        "description": "Knowledge Commons Authentication Service",
        # "icon": "",
        # path to the file i.e. "./saml/sp.crt"
        "sp_cert_file": "./docker/nginx/samlCertificate.crt",
        # path to the file i.e. "./saml/sp.key"
        "sp_key_file": "./docker/nginx/samlPrivateKey.key",
        "settings": {
            # If strict is True, then the Python Toolkit will reject unsigned
            # or unencrypted messages if it expects them to be signed or encrypted.
            # Also it will reject the messages if the SAML standard is not strictly
            # followed. Destination, NameId, Conditions ... are validated too.
            "strict": False,
            # Enable debug mode (outputs errors).
            "debug": True,
            # Service Provider Data that we are deploying.
            "sp": {
                # NOTE: Assertion consumer service is https://localhost/saml/authorized/knowledgeCommons
                # NOTE: entityId for the dev SP is https://localhost/saml/metadata/knowledgeCommons
                # NOTE: entityId for the staging SP is https://invenio-dev.hcommons-staging.org/saml/idp
                # Specifies the constraints on the name identifier to be used to
                # represent the requested subject.
                # Take a look on https://github.com/onelogin/python-saml/blob/master/src/onelogin/saml2/constants.py
                # to see the NameIdFormat that are supported.
                "NameIDFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
            },
            # Identity Provider Data that we want connected with our SP.
            "idp": {
                # Identifier of the IdP entity  (must be a URI)
                "entityId": "https://proxy.hcommons-dev.org/idp",
                # SSO endpoint info of the IdP. (Authentication Request protocol)
                "singleSignOnService": {
                    # URL Target of the IdP where the Authentication Request Message
                    # will be sent.
                    "url": "https://proxy.hcommons-dev.org/Saml2/sso/redirect",
                    # SAML protocol binding to be used when returning the <Response>
                    # message. OneLogin Toolkit supports the HTTP-Redirect binding
                    # only for this endpoint.
                    "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                },
                # SLO endpoint info of the IdP.
                "singleLogoutService": {
                    # URL Location where the <LogoutRequest> from the IdP will be sent (IdP-initiated logout)
                    "url": "https://localhost/saml/slo/knowledgeCommons",
                    # SAML protocol binding to be used when returning the <Response>
                    # message. OneLogin Toolkit supports the HTTP-Redirect binding
                    # only for this endpoint.
                    "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                },
                # Public X.509 certificate of the IdP
                "x509cert": "MIIELTCCApWgAwIBAgIJAPeDxhrttBXNMA0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMTFnByb3h5Lmhjb21tb25zLWRldi5vcmcwHhcNMTcxMTAxMTc0NTE3WhcNMjcxMDMwMTc0NTE3WjAhMR8wHQYDVQQDExZwcm94eS5oY29tbW9ucy1kZXYub3JnMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA0d6ycqcxviv946IzS7ZobCK0XAsrwHvcKo65hWkOZsxYBTRvjKITSpKv4TGyVG4leI0Ifthz7o3QAA4IKkkgY15kYO5AhJc9pVa+11vG0DM58qO6yraQRM4U/71AgDEmEZXsUblf3TCkN5w351G26jNwgax+aWNuwzX5EDS5farOhruGG2FwVYEOEHOtWSOKBR8duq1O/yY9OKMhIc2kmh9R m1594qTzZbxNXjyCY+LU/GZbYQP+WlbjM/dHflK5Y2WexyT942xHYnesvPnzGvEMB4g685Yyjl+9xz+AE41sifKYy03m7GgkimXNxQ2SnGZ4Rtj+3DlDC9S/dB2CRJd2uaTwgxEEK/zJJ1K2TFRfDH/wxCW5DwI3n8BMglc8TPZ33FDqNgZPwPDl92/shwNIU3sFM/lmDtLm/4XeKZjOZYa+WCVC71tnFYDltK1//oAqFSVRF0WT6+dcnjXxJSdRrQo+C1gWI+aXJzmDmhp8WBN2q7nUGapJYSu0a5yXAgMBAAGjaDBmMEUGA1UdEQQ+MDyCFnByb3h5Lmhjb21tb25zLWRldi5vcmeGImh0dHBzOi8vcHJveHkuaGNvbW1vbnMtZGV2Lm9yZy9pZHAwHQYDVR0OBBYEFDLkys52MyePCpr5IN2ybhgIosmlMA0GCSqGSIb3DQEBCwUAA4IBgQDOuUnSwfru5uNorAISo5QEVUi3UrholF0RPFFvM6P63MOpWZwdFQYKjY1eaaE+X++AZ1FkHQv/esy7F0FRWiyU3LHUX3Yzuttb7vj7mw5D6IYuSIG1/0Edj/eSpnOs+6MQUUpfaFi+A0C9Smng6L1kj3SOlePprJdwfIdGG/6oiDaF1bhoWs/eidouzMLMKiGY6KzmaT8fInST1BGMdm4+zqNvwd1FuifDOvVQqqtl q2og0arTXG01YyCvU+NJT/6KjLDZf1bSmDWAPQ51Fc4fpkeOj+aG0DfwdutO2SNkdDDdD/m7pnepxv2u8jqSKyYKdrzLd0lJPrqH8YV4AYmyJ1UortJXFoTsGSbPv0fw qM1b1JAKsPMP22xmp2i4BcYOT1jZ+R+RXmMNK+fUSXAmSkhk/8h6CMgmU4ldBj5jtyn/M4GrGesMU1sIgidoCj/5F3jQlswz0eoaX3LyWQkDZbUbIm6Vz4h3GFwwlky8c5RbLEmwlolP+zSzoq4T/tw=",
            },
            # Security settings
            # more on https://github.com/onelogin/python-saml
            "security": {
                "authnRequestsSigned": False,
                "failOnAuthnContextMismatch": False,
                "logoutRequestSigned": False,
                "logoutResponseSigned": False,
                "metadataCacheDuration": None,
                "metadataValidUntil": None,
                "nameIdEncrypted": False,
                "requestedAuthnContext": False,
                "requestedAuthnContextComparison": "exact",
                "signMetadata": False,
                "signatureAlgorithm": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",
                "wantAssertionsEncrypted": False,
                "wantAssertionsSigned": False,
                "wantAttributeStatement": False,
                "wantMessagesSigned": False,
                "wantNameId": True,
                "wantNameIdEncrypted": False,
                "digestAlgorithm": "http://www.w3.org/2001/04/xmlenc#sha256",
            },
        },
        # Account Mapping
        "mappings": {
            "email": "urn:oid:0.9.2342.19200300.100.1.3",  # "mail"
            # "name": "urn:oid:2.5.4.3",  # "cn"
            "name": "urn:oid:2.5.4.42",  # "givenName"
            "surname": "urn:oid:2.5.4.4",  # "sn"
            "external_id": "urn:oid:2.16.840.1.113730.3.1.3",  # "employeeNumber"
        },  # FIXME: new entity id url, assertion consumer service url, certificate
        # "title", 'urn:oid:2.5.4.12': ['Hc Developer'],
        # 'urn:oid:2.16.840.1.113730.3.1.3': ['iscott'],
        # 'urn:oid:0.9.2342.19200300.100.1.1': ['100103028069838784737+google.com@commons.mla.org'],
        # "isMemberOf", 'urn:oid:1.3.6.1.4.1.5923.1.5.1.1': ['CO:COU:HC:members:active'],
        # 'urn:oid:1.3.6.1.4.1.49574.110.13': ['https://google-gateway.hcommons-dev.org/idp/shibboleth'],
        # 'urn:oid:1.3.6.1.4.1.49574.110.10': ['Google login'],
        # 'urn:oid:1.3.6.1.4.1.49574.110.11': ['Humanities Commons'],
        # 'urn:oid:1.3.6.1.4.1.49574.110.12': ['Humanities Commons']}
        # Inject your remote_app to handler
        # Note: keep in mind the string should match
        # given name for authentication provider
        "acs_handler": acs_handler_factory("knowledgeCommons"),
        # Automatically set `confirmed_at` for users upon
        # registration, when using the default `acs_handler`
        "auto_confirm": True,
    }
}

# Invenio-OAuthclient
# -------------------
# See https://github.com/inveniosoftware/invenio-oauthclient/blob/master/invenio_oauthclient/config.py

OAUTHCLIENT_REMOTE_APPS = {}  # configure external login providers

ACCOUNTS_LOGIN_VIEW_FUNCTION = (
    auto_redirect_login  # autoredirect to external login if enabled
)
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = (
    False  # allow users to change profile info (name, email, etc...)
)

# OAI-PMH
# =======
# See https://github.com/inveniosoftware/invenio-oaiserver/blob/master/invenio_oaiserver/config.py

# TODO: change in production
OAISERVER_ID_PREFIX = "invenio-dev.hcommons-staging.org"
"""The prefix that will be applied to the generated OAI-PMH ids."""

# Invenio-Search
# --------------

SEARCH_INDEX_PREFIX = "knowledge-commons-repository-"


# Identifier urls
# pid follows end of each string
# urn expects to begin 'urn:nbn'
LANDING_URLS = {
    "doi": "https://doi.org/",
    "handle": "https://hdl.handle.net/",
    "arxiv": "https://arxiv.org/abs/",
    "ascl": "https://ascl.net/",
    "orcid": "https://orcid.org/",
    "pmid": "https://pubmed.ncbi.nlm.nih.gov/",
    "ads": "https://ui.adsabs.harvard.edu/#abs/",
    "pmcid": "https://www.ncbi.nlm.nih.gov/pmc/",
    "gnd": "https://d-nb.info/gnd/",
    "urn": "https://nbn-resolving.org/",
    "sra": "https://www.ebi.ac.uk/ena/data/view/",
    "bioproject": "https://www.ebi.ac.uk/ena/data/view/",
    "biosample": "https://www.ebi.ac.uk/ena/data/view/",
    "ensembl": "https://www.ensembl.org/id/",
    "uniprot": "https://purl.uniprot.org/uniprot/",
    "refseq": "https://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?val=",
    "genome": "https://www.ncbi.nlm.nih.gov/assembly/",
    "geo": "https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=",
    "arrayexpress_array": "https://www.ebi.ac.uk/arrayexpress/arrays/",
    "arrayexpress_experiment": "https://www.ebi.ac.uk/arrayexpress/experiments/",
    "hal": "https://hal.archives-ouvertes.fr/",
    "swh": "https://archive.softwareheritage.org/",
    "ror": "https://ror.org/",
    "viaf": "https://viaf.org/viaf/",
    "hcommons_username": "https://hcommons.org/members/",
}
"""URL generation configuration for the supported PID providers."""


# Invenio-Previewer
# =================

PREVIEWER_PREVIEWERS_ORDER = [
    "invenio_previewer.extensions.csv_dthreejs",
    "invenio_previewer.extensions.simple_image",
    "invenio_previewer.extensions.json_prismjs",
    "invenio_previewer.extensions.xml_prismjs",
    "invenio_previewer.extensions.mistune",
    "invenio_previewer.extensions.custom_pdf_viewer",
    # 'invenio_previewer.extensions.pdfjs',
    "invenio_previewer.extensions.ipynb",
    "invenio_previewer.extensions.zip",
    "invenio_previewer.extensions.txt_previewer",
    "invenio_previewer.extensions.default",
]

PREVIEWER_PREFERENCE = [
    "csv_dthreejs",
    "iiif_simple",
    "simple_image",
    "json_prismjs",
    "xml_prismjs",
    "mistune",
    "custom_pdf_viewer",
    # "pdfjs",
    "ipynb",
    "zip",
    "txt",
]
"""Preferred previewers."""

# Translations

# [compile_catalog]
# directory = "knowledge-commons-repository/translations/"
# use-fuzzy = True

# COMMUNITIES
# ===========

# FIXME: provide proper namespace url
COMMUNITIES_NAMESPACES = {"kcr": "https://invenio-dev.hcommons-staging.org/terms/"}
"""Custom fields namespaces.

.. code-block:: python
    {<namespace>: <uri>, ...}

For example:

.. code-block:: python
    {
        'cern': 'https://cern.ch/terms',
        'dwc': 'http://rs.tdwg.org/dwc/terms/'
    }

"""

COMMUNITIES_CUSTOM_FIELDS = [
    TextCF(name="kcr:commons_group_id"),
]
"""Communities custom fields definition.

Of the shape:

.. code-block:: python

    [
        <custom-field-class-type(name='field')>,
        # ...
        <custom-field-class-type(name='fieldN')>'
    ]

For example:

.. code-block:: python

    [
        TextCF(name='experiment'),
        ...
    ]
"""

COMMUNITIES_CUSTOM_FIELDS_UI = [
    {
        "section": "Commons Group Information",
        "hidden": False,
        "fields": [
            {
                "field": "kcr:commons_group_id",
                "ui_widget": "Input",
                "props": {
                    "label": "Commons Group ID",
                    "placeholder": "",
                    "icon": "person",
                    "description": "If this community is associated with a Commons group, please enter the Group ID here.",
                },
            },
        ],
    }
]

"""Communities custom fields UI configuration.

Of the shape:

.. code-block:: python

    [{
        section: <section_name>,
        fields: [
            {
                field: 'path-to-field',  # this should be validated against the defined fields in `RDM_CUSTOM_FIELDS`
                ui_widget: '<ui-widget-name>',  # predefined or user defined ui widget
                props: {
                    label:'<ui-label-to-display>',
                    placeholder:'<placeholder-passed-to-widget>',
                    icon:'<icon-passed-to-widget>',
                    description:'<description-passed-to-widget>',
                }
            },
        ],

        # ...
    }]

For example:

.. code-block:: python

    [{
        'section': 'CERN Experiment'
        'fields' : [{
            field: 'experiment',  # this should be validated against the defined fields in `RDM_CUSTOM_FIELDS`
            ui_widget: 'CustomTextField',  # user defined widget in my-site
            props: {
                label: 'Experiment',
                placeholder: 'Type an experiment...',
                icon: 'pencil',
                description: 'You should fill this field with one of the experiments e.g LHC, ATLAS etc.',
            }
        },
        ...
    }]
"""

# MODULAR DEPOSIT FORM
# ====================

INVENIO_MODULAR_DEPOSIT_FORM_COMMON_FIELDS = [
    {
        "section": "top",
        "component": "FormPages",
        "subsections": [
            {
                "section": "page-1",
                "title": "Type & Title",
                "component": "FormPage",
                "subsections": [
                    {
                        "section": "resource_type",
                        "title": "Resource Type",
                        "component": "ResourceTypeComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "doi",
                        "title": "Digital Object Identifier",
                        "component": "DoiComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "combined_titles",
                        "title": "Title",
                        "component": "CombinedTitlesComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "combined_dates",
                        "title": "Dates",
                        "component": "CombinedDatesComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "abstract",
                        "title": "Description",
                        "component": "AbstractComponent",
                        "wrapped": True,
                    },
                ],
            },
            {
                "section": "page-2",
                "title": "Submission Details",
                "subsections": [
                    {
                        "section": "publisher",
                        "title": "Publisher",
                        "component": "PublisherComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "language",
                        "title": "Language",
                        "component": "LanguagesComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "alternate_identifiers",
                        "title": "Alternate Identifiers",
                        "component": "AlternateIdentifiersComponent",
                        "wrapped": True,
                    },
                ],
            },
            {
                "section": "page-3",
                "title": "Contributors & Funding",
                "subsections": [
                    {
                        "section": "creators",
                        "title": "Creators",
                        "component": "CreatorsComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "contributors",
                        "title": "Contributors",
                        "component": "ContributorsComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "ai",
                        "title": "AI Use",
                        "component": "AIComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "funding",
                        "title": "Funding",
                        "component": "FundingComponent",
                        "wrapped": True,
                    },
                ],
            },
            {
                "section": "page-4",
                "title": "Make It Findable",
                "subsections": [
                    {
                        "section": "subjects_keywords",
                        "title": "Subjects",
                        "component": "SubjectsKeywordsComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "content_warning",
                        "title": "Content Warning",
                        "component": "ContentWarningComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "related_works",
                        "title": "Related Works",
                        "component": "RelatedWorksComponent",
                        "wrapped": True,
                    },
                ],
            },
            {
                "section": "page-5",
                "title": "Access",
                "subsections": [
                    {
                        "section": "communities",
                        "title": "Communities",
                        "component": "CommunitiesComponent",
                        "wrapped": True,
                    },
                    {
                        "section": "access",
                        "title": "Access",
                        "component": "AccessRightsComponent",
                        "wrapped": True,
                    },
                    # {
                    #     "section": "admin_metadata",
                    #     "title": "Administrative Metadata",
                    #     "component": "AdminMetadataComponent",
                    #     "props": {"restrict_to": ["administrator"]},
                    #     "wrapped": True,
                    # },
                    # {
                    #     "section": "hclegacy_info",
                    #     "title": "Commons Legacy Metadata",
                    #     "component": "CommonsLegacyInfoComponent",
                    #     "props": {"restrict_to": ["administrator"]},
                    #     "wrapped": True,
                    # },
                ],
            },
            {
                "section": "page-6",
                "title": "Files",
                "subsections": [
                    {
                        "section": "upload_and_metadata_only",
                        "component": "SectionWrapper",
                        "subsections": [
                            {
                                "section": "file_upload",
                                "title": "Files Upload",
                                "component": "FilesUploadComponent",
                            },
                            {
                                "section": "metadata_only",
                                "title": "Metadata Only",
                                "component": "MetadataOnlyComponent",
                            },
                        ],
                        "props": {
                            "show_heading": True,
                            "icon": "file",
                            "title": "Upload & Metadata Only",
                        },
                    },
                    {
                        "section": "licenses",
                        "title": "Licenses",
                        "component": "LicensesComponent",
                        "wrapped": True,
                    },
                ],
            },
            {
                "section": "page-7",
                "title": "Publish",
                "subsections": [
                    {
                        "section": "submit_actions",
                        "title": "Publish",
                        "component": "SubmissionComponent",
                        "wrapped": False,
                    },
                ],
            },
        ],
    }
]

INVENIO_MODULAR_DEPOSIT_FORM_FIELDS_BY_TYPE = {
    "audiovisual": None,
    "audiovisual-audioRecording": None,
    "audiovisual-documentary": None,
    "audiovisual-interviewRecording": None,
    "audiovisual-musicalRecording": None,
    "audiovisual-other": None,
    "audiovisual-performance": None,
    "audiovisual-podcastEpisode": None,
    "audiovisual-videoRecording": None,
    "dataset": None,
    "image": None,
    "image-chart": None,
    "image-diagram": None,
    "image-figure": None,
    "image-map": None,
    "image-visualArt": None,
    "image-photograph": None,
    "image-other": None,
    "instructionalResource": None,
    "instructionalResource-curriculum": None,
    "instructionalResource-lessonPlan": None,
    "instructionalResource-other": None,
    "instructionalResource-syllabus": None,
    "presentation": None,
    "presentation-conferencePaper": None,
    "presentation-conferencePoster": None,
    "presentation-presentationText": None,
    "presentation-slides": None,
    "presentation-other": None,
    "software": None,
    "software-3DModel": None,
    "software-application": None,
    "software-computationalModel": None,
    "software-computationalNotebook": None,
    "software-service": None,
    "software-other": None,
    "textDocument": None,
    "textDocument-abstract": {
        "page-2": [
            {
                "same_as": "textDocument-journalArticle",
            }
        ]
    },
    "textDocument-bibliography": None,
    "textDocument-blogPost": None,
    "textDocument-book": {
        "page-2": [
            {
                "section": "publication_detail",
                "title": "Publication Details",
                "component": "PublicationDetailsComponent",
                "wrapped": True,
            },
            {
                "section": "book_volume_pages",
                "title": "Volume & Pages",
                "component": "BookVolumePagesComponent",
                "wrapped": True,
            },
            {
                "section": "series",
                "title": "Series",
                "component": "SeriesComponent",
                "wrapped": True,
            },
            {
                "section": "language",
                "title": "Language",
                "component": "LanguagesComponent",
                "wrapped": True,
            },
            {
                "section": "alternate_identifiers",
                "title": "Alternate Identifiers",
                "component": "AlternateIdentifiersComponent",
                "wrapped": True,
            },
        ]
    },
    "textDocument-bookSection": {
        "page-2": [
            {
                "section": "book_section_detail",
                "title": "Book Section Details",
                "component": "BookSectionDetailComponent",
            },
            {
                "section": "book_section_volume_pages",
                "title": "Volume & Pages",
                "component": "BookSectionVolumePagesComponent",
            },
            {"section": "series", "title": "Series", "component": "SeriesComponent"},
            {
                "section": "language",
                "title": "Language",
                "component": "LanguagesComponent",
                "wrapped": True,
            },
            {
                "section": "alternate_identifiers",
                "title": "Alternate Identifiers",
                "component": "AlternateIdentifiersComponent",
                "wrapped": True,
            },
        ]
    },
    "textDocument-conferenceProceeding": None,
    "textDocument-dataManagementPlan": None,
    "textDocument-documentation": None,
    "textDocument-essay": {"page-2": [{"same_as": "textDocument-bookSection"}]},
    "textDocument-interviewTranscript": None,
    "textDocument-journalArticle": {
        "page-2": [
            {
                "section": "journal_detail",
                "title": "Journal Details",
                "component": "JournalDetailComponent",
                "wrapped": True,
            },
            {
                "section": "language",
                "title": "Language",
                "component": "LanguagesComponent",
                "wrapped": True,
            },
            {
                "section": "alternate_identifiers",
                "title": "Alternate Identifiers",
                "component": "AlternateIdentifiersComponent",
                "wrapped": True,
            },
        ]
    },
    "textDocument-legalComment": None,
    "textDocument-legalResponse": None,
    "textDocument-magazineArticle": None,
    "textDocument-monograph": {"page-2": [{"same_as": "textDocument-book"}]},
    "textDocument-newspaperArticle": {"4": ["journal_detail", "edition_section"]},
    "textDocument-onlinePublication": None,
    "textDocument-poeticWork": None,
    "textDocument-preprint": None,
    "textDocument-report": {
        "page-2": [
            {
                "section": "organization_detail",
                "title": "Organization Details",
                "component": "OrganizationDetailsComponent",
            },
            {
                "section": "book_volume_pages",
                "title": "Volume & Pages",
                "component": "BookVolumePagesComponent",
            },
            {
                "section": "publisher",
                "title": "Publisher",
                "component": "PublisherComponent",
            },
            {"section": "series", "title": "Series", "component": "SeriesComponent"},
        ]
    },
    "textDocument-review": {"page-2": [{"same_as": "textDocument-journalArticle"}]},
    "textDocument-technicalStandard": None,
    "textDocument-thesis": {"4": ["thesis_detail"]},
    "textDocument-whitePaper": {"page-2": [{"same_as": "textDocument-report"}]},
    "textDocument-workingPaper": {"page-2": [{"same_as": "textDocument-report"}]},
    "textDocument-other": None,
    "other": None,
    "other-catalog": None,
    "other-collection": None,
    "other-event": None,
    "other-interactiveResource": None,
    "other-notes": None,
    "other-patent": None,
    "other-peerReview": None,
    "other-physicalObject": None,
    "other-workflow": None,
}

INVENIO_MODULAR_DEPOSIT_FORM_LABEL_MODIFICATIONS = {
    "audiovisual": {"metadata.title": None},
    "audiovisual-audioRecording": {"metadata.title": "Recording title"},
    "audiovisual-documentary": {"metadata.title": "Documentary title"},
    "audiovisual-interviewRecording": {"metadata.title": "Interview title"},
    "audiovisual-musicalRecording": {"metadata.title": "Recording title"},
    "audiovisual-other": {"metadata.title": None},
    "audiovisual-performance": {"metadata.title": "Performance title"},
    "audiovisual-podcastEpisode": {"metadata.title": "Episode title"},
    "audiovisual-videoRecording": {"metadata.title": "Recording title"},
    "dataset": {"metadata.title": "Dataset title"},
    "image": {"metadata.title": "Image title"},
    "image-chart": {"metadata.title": "Chart title"},
    "image-diagram": {"metadata.title": "Diagram title"},
    "image-figure": {"metadata.title": "Figure title"},
    "image-map": {"metadata.title": "Map title"},
    "image-visualArt": {"metadata.title": "Artwork title"},
    "image-photograph": {"metadata.title": "Photograph title"},
    "image-other": {"metadata.title": "Image title"},
    "instructionalResource": {"metadata.title": "Resource title"},
    "instructionalResource-curriculum": {"metadata.title": "Curriculum title"},
    "instructionalResource-lessonPlan": {"metadata.title": "Lesson plan title"},
    "instructionalResource-other": {"metadata.title": "Resource title"},
    "instructionalResource-syllabus": {"metadata.title": "Syllabus title"},
    "presentation": {"metadata.title": "Presentation title"},
    "presentation-conferencePaper": {"metadata.title": "Paper title"},
    "presentation-conferencePoster": {"metadata.title": "Poster title"},
    "presentation-presentationText": {"metadata.title": "Presentation title"},
    "presentation-slides": {"metadata.title": "Presentation title"},
    "presentation-other": {"metadata.title": "Presentation title"},
    "software": {"metadata.title": "Software name"},
    "software-3DModel": {"metadata.title": "Model title"},
    "software-application": {"metadata.title": "Application name"},
    "software-computationalModel": {"metadata.title": "Model title"},
    "software-computationalNotebook": {"metadata.title": "Notebook name"},
    "software-service": {"metadata.title": "Service name"},
    "software-other": {"metadata.title": "Software name"},
    "textDocument": {"metadata.title": "Document title"},
    "textDocument-abstract": {"metadata.title": "Abstract title"},
    "textDocument-bibliography": {"metadata.title": "Bibliography title"},
    "textDocument-blogPost": {"metadata.title": "Post title"},
    "textDocument-book": {"metadata.title": "Book title"},
    "textDocument-bookSection": {"metadata.title": "Chapter/section title"},
    "textDocument-conferenceProceeding": {"metadata.title": None},
    "textDocument-dataManagementPlan": {"metadata.title": "Plan title"},
    "textDocument-documentation": {"metadata.title": "Documentation title"},
    "textDocument-editorial": {
        "metadata.title": "Editorial title",
        "custom_fields.journal:journal.title": "Newspaper/periodical name",
        "custom_fields.journal:journal.pages": "Article pages",
    },
    "textDocument-essay": {"metadata.title": "Essay title"},
    "textDocument-interviewTranscript": {"metadata.title": "Interview title"},
    "textDocument-journalArticle": {
        "metadata.title": "Article title",
        "custom_fields.journal:journal.pages": "Article pages",
    },
    "textDocument-legalComment": {"metadata.title": "Comment title"},
    "textDocument-legalResponse": {"metadata.title": "Response title"},
    "textDocument-magazineArticle": {
        "metadata.title": "Article title",
        "custom_fields.journal:journal.title": "Magazine/periodical title",
        "custom_fields.journal:journal.pages": "Article pages",
    },
    "textDocument-monograph": {"metadata.title": "Monograph title"},
    "textDocument-newspaperArticle": {
        "metadata.title": "Article title",
        "custom_fields.journal:journal.title": "Newspaper/periodical name",
        "custom_fields.journal:journal.pages": "Article pages",
    },
    "textDocument-onlinePublication": {"metadata.title": None},
    "textDocument-poeticWork": {"metadata.title": "Poem title"},
    "textDocument-preprint": {"metadata.title": "Preprint title"},
    "textDocument-report": {"metadata.title": "Report title"},
    "textDocument-review": {
        "metadata.title": "Review title",
        "custom_fields.journal:journal.title": "Magazine/periodical title",
        "custom_fields.journal:journal.pages": "Review pages",
    },
    "textDocument-technicalStandard": {"metadata.title": "Standard title"},
    "textDocument-thesis": {"metadata.title": "Thesis/dissertation title"},
    "textDocument-whitePaper": {"metadata.title": "White paper title"},
    "textDocument-workingPaper": {"metadata.title": "Working paper title"},
    "textDocument-other": {"metadata.title": "Document title"},
    "other": {"metadata.title": None},
    "other-catalog": {"metadata.title": "Catalog title"},
    "other-collection": {"metadata.title": "Collection title"},
    "other-event": {"metadata.title": "Event title"},
    "other-interactiveResource": {"metadata.title": "Resource title"},
    "other-notes": {"metadata.title": None},
    "other-patent": {"metadata.title": "Patent title"},
    "other-peerReview": {"metadata.title": "Review title"},
    "other-physicalObject": {"metadata.title": "Object title"},
    "other-workflow": {"metadata.title": "Workflow title"},
}

INVENIO_MODULAR_DEPOSIT_FORM_PRIORITY_FIELD_VALUES = {
    "audiovisual-audioRecording": {"metadata.creators.role": None}
}

INVENIO_MODULAR_DEPOSIT_FORM_EXTRA_REQUIRED_FIELDS = {
    "textDocument-journalArticle": ["custom_fields.journal:journal.title"]
}

INVENIO_MODULAR_DEPOSIT_FORM_PIDS_OVERRIDES = {
    "doi": {
        "field_label": "Digital Object Identifier",
        "pid_placeholder": _("Copy/paste your existing DOI here..."),
        "btn_label_discard_pid": _("Discard the reserved DOI."),
        "btn_label_get_pid": _("Get a DOI now!"),
        "managed_help_text": _(
            "Reserve a DOI by pressing the button "
            "(so it can be included in files prior to upload). "
            "The DOI is registered when your upload is published."
        ),
        "unmanaged_help_text": _(
            "Only enter a DOI if you have already registered one "
            "with a DOI provider. If you have not registered one "
            "we will register a DOI for you when your upload is published."
        ),
    }
}

#  STATS
# ======
# See https://invenio-stats.readthedocs.io/en/latest/configuration.html

# FIXME: Enable the config below when stats is upgraded to >4.0.0
# STATS_EVENTS = {
#     "file-download": {
#         "templates": "invenio_rdm_records.records.stats.templates.events.file_download",
#         "event_builders": [
#             "invenio_rdm_records.resources.stats.file_download_event_builder",
#             "invenio_rdm_records.resources.stats.check_if_via_api",
#         ],
#         "cls": EventsIndexer,
#         "params": {
#             "preprocessors": [flag_robots, anonymize_user, build_file_unique_id]
#         },
#     },
#     "record-view": {
#         "templates": "invenio_rdm_records.records.stats.templates.events.record_view",
#         "event_builders": [
#             "invenio_rdm_records.resources.stats.record_view_event_builder",
#             "invenio_rdm_records.resources.stats.check_if_via_api",
#             "invenio_rdm_records.resources.stats.drop_if_via_api",
#         ],
#         "cls": EventsIndexer,
#         "params": {
#             "preprocessors": [flag_robots, anonymize_user, build_record_unique_id],
#         },
#     },
# }

# STATS_AGGREGATIONS = {
#     "file-download-agg": {
#         "templates": "invenio_rdm_records.records.stats.templates.aggregations.aggr_file_download",
#         "cls": StatAggregator,
#         "params": {
#             "event": "file-download",
#             "field": "unique_id",
#             "interval": "day",
#             "index_interval": "month",
#             "copy_fields": {
#                 "file_id": "file_id",
#                 "file_key": "file_key",
#                 "bucket_id": "bucket_id",
#                 "recid": "recid",
#                 "parent_recid": "parent_recid",
#             },
#             "metric_fields": {
#                 "unique_count": (
#                     "cardinality",
#                     "unique_session_id",
#                     {"precision_threshold": 1000},
#                 ),
#                 "volume": ("sum", "size", {}),
#             },
#         },
#     },
#     "record-view-agg": {
#         "templates": "invenio_rdm_records.records.stats.templates.aggregations.aggr_record_view",
#         "cls": StatAggregator,
#         "params": {
#             "event": "record-view",
#             "field": "unique_id",
#             "interval": "day",
#             "index_interval": "month",
#             "copy_fields": {
#                 "recid": "recid",
#                 "parent_recid": "parent_recid",
#                 "via_api": "via_api",
#             },
#             "metric_fields": {
#                 "unique_count": (
#                     "cardinality",
#                     "unique_session_id",
#                     {"precision_threshold": 1000},
#                 ),
#             },
#             "query_modifiers": [lambda query, **_: query.filter("term", via_api=False)],
#         },
#     },
# }

# FIXME: restrict this permission to authorized users with the proper role
AllowAllPermission = type(
    "Allow",
    (),
    {"can": lambda self: True, "allows": lambda *args: True},
)()

def AllowAllPermissionFactory(obj_id, action):
    return AllowAllPermission

STATS_QUERIES = {
    "record-view": {
        "cls": TermsQuery,
        "permission_factory": AllowAllPermissionFactory,
        "params": {
            "index": "stats-record-view",
            "doc_type": "record-view-day-aggregation",
            "copy_fields": {
                "recid": "recid",
                "parent_recid": "parent_recid",
            },
            "query_modifiers": [],
            "required_filters": {
                "recid": "recid",
            },
            "metric_fields": {
                "views": ("sum", "count", {}),
                "unique_views": ("sum", "unique_count", {}),
            },
        },
    },
    "record-view-all-versions": {
        "cls": TermsQuery,
        "permission_factory": AllowAllPermissionFactory,
        "params": {
            "index": "stats-record-view",
            "doc_type": "record-view-day-aggregation",
            "copy_fields": {
                "parent_recid": "parent_recid",
            },
            "query_modifiers": [],
            "required_filters": {
                "parent_recid": "parent_recid",
            },
            "metric_fields": {
                "views": ("sum", "count", {}),
                "unique_views": ("sum", "unique_count", {}),
            },
        },
    },
    "record-download": {
        "cls": TermsQuery,
        "permission_factory": AllowAllPermissionFactory,
        "params": {
            "index": "stats-file-download",
            "doc_type": "file-download-day-aggregation",
            "copy_fields": {
                "recid": "recid",
                "parent_recid": "parent_recid",
            },
            "query_modifiers": [],
            "required_filters": {
                "recid": "recid",
            },
            "metric_fields": {
                "downloads": ("sum", "count", {}),
                "unique_downloads": ("sum", "unique_count", {}),
                "data_volume": ("sum", "volume", {}),
            },
        },
    },
    "record-download-all-versions": {
        "cls": TermsQuery,
        "permission_factory": AllowAllPermissionFactory,
        "params": {
            "index": "stats-file-download",
            "doc_type": "file-download-day-aggregation",
            "copy_fields": {
                "parent_recid": "parent_recid",
            },
            "query_modifiers": [],
            "required_filters": {
                "parent_recid": "parent_recid",
            },
            "metric_fields": {
                "downloads": ("sum", "count", {}),
                "unique_downloads": ("sum", "unique_count", {}),
                "data_volume": ("sum", "volume", {}),
            },
        },
    },
}

STATS_PERMISSION_FACTORY = permissions_policy_lookup_factory
