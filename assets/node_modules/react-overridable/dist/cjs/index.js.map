{"version":3,"file":"index.js","sources":["../../src/overridable.js","../../src/store.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\n\n// create a new context with an empty map of overridden components as default value.\nexport const OverridableContext = React.createContext({});\n\n/**\n * Function to wrap a React component and override default props.\n * @param Component the component to wrap\n * @param extraProps the new props that will override or will be added to the wrapped component\n * @returns the wrapper component\n */\nexport function parametrize(Component, extraProps) {\n  const ParametrizedComponent = props => {\n    // handle deferred prop calculation\n    if (typeof extraProps === 'function') {\n      extraProps = extraProps(props);\n    }\n\n    // Store the original component in an attribute\n    if (Component.originalComponent) {\n      Component = Component.originalComponent;\n    }\n\n    // overrideProps override props if there is a name collision\n    const {children, ...attrProps} = {...props, ...extraProps};\n    return React.createElement(Component, attrProps, children);\n  };\n\n  const name = Component.displayName || Component.name;\n  ParametrizedComponent.displayName = `Parametrized(${name})`;\n  return ParametrizedComponent;\n}\n\n/**\n * React component to enable overriding children when rendering.\n */\nfunction Overridable({id, children, ...restProps}) {\n  const overriddenComponents = useContext(OverridableContext);\n  const child = children ? React.Children.only(children) : null;\n  const childProps = child ? child.props : {};\n\n  if (id in overriddenComponents) {\n    // If there's an override, we replace the component's content with the override + props\n    const Overridden = overriddenComponents[id];\n    return React.createElement(Overridden, {...childProps, ...restProps});\n  } else if (child) {\n    // No override? Clone the Overridable component's original children\n    return React.cloneElement(child, childProps);\n  } else {\n    return null;\n  }\n}\n\nOverridable.propTypes = {\n  /** The children of the component */\n  children: PropTypes.node,\n  /** The id that the component will be bound to (normally component's name) */\n  id: PropTypes.string,\n};\n\nOverridable.defaultProps = {\n  id: null,\n  children: null,\n};\n\n/**\n * High-order component to override an existing React component and provide a new component instead.\n */\nOverridable.component = (id, Component) => {\n  const Overridden = ({children, ...props}) => {\n    const overriddenComponents = useContext(OverridableContext);\n    const overriddenComponent = overriddenComponents[id];\n    return React.createElement(overriddenComponent || Component, props, children);\n  };\n  Overridden.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  };\n  Overridden.defaultProps = {\n    children: null,\n  };\n  const name = Component.displayName || Component.name;\n  Overridden.displayName = `Overridable(${name})`;\n  Overridden.originalComponent = Component;\n  return Overridden;\n};\n\nexport default Overridable;\n","/**\n * Simple utility class responsible of keeping track of all overridden components.\n * @constructor object containing the initial map `id: Component` of overridden components\n */\nexport class OverriddenComponentRepository {\n  constructor(overriddenComponents) {\n    this.components = overriddenComponents || {};\n  }\n\n  add = (id, Component) => {\n    this.components[id] = Component;\n  };\n\n  get = id => {\n    return this.components[id];\n  };\n\n  getAll = () => {\n    return {...this.components};\n  };\n\n  clear = () => {\n    this.components = {};\n  };\n}\n\nexport const overrideStore = new OverriddenComponentRepository();\n"],"names":["OverridableContext","React","createContext","parametrize","Component","extraProps","ParametrizedComponent","props","originalComponent","children","attrProps","createElement","name","displayName","Overridable","id","restProps","overriddenComponents","useContext","child","Children","only","childProps","Overridden","cloneElement","propTypes","PropTypes","node","string","defaultProps","component","overriddenComponent","oneOfType","func","OverriddenComponentRepository","constructor","components","overrideStore"],"mappings":"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"}